Rules never reduced

  233 namespace_name: original_namespace_name

  244 namespace_alias: identifier

  497 EXPORT_opt: /* empty */


State 0 conflicts: 1 shift/reduce
State 3 conflicts: 2 shift/reduce
State 5 conflicts: 5 shift/reduce
State 30 conflicts: 1 shift/reduce
State 46 conflicts: 1 shift/reduce
State 49 conflicts: 13 reduce/reduce
State 55 conflicts: 1 shift/reduce
State 79 conflicts: 1 shift/reduce
State 99 conflicts: 5 shift/reduce
State 108 conflicts: 1 shift/reduce
State 109 conflicts: 1 shift/reduce
State 112 conflicts: 1 shift/reduce
State 113 conflicts: 2 shift/reduce
State 136 conflicts: 1 shift/reduce
State 137 conflicts: 1 shift/reduce
State 156 conflicts: 4 shift/reduce
State 157 conflicts: 2 shift/reduce
State 175 conflicts: 2 shift/reduce
State 197 conflicts: 1 shift/reduce
State 207 conflicts: 1 shift/reduce
State 219 conflicts: 1 shift/reduce
State 223 conflicts: 1 shift/reduce
State 224 conflicts: 1 shift/reduce
State 235 conflicts: 2 shift/reduce
State 238 conflicts: 1 shift/reduce
State 244 conflicts: 1 reduce/reduce
State 245 conflicts: 1 reduce/reduce
State 258 conflicts: 2 shift/reduce
State 265 conflicts: 1 shift/reduce
State 279 conflicts: 2 shift/reduce
State 300 conflicts: 1 shift/reduce
State 310 conflicts: 1 shift/reduce
State 345 conflicts: 1 shift/reduce, 3 reduce/reduce
State 346 conflicts: 1 shift/reduce
State 347 conflicts: 1 shift/reduce
State 350 conflicts: 1 shift/reduce
State 352 conflicts: 1 shift/reduce
State 366 conflicts: 1 shift/reduce
State 368 conflicts: 1 shift/reduce
State 397 conflicts: 1 shift/reduce
State 408 conflicts: 1 shift/reduce
State 470 conflicts: 1 shift/reduce
State 471 conflicts: 1 shift/reduce
State 502 conflicts: 4 reduce/reduce
State 533 conflicts: 1 shift/reduce
State 537 conflicts: 2 shift/reduce
State 542 conflicts: 2 shift/reduce
State 544 conflicts: 1 shift/reduce
State 588 conflicts: 2 shift/reduce
State 619 conflicts: 1 shift/reduce
State 620 conflicts: 1 shift/reduce
State 670 conflicts: 2 shift/reduce
State 671 conflicts: 2 shift/reduce
State 675 conflicts: 2 shift/reduce
State 676 conflicts: 2 shift/reduce
State 682 conflicts: 1 shift/reduce
State 710 conflicts: 2 shift/reduce
State 754 conflicts: 2 shift/reduce
State 759 conflicts: 2 shift/reduce
State 788 conflicts: 1 shift/reduce
State 826 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 typedef_name: TYPEDEF_NAME

    2 namespace_name: original_namespace_name

    3 original_namespace_name: NAMESPACE_NAME

    4 class_name: CLASS_NAME
    5           | template_id

    6 enum_name: ENUM_NAME

    7 template_name: TEMPLATE_NAME

    8 identifier: IDENTIFIER

    9 literal: integer_literal
   10        | character_literal
   11        | floating_literal
   12        | string_literal
   13        | boolean_literal

   14 integer_literal: INTEGER

   15 character_literal: CHARACTER

   16 floating_literal: FLOATING

   17 string_literal: STRING

   18 boolean_literal: TRUE
   19                | FALSE

   20 translation_unit: declaration_seq_opt

   21 primary_expression: literal
   22                   | THIS
   23                   | '(' expression ')'
   24                   | id_expression

   25 id_expression: unqualified_id
   26              | qualified_id

   27 unqualified_id: identifier
   28               | operator_function_id
   29               | conversion_function_id
   30               | '~' class_name

   31 qualified_id: nested_name_specifier unqualified_id

   32 nested_name_specifier: class_name COLONCOLON nested_name_specifier
   33                      | class_name COLONCOLON

   34 postfix_expression: primary_expression
   35                   | postfix_expression '[' expression ']'
   36                   | postfix_expression '(' expression_list_opt ')'
   37                   | postfix_expression '.' TEMPLATE COLONCOLON id_expression
   38                   | postfix_expression '.' TEMPLATE id_expression
   39                   | postfix_expression '.' COLONCOLON id_expression
   40                   | postfix_expression '.' id_expression
   41                   | postfix_expression ARROW TEMPLATE COLONCOLON id_expression
   42                   | postfix_expression ARROW TEMPLATE id_expression
   43                   | postfix_expression ARROW COLONCOLON id_expression
   44                   | postfix_expression ARROW id_expression
   45                   | postfix_expression PLUSPLUS
   46                   | postfix_expression MINUSMINUS
   47                   | DYNAMIC_CAST '<' type_id '>' '(' expression ')'
   48                   | STATIC_CAST '<' type_id '>' '(' expression ')'
   49                   | REINTERPRET_CAST '<' type_id '>' '(' expression ')'
   50                   | CONST_CAST '<' type_id '>' '(' expression ')'
   51                   | TYPEID '(' expression ')'
   52                   | TYPEID '(' type_id ')'

   53 expression_list: assignment_expression
   54                | expression_list ',' assignment_expression

   55 unary_expression: postfix_expression
   56                 | PLUSPLUS cast_expression
   57                 | MINUSMINUS cast_expression
   58                 | '*' cast_expression
   59                 | '&' cast_expression
   60                 | unary_operator cast_expression
   61                 | SIZEOF unary_expression
   62                 | SIZEOF '(' type_id ')'
   63                 | new_expression
   64                 | delete_expression

   65 unary_operator: '+'
   66               | '-'
   67               | '!'
   68               | '~'

   69 new_expression: NEW new_placement_opt new_type_id new_initializer_opt
   70               | COLONCOLON NEW new_placement_opt new_type_id new_initializer_opt
   71               | NEW new_placement_opt '(' type_id ')' new_initializer_opt
   72               | COLONCOLON NEW new_placement_opt '(' type_id ')' new_initializer_opt

   73 new_placement: '(' expression_list ')'

   74 new_type_id: type_specifier_seq new_declarator_opt

   75 new_declarator: ptr_operator new_declarator_opt
   76               | direct_new_declarator

   77 direct_new_declarator: '[' expression ']'
   78                      | direct_new_declarator '[' constant_expression ']'

   79 new_initializer: '(' expression_list_opt ')'

   80 delete_expression: DELETE cast_expression
   81                  | COLONCOLON DELETE cast_expression
   82                  | DELETE '[' ']' cast_expression
   83                  | COLONCOLON DELETE '[' ']' cast_expression

   84 cast_expression: unary_expression
   85                | '(' type_id ')' cast_expression

   86 pm_expression: cast_expression
   87              | pm_expression DOTSTAR cast_expression
   88              | pm_expression ARROWSTAR cast_expression

   89 multiplicative_expression: pm_expression
   90                          | multiplicative_expression '*' pm_expression
   91                          | multiplicative_expression '/' pm_expression
   92                          | multiplicative_expression '%' pm_expression

   93 additive_expression: multiplicative_expression
   94                    | additive_expression '+' multiplicative_expression
   95                    | additive_expression '-' multiplicative_expression

   96 shift_expression: additive_expression
   97                 | shift_expression SL additive_expression
   98                 | shift_expression SR additive_expression

   99 relational_expression: shift_expression
  100                      | relational_expression '<' shift_expression
  101                      | relational_expression '>' shift_expression
  102                      | relational_expression LTEQ shift_expression
  103                      | relational_expression GTEQ shift_expression

  104 equality_expression: relational_expression
  105                    | equality_expression EQ relational_expression
  106                    | equality_expression NOTEQ relational_expression

  107 and_expression: equality_expression
  108               | and_expression '&' equality_expression

  109 exclusive_or_expression: and_expression
  110                        | exclusive_or_expression '^' and_expression

  111 inclusive_or_expression: exclusive_or_expression
  112                        | inclusive_or_expression '|' exclusive_or_expression

  113 logical_and_expression: inclusive_or_expression
  114                       | logical_and_expression ANDAND inclusive_or_expression

  115 logical_or_expression: logical_and_expression
  116                      | logical_or_expression OROR logical_and_expression

  117 conditional_expression: logical_or_expression
  118                       | logical_or_expression '?' expression ':' assignment_expression

  119 assignment_expression: conditional_expression
  120                      | logical_or_expression assignment_operator assignment_expression
  121                      | throw_expression

  122 assignment_operator: '='
  123                    | MULEQ
  124                    | DIVEQ
  125                    | MODEQ
  126                    | ADDEQ
  127                    | SUBEQ
  128                    | SREQ
  129                    | SLEQ
  130                    | ANDEQ
  131                    | XOREQ
  132                    | OREQ

  133 expression: assignment_expression
  134           | expression ',' assignment_expression

  135 constant_expression: conditional_expression

  136 statement: labeled_statement
  137          | expression_statement
  138          | compound_statement
  139          | selection_statement
  140          | iteration_statement
  141          | jump_statement
  142          | declaration_statement
  143          | try_block

  144 labeled_statement: identifier ':' statement
  145                  | CASE constant_expression ':' statement
  146                  | DEFAULT ':' statement

  147 expression_statement: expression_opt ';'

  148 compound_statement: '{' statement_seq_opt '}'

  149 statement_seq: statement
  150              | statement_seq statement

  151 selection_statement: IF '(' condition ')' statement
  152                    | IF '(' condition ')' statement ELSE statement
  153                    | SWITCH '(' condition ')' statement

  154 condition: expression
  155          | type_specifier_seq declarator '=' assignment_expression

  156 iteration_statement: WHILE '(' condition ')' statement
  157                    | DO statement WHILE '(' expression ')' ';'
  158                    | FOR '(' for_init_statement condition_opt ';' expression_opt ')' statement

  159 for_init_statement: expression_statement
  160                   | simple_declaration

  161 jump_statement: BREAK ';'
  162               | CONTINUE ';'
  163               | RETURN expression_opt ';'
  164               | GOTO identifier ';'

  165 declaration_statement: block_declaration

  166 declaration_seq: declaration
  167                | declaration_seq declaration

  168 declaration: block_declaration
  169            | function_definition
  170            | template_declaration
  171            | explicit_instantiation
  172            | explicit_specialization
  173            | linkage_specification
  174            | namespace_definition

  175 block_declaration: simple_declaration
  176                  | asm_definition
  177                  | namespace_alias_definition
  178                  | using_declaration
  179                  | using_directive

  180 simple_declaration: decl_specifier_seq init_declarator_list ';'
  181                   | decl_specifier_seq ';'

  182 decl_specifier: storage_class_specifier
  183               | type_specifier
  184               | function_specifier
  185               | FRIEND
  186               | TYPEDEF

  187 decl_specifier_seq: decl_specifier
  188                   | decl_specifier_seq decl_specifier

  189 storage_class_specifier: AUTO
  190                        | REGISTER
  191                        | STATIC
  192                        | EXTERN
  193                        | MUTABLE

  194 function_specifier: INLINE
  195                   | VIRTUAL
  196                   | EXPLICIT

  197 type_specifier: simple_type_specifier
  198               | class_specifier
  199               | enum_specifier
  200               | elaborated_type_specifier
  201               | cv_qualifier

  202 simple_type_specifier: type_name
  203                      | nested_name_specifier type_name
  204                      | COLONCOLON nested_name_specifier_opt type_name
  205                      | CHAR
  206                      | WCHAR_T
  207                      | BOOL
  208                      | SHORT
  209                      | INT
  210                      | LONG
  211                      | SIGNED
  212                      | UNSIGNED
  213                      | FLOAT
  214                      | DOUBLE
  215                      | VOID

  216 type_name: class_name
  217          | enum_name
  218          | typedef_name

  219 elaborated_type_specifier: class_key COLONCOLON nested_name_specifier identifier
  220                          | class_key COLONCOLON identifier
  221                          | ENUM COLONCOLON nested_name_specifier identifier
  222                          | ENUM COLONCOLON identifier
  223                          | ENUM nested_name_specifier identifier
  224                          | TYPENAME COLONCOLON_opt nested_name_specifier identifier
  225                          | TYPENAME COLONCOLON_opt nested_name_specifier identifier '<' template_argument_list '>'

  226 enum_name: identifier

  227 enum_specifier: ENUM identifier '{' enumerator_list_opt '}'

  228 enumerator_list: enumerator_definition
  229                | enumerator_list ',' enumerator_definition

  230 enumerator_definition: enumerator
  231                      | enumerator '=' constant_expression

  232 enumerator: identifier

  233 namespace_name: original_namespace_name
  234               | namespace_alias

  235 original_namespace_name: identifier

  236 namespace_definition: named_namespace_definition
  237                     | unnamed_namespace_definition

  238 named_namespace_definition: original_namespace_definition
  239                           | extension_namespace_definition

  240 original_namespace_definition: NAMESPACE identifier '{' namespace_body '}'

  241 extension_namespace_definition: NAMESPACE original_namespace_name '{' namespace_body '}'

  242 unnamed_namespace_definition: NAMESPACE '{' namespace_body '}'

  243 namespace_body: declaration_seq_opt

  244 namespace_alias: identifier

  245 namespace_alias_definition: NAMESPACE identifier '=' qualified_namespace_specifier ';'

  246 qualified_namespace_specifier: COLONCOLON nested_name_specifier namespace_name
  247                              | COLONCOLON namespace_name
  248                              | nested_name_specifier namespace_name
  249                              | namespace_name

  250 using_declaration: USING TYPENAME COLONCOLON nested_name_specifier unqualified_id ';'
  251                  | USING TYPENAME nested_name_specifier unqualified_id ';'
  252                  | USING COLONCOLON nested_name_specifier unqualified_id ';'
  253                  | USING nested_name_specifier unqualified_id ';'
  254                  | USING COLONCOLON unqualified_id ';'

  255 using_directive: USING NAMESPACE COLONCOLON nested_name_specifier namespace_name ';'
  256                | USING NAMESPACE COLONCOLON namespace_name ';'
  257                | USING NAMESPACE nested_name_specifier namespace_name ';'
  258                | USING NAMESPACE namespace_name ';'

  259 asm_definition: ASM '(' string_literal ')' ';'

  260 linkage_specification: EXTERN string_literal '{' declaration_seq_opt '}'
  261                      | EXTERN string_literal declaration

  262 init_declarator_list: init_declarator
  263                     | init_declarator_list ',' init_declarator

  264 init_declarator: declarator initializer_opt

  265 declarator: direct_declarator
  266           | ptr_operator declarator

  267 direct_declarator: declarator_id
  268                  | direct_declarator '(' parameter_declaration_clause ')' cv_qualifier_seq exception_specification
  269                  | direct_declarator '(' parameter_declaration_clause ')' cv_qualifier_seq
  270                  | direct_declarator '(' parameter_declaration_clause ')' exception_specification
  271                  | direct_declarator '(' parameter_declaration_clause ')'
  272                  | CLASS_NAME '(' parameter_declaration_clause ')'
  273                  | CLASS_NAME COLONCOLON declarator_id '(' parameter_declaration_clause ')'
  274                  | CLASS_NAME COLONCOLON CLASS_NAME '(' parameter_declaration_clause ')'
  275                  | direct_declarator '[' constant_expression_opt ']'
  276                  | '(' declarator ')'

  277 ptr_operator: '*'
  278             | '*' cv_qualifier_seq
  279             | '&'
  280             | nested_name_specifier '*'
  281             | nested_name_specifier '*' cv_qualifier_seq
  282             | COLONCOLON nested_name_specifier '*'
  283             | COLONCOLON nested_name_specifier '*' cv_qualifier_seq

  284 cv_qualifier_seq: cv_qualifier
  285                 | cv_qualifier cv_qualifier_seq

  286 cv_qualifier: CONST
  287             | VOLATILE

  288 declarator_id: id_expression
  289              | COLONCOLON id_expression
  290              | COLONCOLON nested_name_specifier type_name
  291              | COLONCOLON type_name

  292 type_id: type_specifier_seq abstract_declarator_opt

  293 type_specifier_seq: type_specifier type_specifier_seq_opt

  294 abstract_declarator: ptr_operator abstract_declarator_opt
  295                    | direct_abstract_declarator

  296 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause ')' cv_qualifier_seq exception_specification
  297                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')' cv_qualifier_seq
  298                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')' exception_specification
  299                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')'
  300                           | direct_abstract_declarator_opt '[' constant_expression_opt ']'
  301                           | '(' abstract_declarator ')'

  302 parameter_declaration_clause: parameter_declaration_list ELLIPSIS
  303                             | parameter_declaration_list
  304                             | ELLIPSIS
  305                             | /* empty */
  306                             | parameter_declaration_list ',' ELLIPSIS

  307 parameter_declaration_list: parameter_declaration
  308                           | parameter_declaration_list ',' parameter_declaration

  309 parameter_declaration: decl_specifier_seq declarator
  310                      | decl_specifier_seq declarator '=' assignment_expression
  311                      | decl_specifier_seq abstract_declarator_opt
  312                      | decl_specifier_seq abstract_declarator_opt '=' assignment_expression

  313 function_definition: declarator ctor_initializer_opt function_body
  314                    | decl_specifier_seq declarator ctor_initializer_opt function_body
  315                    | declarator function_try_block
  316                    | decl_specifier_seq declarator function_try_block

  317 function_body: compound_statement

  318 initializer: '=' initializer_clause
  319            | '(' expression_list ')'

  320 initializer_clause: assignment_expression
  321                   | '{' initializer_list COMMA_opt '}'
  322                   | '{' '}'

  323 initializer_list: initializer_clause
  324                 | initializer_list ',' initializer_clause

  325 class_specifier: class_head '{' member_specification_opt '}'

  326 class_head: class_key identifier
  327           | class_key identifier base_clause
  328           | class_key nested_name_specifier identifier
  329           | class_key nested_name_specifier identifier base_clause

  330 class_key: CLASS
  331          | STRUCT
  332          | UNION

  333 member_specification: member_declaration member_specification_opt
  334                     | access_specifier ':' member_specification_opt

  335 member_declaration: decl_specifier_seq member_declarator_list ';'
  336                   | decl_specifier_seq ';'
  337                   | member_declarator_list ';'
  338                   | ';'
  339                   | function_definition SEMICOLON_opt
  340                   | qualified_id ';'
  341                   | using_declaration

  342 member_declarator_list: member_declarator
  343                       | member_declarator_list ',' member_declarator

  344 member_declarator: /* empty */
  345                  | declarator
  346                  | declarator pure_specifier
  347                  | declarator constant_initializer
  348                  | identifier ':' constant_expression

  349 pure_specifier: '=' '0'

  350 constant_initializer: '=' constant_expression

  351 base_clause: ':' base_specifier_list

  352 base_specifier_list: base_specifier
  353                    | base_specifier_list ',' base_specifier

  354 base_specifier: COLONCOLON nested_name_specifier class_name
  355               | COLONCOLON class_name
  356               | nested_name_specifier class_name
  357               | class_name
  358               | VIRTUAL access_specifier COLONCOLON nested_name_specifier_opt class_name
  359               | VIRTUAL access_specifier nested_name_specifier_opt class_name
  360               | VIRTUAL COLONCOLON nested_name_specifier_opt class_name
  361               | VIRTUAL nested_name_specifier_opt class_name
  362               | access_specifier VIRTUAL COLONCOLON nested_name_specifier_opt class_name
  363               | access_specifier VIRTUAL nested_name_specifier_opt class_name
  364               | access_specifier COLONCOLON nested_name_specifier_opt class_name
  365               | access_specifier nested_name_specifier_opt class_name

  366 access_specifier: PRIVATE
  367                 | PROTECTED
  368                 | PUBLIC

  369 conversion_function_id: OPERATOR conversion_type_id

  370 conversion_type_id: type_specifier_seq conversion_declarator_opt

  371 conversion_declarator: ptr_operator conversion_declarator_opt

  372 ctor_initializer: ':' mem_initializer_list

  373 mem_initializer_list: mem_initializer
  374                     | mem_initializer ',' mem_initializer_list

  375 mem_initializer: mem_initializer_id '(' expression_list_opt ')'

  376 mem_initializer_id: COLONCOLON nested_name_specifier class_name
  377                   | COLONCOLON class_name
  378                   | nested_name_specifier class_name
  379                   | class_name
  380                   | identifier

  381 operator_function_id: OPERATOR operator

  382 operator: NEW
  383         | DELETE
  384         | NEW '[' ']'
  385         | DELETE '[' ']'
  386         | '+'
  387         | '_'
  388         | '*'
  389         | '/'
  390         | '%'
  391         | '^'
  392         | '&'
  393         | '|'
  394         | '~'
  395         | '!'
  396         | '='
  397         | '<'
  398         | '>'
  399         | ADDEQ
  400         | SUBEQ
  401         | MULEQ
  402         | DIVEQ
  403         | MODEQ
  404         | XOREQ
  405         | ANDEQ
  406         | OREQ
  407         | SL
  408         | SR
  409         | SREQ
  410         | SLEQ
  411         | EQ
  412         | NOTEQ
  413         | LTEQ
  414         | GTEQ
  415         | ANDAND
  416         | OROR
  417         | PLUSPLUS
  418         | MINUSMINUS
  419         | ','
  420         | ARROWSTAR
  421         | ARROW
  422         | '(' ')'
  423         | '[' ']'

  424 template_declaration: EXPORT_opt TEMPLATE '<' template_parameter_list '>' declaration

  425 template_parameter_list: template_parameter
  426                        | template_parameter_list ',' template_parameter

  427 template_parameter: type_parameter
  428                   | parameter_declaration

  429 type_parameter: CLASS identifier
  430               | CLASS identifier '=' type_id
  431               | TYPENAME identifier
  432               | TYPENAME identifier '=' type_id
  433               | TEMPLATE '<' template_parameter_list '>' CLASS identifier
  434               | TEMPLATE '<' template_parameter_list '>' CLASS identifier '=' template_name

  435 template_id: template_name '<' template_argument_list '>'

  436 template_argument_list: template_argument
  437                       | template_argument_list ',' template_argument

  438 template_argument: assignment_expression
  439                  | type_id
  440                  | template_name

  441 explicit_instantiation: TEMPLATE declaration

  442 explicit_specialization: TEMPLATE '<' '>' declaration

  443 try_block: TRY compound_statement handler_seq

  444 function_try_block: TRY ctor_initializer_opt function_body handler_seq

  445 handler_seq: handler handler_seq_opt

  446 handler: CATCH '(' exception_declaration ')' compound_statement

  447 exception_declaration: type_specifier_seq declarator
  448                      | type_specifier_seq abstract_declarator
  449                      | type_specifier_seq
  450                      | ELLIPSIS

  451 throw_expression: THROW assignment_expression_opt

  452 exception_specification: THROW '(' type_id_list_opt ')'

  453 type_id_list: type_id
  454             | type_id_list ',' type_id

  455 declaration_seq_opt: /* empty */
  456                    | declaration_seq

  457 nested_name_specifier_opt: /* empty */
  458                          | nested_name_specifier

  459 expression_list_opt: /* empty */
  460                    | expression_list

  461 COLONCOLON_opt: /* empty */
  462               | COLONCOLON

  463 new_placement_opt: /* empty */
  464                  | new_placement

  465 new_initializer_opt: /* empty */
  466                    | new_initializer

  467 new_declarator_opt: /* empty */
  468                   | new_declarator

  469 expression_opt: /* empty */
  470               | expression

  471 statement_seq_opt: /* empty */
  472                  | statement_seq

  473 condition_opt: /* empty */
  474              | condition

  475 enumerator_list_opt: /* empty */
  476                    | enumerator_list

  477 initializer_opt: /* empty */
  478                | initializer

  479 constant_expression_opt: /* empty */
  480                        | constant_expression

  481 abstract_declarator_opt: /* empty */
  482                        | abstract_declarator

  483 type_specifier_seq_opt: /* empty */
  484                       | type_specifier_seq

  485 direct_abstract_declarator_opt: /* empty */
  486                               | direct_abstract_declarator

  487 ctor_initializer_opt: /* empty */
  488                     | ctor_initializer

  489 COMMA_opt: /* empty */
  490          | ','

  491 member_specification_opt: /* empty */
  492                         | member_specification

  493 SEMICOLON_opt: /* empty */
  494              | ';'

  495 conversion_declarator_opt: /* empty */
  496                          | conversion_declarator

  497 EXPORT_opt: /* empty */
  498           | EXPORT

  499 handler_seq_opt: /* empty */
  500                | handler_seq

  501 assignment_expression_opt: /* empty */
  502                          | assignment_expression

  503 type_id_list_opt: /* empty */
  504                 | type_id_list


Terminals, with rules where they appear

$end (0) 0
'!' (33) 67 395
'%' (37) 92 390
'&' (38) 59 108 279 392
'(' (40) 23 36 47 48 49 50 51 52 62 71 72 73 79 85 151 152 153 156
    157 158 259 268 269 270 271 272 273 274 276 296 297 298 299 301
    319 375 422 446 452
')' (41) 23 36 47 48 49 50 51 52 62 71 72 73 79 85 151 152 153 156
    157 158 259 268 269 270 271 272 273 274 276 296 297 298 299 301
    319 375 422 446 452
'*' (42) 58 90 277 278 280 281 282 283 388
'+' (43) 65 94 386
',' (44) 54 134 229 263 306 308 324 343 353 374 419 426 437 454 490
'-' (45) 66 95
'.' (46) 37 38 39 40
'/' (47) 91 389
'0' (48) 349
':' (58) 118 144 145 146 334 348 351 372
';' (59) 147 157 158 161 162 163 164 180 181 245 250 251 252 253 254
    255 256 257 258 259 335 336 337 338 340 494
'<' (60) 47 48 49 50 100 225 397 424 433 434 435 442
'=' (61) 122 155 231 245 310 312 318 349 350 396 430 432 434
'>' (62) 47 48 49 50 101 225 398 424 433 434 435 442
'?' (63) 118
'[' (91) 35 77 78 82 83 275 300 384 385 423
']' (93) 35 77 78 82 83 275 300 384 385 423
'^' (94) 110 391
'_' (95) 387
'{' (123) 148 227 240 241 242 260 321 322 325
'|' (124) 112 393
'}' (125) 148 227 240 241 242 260 321 322 325
'~' (126) 30 68 394
error (256)
IDENTIFIER (258) 8
INTEGER (259) 14
FLOATING (260) 16
CHARACTER (261) 15
STRING (262) 17
TYPEDEF_NAME (263) 1
CLASS_NAME (264) 4 272 273 274
ENUM_NAME (265) 6
ELLIPSIS (266) 302 304 306 450
COLONCOLON (267) 32 33 37 39 41 43 70 72 81 83 204 219 220 221 222
    246 247 250 252 254 255 256 273 274 282 283 289 290 291 354 355
    358 360 362 364 376 377 462
DOTSTAR (268) 87
ADDEQ (269) 126 399
SUBEQ (270) 127 400
MULEQ (271) 123 401
DIVEQ (272) 124 402
MODEQ (273) 125 403
XOREQ (274) 131 404
ANDEQ (275) 130 405
OREQ (276) 132 406
SL (277) 97 407
SR (278) 98 408
SREQ (279) 128 409
SLEQ (280) 129 410
EQ (281) 105 411
NOTEQ (282) 106 412
LTEQ (283) 102 413
GTEQ (284) 103 414
ANDAND (285) 114 415
OROR (286) 116 416
PLUSPLUS (287) 45 56 417
MINUSMINUS (288) 46 57 418
ARROWSTAR (289) 88 420
ARROW (290) 41 42 43 44 421
ASM (291) 259
AUTO (292) 189
BOOL (293) 207
BREAK (294) 161
CASE (295) 145
CATCH (296) 446
CHAR (297) 205
CLASS (298) 330 429 430 433 434
CONST (299) 286
CONST_CAST (300) 50
CONTINUE (301) 162
DEFAULT (302) 146
DELETE (303) 80 81 82 83 383 385
DO (304) 157
DOUBLE (305) 214
DYNAMIC_CAST (306) 47
ELSE (307) 152
ENUM (308) 221 222 223 227
EXPLICIT (309) 196
EXPORT (310) 498
EXTERN (311) 192 260 261
FALSE (312) 19
FLOAT (313) 213
FOR (314) 158
FRIEND (315) 185
GOTO (316) 164
IF (317) 151 152
INLINE (318) 194
INT (319) 209
LONG (320) 210
MUTABLE (321) 193
NAMESPACE (322) 240 241 242 245 255 256 257 258
NEW (323) 69 70 71 72 382 384
OPERATOR (324) 369 381
PRIVATE (325) 366
PROTECTED (326) 367
PUBLIC (327) 368
REGISTER (328) 190
REINTERPRET_CAST (329) 49
RETURN (330) 163
SHORT (331) 208
SIGNED (332) 211
SIZEOF (333) 61 62
STATIC (334) 191
STATIC_CAST (335) 48
STRUCT (336) 331
SWITCH (337) 153
TEMPLATE (338) 37 38 41 42 424 433 434 441 442
THIS (339) 22
THROW (340) 451 452
TRUE (341) 18
TRY (342) 443 444
TYPEDEF (343) 186
TYPEID (344) 51 52
TYPENAME (345) 224 225 250 251 431 432
UNION (346) 332
UNSIGNED (347) 212
USING (348) 250 251 252 253 254 255 256 257 258
VIRTUAL (349) 195 358 359 360 361 362 363
VOID (350) 215
VOLATILE (351) 287
WCHAR_T (352) 206
WHILE (353) 156 157
NAMESPACE_NAME (354) 3
TEMPLATE_NAME (355) 7


Nonterminals, with rules where they appear

$accept (127)
    on left: 0
typedef_name (128)
    on left: 1, on right: 218
namespace_name (129)
    on left: 2 233 234, on right: 246 247 248 249 255 256 257 258
original_namespace_name (130)
    on left: 3 235, on right: 2 233 241
class_name (131)
    on left: 4 5, on right: 30 32 33 216 354 355 356 357 358 359 360
    361 362 363 364 365 376 377 378 379
enum_name (132)
    on left: 6 226, on right: 217
template_name (133)
    on left: 7, on right: 434 435 440
identifier (134)
    on left: 8, on right: 27 144 164 219 220 221 222 223 224 225 226
    227 232 235 240 244 245 326 327 328 329 348 380 429 430 431 432
    433 434
literal (135)
    on left: 9 10 11 12 13, on right: 21
integer_literal (136)
    on left: 14, on right: 9
character_literal (137)
    on left: 15, on right: 10
floating_literal (138)
    on left: 16, on right: 11
string_literal (139)
    on left: 17, on right: 12 259 260 261
boolean_literal (140)
    on left: 18 19, on right: 13
translation_unit (141)
    on left: 20, on right: 0
primary_expression (142)
    on left: 21 22 23 24, on right: 34
id_expression (143)
    on left: 25 26, on right: 24 37 38 39 40 41 42 43 44 288 289
unqualified_id (144)
    on left: 27 28 29 30, on right: 25 31 250 251 252 253 254
qualified_id (145)
    on left: 31, on right: 26 340
nested_name_specifier (146)
    on left: 32 33, on right: 31 32 203 219 221 223 224 225 246 248
    250 251 252 253 255 257 280 281 282 283 290 328 329 354 356 376
    378 458
postfix_expression (147)
    on left: 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51
    52, on right: 35 36 37 38 39 40 41 42 43 44 45 46 55
expression_list (148)
    on left: 53 54, on right: 54 73 319 460
unary_expression (149)
    on left: 55 56 57 58 59 60 61 62 63 64, on right: 61 84
unary_operator (150)
    on left: 65 66 67 68, on right: 60
new_expression (151)
    on left: 69 70 71 72, on right: 63
new_placement (152)
    on left: 73, on right: 464
new_type_id (153)
    on left: 74, on right: 69 70
new_declarator (154)
    on left: 75 76, on right: 468
direct_new_declarator (155)
    on left: 77 78, on right: 76 78
new_initializer (156)
    on left: 79, on right: 466
delete_expression (157)
    on left: 80 81 82 83, on right: 64
cast_expression (158)
    on left: 84 85, on right: 56 57 58 59 60 80 81 82 83 85 86 87 88
pm_expression (159)
    on left: 86 87 88, on right: 87 88 89 90 91 92
multiplicative_expression (160)
    on left: 89 90 91 92, on right: 90 91 92 93 94 95
additive_expression (161)
    on left: 93 94 95, on right: 94 95 96 97 98
shift_expression (162)
    on left: 96 97 98, on right: 97 98 99 100 101 102 103
relational_expression (163)
    on left: 99 100 101 102 103, on right: 100 101 102 103 104 105
    106
equality_expression (164)
    on left: 104 105 106, on right: 105 106 107 108
and_expression (165)
    on left: 107 108, on right: 108 109 110
exclusive_or_expression (166)
    on left: 109 110, on right: 110 111 112
inclusive_or_expression (167)
    on left: 111 112, on right: 112 113 114
logical_and_expression (168)
    on left: 113 114, on right: 114 115 116
logical_or_expression (169)
    on left: 115 116, on right: 116 117 118 120
conditional_expression (170)
    on left: 117 118, on right: 119 135
assignment_expression (171)
    on left: 119 120 121, on right: 53 54 118 120 133 134 155 310 312
    320 438 502
assignment_operator (172)
    on left: 122 123 124 125 126 127 128 129 130 131 132,
    on right: 120
expression (173)
    on left: 133 134, on right: 23 35 47 48 49 50 51 77 118 134 154
    157 470
constant_expression (174)
    on left: 135, on right: 78 145 231 348 350 480
statement (175)
    on left: 136 137 138 139 140 141 142 143, on right: 144 145 146
    149 150 151 152 153 156 157 158
labeled_statement (176)
    on left: 144 145 146, on right: 136
expression_statement (177)
    on left: 147, on right: 137 159
compound_statement (178)
    on left: 148, on right: 138 317 443 446
statement_seq (179)
    on left: 149 150, on right: 150 472
selection_statement (180)
    on left: 151 152 153, on right: 139
condition (181)
    on left: 154 155, on right: 151 152 153 156 474
iteration_statement (182)
    on left: 156 157 158, on right: 140
for_init_statement (183)
    on left: 159 160, on right: 158
jump_statement (184)
    on left: 161 162 163 164, on right: 141
declaration_statement (185)
    on left: 165, on right: 142
declaration_seq (186)
    on left: 166 167, on right: 167 456
declaration (187)
    on left: 168 169 170 171 172 173 174, on right: 166 167 261 424
    441 442
block_declaration (188)
    on left: 175 176 177 178 179, on right: 165 168
simple_declaration (189)
    on left: 180 181, on right: 160 175
decl_specifier (190)
    on left: 182 183 184 185 186, on right: 187 188
decl_specifier_seq (191)
    on left: 187 188, on right: 180 181 188 309 310 311 312 314 316
    335 336
storage_class_specifier (192)
    on left: 189 190 191 192 193, on right: 182
function_specifier (193)
    on left: 194 195 196, on right: 184
type_specifier (194)
    on left: 197 198 199 200 201, on right: 183 293
simple_type_specifier (195)
    on left: 202 203 204 205 206 207 208 209 210 211 212 213 214 215
   , on right: 197
type_name (196)
    on left: 216 217 218, on right: 202 203 204 290 291
elaborated_type_specifier (197)
    on left: 219 220 221 222 223 224 225, on right: 200
enum_specifier (198)
    on left: 227, on right: 199
enumerator_list (199)
    on left: 228 229, on right: 229 476
enumerator_definition (200)
    on left: 230 231, on right: 228 229
enumerator (201)
    on left: 232, on right: 230 231
namespace_definition (202)
    on left: 236 237, on right: 174
named_namespace_definition (203)
    on left: 238 239, on right: 236
original_namespace_definition (204)
    on left: 240, on right: 238
extension_namespace_definition (205)
    on left: 241, on right: 239
unnamed_namespace_definition (206)
    on left: 242, on right: 237
namespace_body (207)
    on left: 243, on right: 240 241 242
namespace_alias (208)
    on left: 244, on right: 234
namespace_alias_definition (209)
    on left: 245, on right: 177
qualified_namespace_specifier (210)
    on left: 246 247 248 249, on right: 245
using_declaration (211)
    on left: 250 251 252 253 254, on right: 178 341
using_directive (212)
    on left: 255 256 257 258, on right: 179
asm_definition (213)
    on left: 259, on right: 176
linkage_specification (214)
    on left: 260 261, on right: 173
init_declarator_list (215)
    on left: 262 263, on right: 180 263
init_declarator (216)
    on left: 264, on right: 262 263
declarator (217)
    on left: 265 266, on right: 155 264 266 276 309 310 313 314 315
    316 345 346 347 447
direct_declarator (218)
    on left: 267 268 269 270 271 272 273 274 275 276,
    on right: 265 268 269 270 271 275
ptr_operator (219)
    on left: 277 278 279 280 281 282 283, on right: 75 266 294 371
cv_qualifier_seq (220)
    on left: 284 285, on right: 268 269 278 281 283 285 296 297
cv_qualifier (221)
    on left: 286 287, on right: 201 284 285
declarator_id (222)
    on left: 288 289 290 291, on right: 267 273
type_id (223)
    on left: 292, on right: 47 48 49 50 52 62 71 72 85 430 432 439
    453 454
type_specifier_seq (224)
    on left: 293, on right: 74 155 292 370 447 448 449 484
abstract_declarator (225)
    on left: 294 295, on right: 301 448 482
direct_abstract_declarator (226)
    on left: 296 297 298 299 300 301, on right: 295 486
parameter_declaration_clause (227)
    on left: 302 303 304 305 306, on right: 268 269 270 271 272 273
    274 296 297 298 299
parameter_declaration_list (228)
    on left: 307 308, on right: 302 303 306 308
parameter_declaration (229)
    on left: 309 310 311 312, on right: 307 308 428
function_definition (230)
    on left: 313 314 315 316, on right: 169 339
function_body (231)
    on left: 317, on right: 313 314 444
initializer (232)
    on left: 318 319, on right: 478
initializer_clause (233)
    on left: 320 321 322, on right: 318 323 324
initializer_list (234)
    on left: 323 324, on right: 321 324
class_specifier (235)
    on left: 325, on right: 198
class_head (236)
    on left: 326 327 328 329, on right: 325
class_key (237)
    on left: 330 331 332, on right: 219 220 326 327 328 329
member_specification (238)
    on left: 333 334, on right: 492
member_declaration (239)
    on left: 335 336 337 338 339 340 341, on right: 333
member_declarator_list (240)
    on left: 342 343, on right: 335 337 343
member_declarator (241)
    on left: 344 345 346 347 348, on right: 342 343
pure_specifier (242)
    on left: 349, on right: 346
constant_initializer (243)
    on left: 350, on right: 347
base_clause (244)
    on left: 351, on right: 327 329
base_specifier_list (245)
    on left: 352 353, on right: 351 353
base_specifier (246)
    on left: 354 355 356 357 358 359 360 361 362 363 364 365,
    on right: 352 353
access_specifier (247)
    on left: 366 367 368, on right: 334 358 359 362 363 364 365
conversion_function_id (248)
    on left: 369, on right: 29
conversion_type_id (249)
    on left: 370, on right: 369
conversion_declarator (250)
    on left: 371, on right: 496
ctor_initializer (251)
    on left: 372, on right: 488
mem_initializer_list (252)
    on left: 373 374, on right: 372 374
mem_initializer (253)
    on left: 375, on right: 373 374
mem_initializer_id (254)
    on left: 376 377 378 379 380, on right: 375
operator_function_id (255)
    on left: 381, on right: 28
operator (256)
    on left: 382 383 384 385 386 387 388 389 390 391 392 393 394 395
    396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411
    412 413 414 415 416 417 418 419 420 421 422 423,
    on right: 381
template_declaration (257)
    on left: 424, on right: 170
template_parameter_list (258)
    on left: 425 426, on right: 424 426 433 434
template_parameter (259)
    on left: 427 428, on right: 425 426
type_parameter (260)
    on left: 429 430 431 432 433 434, on right: 427
template_id (261)
    on left: 435, on right: 5
template_argument_list (262)
    on left: 436 437, on right: 225 435 437
template_argument (263)
    on left: 438 439 440, on right: 436 437
explicit_instantiation (264)
    on left: 441, on right: 171
explicit_specialization (265)
    on left: 442, on right: 172
try_block (266)
    on left: 443, on right: 143
function_try_block (267)
    on left: 444, on right: 315 316
handler_seq (268)
    on left: 445, on right: 443 444 500
handler (269)
    on left: 446, on right: 445
exception_declaration (270)
    on left: 447 448 449 450, on right: 446
throw_expression (271)
    on left: 451, on right: 121
exception_specification (272)
    on left: 452, on right: 268 270 296 298
type_id_list (273)
    on left: 453 454, on right: 454 504
declaration_seq_opt (274)
    on left: 455 456, on right: 20 243 260
nested_name_specifier_opt (275)
    on left: 457 458, on right: 204 358 359 360 361 362 363 364 365
expression_list_opt (276)
    on left: 459 460, on right: 36 79 375
COLONCOLON_opt (277)
    on left: 461 462, on right: 224 225
new_placement_opt (278)
    on left: 463 464, on right: 69 70 71 72
new_initializer_opt (279)
    on left: 465 466, on right: 69 70 71 72
new_declarator_opt (280)
    on left: 467 468, on right: 74 75
expression_opt (281)
    on left: 469 470, on right: 147 158 163
statement_seq_opt (282)
    on left: 471 472, on right: 148
condition_opt (283)
    on left: 473 474, on right: 158
enumerator_list_opt (284)
    on left: 475 476, on right: 227
initializer_opt (285)
    on left: 477 478, on right: 264
constant_expression_opt (286)
    on left: 479 480, on right: 275 300
abstract_declarator_opt (287)
    on left: 481 482, on right: 292 294 311 312
type_specifier_seq_opt (288)
    on left: 483 484, on right: 293
direct_abstract_declarator_opt (289)
    on left: 485 486, on right: 296 297 298 299 300
ctor_initializer_opt (290)
    on left: 487 488, on right: 313 314 444
COMMA_opt (291)
    on left: 489 490, on right: 321
member_specification_opt (292)
    on left: 491 492, on right: 325 333 334
SEMICOLON_opt (293)
    on left: 493 494, on right: 339
conversion_declarator_opt (294)
    on left: 495 496, on right: 370 371
EXPORT_opt (295)
    on left: 497 498, on right: 424
handler_seq_opt (296)
    on left: 499 500, on right: 445
assignment_expression_opt (297)
    on left: 501 502, on right: 451
type_id_list_opt (298)
    on left: 503 504, on right: 452


state 0

    0 $accept: . translation_unit $end

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 3
    ENUM_NAME      shift, and go to state 4
    COLONCOLON     shift, and go to state 5
    ASM            shift, and go to state 6
    AUTO           shift, and go to state 7
    BOOL           shift, and go to state 8
    CHAR           shift, and go to state 9
    CLASS          shift, and go to state 10
    CONST          shift, and go to state 11
    DOUBLE         shift, and go to state 12
    ENUM           shift, and go to state 13
    EXPLICIT       shift, and go to state 14
    EXPORT         shift, and go to state 15
    EXTERN         shift, and go to state 16
    FLOAT          shift, and go to state 17
    FRIEND         shift, and go to state 18
    INLINE         shift, and go to state 19
    INT            shift, and go to state 20
    LONG           shift, and go to state 21
    MUTABLE        shift, and go to state 22
    NAMESPACE      shift, and go to state 23
    OPERATOR       shift, and go to state 24
    REGISTER       shift, and go to state 25
    SHORT          shift, and go to state 26
    SIGNED         shift, and go to state 27
    STATIC         shift, and go to state 28
    STRUCT         shift, and go to state 29
    TEMPLATE       shift, and go to state 30
    TYPEDEF        shift, and go to state 31
    TYPENAME       shift, and go to state 32
    UNION          shift, and go to state 33
    UNSIGNED       shift, and go to state 34
    USING          shift, and go to state 35
    VIRTUAL        shift, and go to state 36
    VOID           shift, and go to state 37
    VOLATILE       shift, and go to state 38
    WCHAR_T        shift, and go to state 39
    '('            shift, and go to state 40
    '&'            shift, and go to state 41
    '*'            shift, and go to state 42
    '~'            shift, and go to state 43
    TEMPLATE_NAME  shift, and go to state 44

    TEMPLATE  [reduce using rule 497 (EXPORT_opt)]
    $default  reduce using rule 455 (declaration_seq_opt)

    typedef_name                    go to state 45
    class_name                      go to state 46
    enum_name                       go to state 47
    template_name                   go to state 48
    identifier                      go to state 49
    translation_unit                go to state 50
    id_expression                   go to state 51
    unqualified_id                  go to state 52
    qualified_id                    go to state 53
    nested_name_specifier           go to state 54
    declaration_seq                 go to state 55
    declaration                     go to state 56
    block_declaration               go to state 57
    simple_declaration              go to state 58
    decl_specifier                  go to state 59
    decl_specifier_seq              go to state 60
    storage_class_specifier         go to state 61
    function_specifier              go to state 62
    type_specifier                  go to state 63
    simple_type_specifier           go to state 64
    type_name                       go to state 65
    elaborated_type_specifier       go to state 66
    enum_specifier                  go to state 67
    namespace_definition            go to state 68
    named_namespace_definition      go to state 69
    original_namespace_definition   go to state 70
    extension_namespace_definition  go to state 71
    unnamed_namespace_definition    go to state 72
    namespace_alias_definition      go to state 73
    using_declaration               go to state 74
    using_directive                 go to state 75
    asm_definition                  go to state 76
    linkage_specification           go to state 77
    declarator                      go to state 78
    direct_declarator               go to state 79
    ptr_operator                    go to state 80
    cv_qualifier                    go to state 81
    declarator_id                   go to state 82
    function_definition             go to state 83
    class_specifier                 go to state 84
    class_head                      go to state 85
    class_key                       go to state 86
    conversion_function_id          go to state 87
    operator_function_id            go to state 88
    template_declaration            go to state 89
    template_id                     go to state 90
    explicit_instantiation          go to state 91
    explicit_specialization         go to state 92
    declaration_seq_opt             go to state 93
    EXPORT_opt                      go to state 94


state 1

    8 identifier: IDENTIFIER .

    $default  reduce using rule 8 (identifier)


state 2

    1 typedef_name: TYPEDEF_NAME .

    $default  reduce using rule 1 (typedef_name)


state 3

    4 class_name: CLASS_NAME .
  272 direct_declarator: CLASS_NAME . '(' parameter_declaration_clause ')'
  273                  | CLASS_NAME . COLONCOLON declarator_id '(' parameter_declaration_clause ')'
  274                  | CLASS_NAME . COLONCOLON CLASS_NAME '(' parameter_declaration_clause ')'

    COLONCOLON  shift, and go to state 95
    '('         shift, and go to state 96

    COLONCOLON  [reduce using rule 4 (class_name)]
    '('         [reduce using rule 4 (class_name)]
    $default    reduce using rule 4 (class_name)


state 4

    6 enum_name: ENUM_NAME .

    $default  reduce using rule 6 (enum_name)


state 5

  204 simple_type_specifier: COLONCOLON . nested_name_specifier_opt type_name
  282 ptr_operator: COLONCOLON . nested_name_specifier '*'
  283             | COLONCOLON . nested_name_specifier '*' cv_qualifier_seq
  289 declarator_id: COLONCOLON . id_expression
  290              | COLONCOLON . nested_name_specifier type_name
  291              | COLONCOLON . type_name

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 97
    ENUM_NAME      shift, and go to state 4
    OPERATOR       shift, and go to state 24
    '~'            shift, and go to state 43
    TEMPLATE_NAME  shift, and go to state 44

    IDENTIFIER     [reduce using rule 457 (nested_name_specifier_opt)]
    TYPEDEF_NAME   [reduce using rule 457 (nested_name_specifier_opt)]
    CLASS_NAME     [reduce using rule 457 (nested_name_specifier_opt)]
    ENUM_NAME      [reduce using rule 457 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 457 (nested_name_specifier_opt)]

    typedef_name               go to state 45
    class_name                 go to state 46
    enum_name                  go to state 47
    template_name              go to state 48
    identifier                 go to state 49
    id_expression              go to state 98
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 99
    type_name                  go to state 100
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90
    nested_name_specifier_opt  go to state 101


state 6

  259 asm_definition: ASM . '(' string_literal ')' ';'

    '('  shift, and go to state 102


state 7

  189 storage_class_specifier: AUTO .

    $default  reduce using rule 189 (storage_class_specifier)


state 8

  207 simple_type_specifier: BOOL .

    $default  reduce using rule 207 (simple_type_specifier)


state 9

  205 simple_type_specifier: CHAR .

    $default  reduce using rule 205 (simple_type_specifier)


state 10

  330 class_key: CLASS .

    $default  reduce using rule 330 (class_key)


state 11

  286 cv_qualifier: CONST .

    $default  reduce using rule 286 (cv_qualifier)


state 12

  214 simple_type_specifier: DOUBLE .

    $default  reduce using rule 214 (simple_type_specifier)


state 13

  221 elaborated_type_specifier: ENUM . COLONCOLON nested_name_specifier identifier
  222                          | ENUM . COLONCOLON identifier
  223                          | ENUM . nested_name_specifier identifier
  227 enum_specifier: ENUM . identifier '{' enumerator_list_opt '}'

    IDENTIFIER     shift, and go to state 1
    CLASS_NAME     shift, and go to state 97
    COLONCOLON     shift, and go to state 103
    TEMPLATE_NAME  shift, and go to state 44

    class_name             go to state 104
    template_name          go to state 48
    identifier             go to state 105
    nested_name_specifier  go to state 106
    template_id            go to state 90


state 14

  196 function_specifier: EXPLICIT .

    $default  reduce using rule 196 (function_specifier)


state 15

  498 EXPORT_opt: EXPORT .

    $default  reduce using rule 498 (EXPORT_opt)


state 16

  192 storage_class_specifier: EXTERN .
  260 linkage_specification: EXTERN . string_literal '{' declaration_seq_opt '}'
  261                      | EXTERN . string_literal declaration

    STRING  shift, and go to state 107

    $default  reduce using rule 192 (storage_class_specifier)

    string_literal  go to state 108


state 17

  213 simple_type_specifier: FLOAT .

    $default  reduce using rule 213 (simple_type_specifier)


state 18

  185 decl_specifier: FRIEND .

    $default  reduce using rule 185 (decl_specifier)


state 19

  194 function_specifier: INLINE .

    $default  reduce using rule 194 (function_specifier)


state 20

  209 simple_type_specifier: INT .

    $default  reduce using rule 209 (simple_type_specifier)


state 21

  210 simple_type_specifier: LONG .

    $default  reduce using rule 210 (simple_type_specifier)


state 22

  193 storage_class_specifier: MUTABLE .

    $default  reduce using rule 193 (storage_class_specifier)


state 23

  240 original_namespace_definition: NAMESPACE . identifier '{' namespace_body '}'
  241 extension_namespace_definition: NAMESPACE . original_namespace_name '{' namespace_body '}'
  242 unnamed_namespace_definition: NAMESPACE . '{' namespace_body '}'
  245 namespace_alias_definition: NAMESPACE . identifier '=' qualified_namespace_specifier ';'

    IDENTIFIER      shift, and go to state 1
    '{'             shift, and go to state 109
    NAMESPACE_NAME  shift, and go to state 110

    original_namespace_name  go to state 111
    identifier               go to state 112


state 24

  369 conversion_function_id: OPERATOR . conversion_type_id
  381 operator_function_id: OPERATOR . operator

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 97
    ENUM_NAME      shift, and go to state 4
    COLONCOLON     shift, and go to state 113
    ADDEQ          shift, and go to state 114
    SUBEQ          shift, and go to state 115
    MULEQ          shift, and go to state 116
    DIVEQ          shift, and go to state 117
    MODEQ          shift, and go to state 118
    XOREQ          shift, and go to state 119
    ANDEQ          shift, and go to state 120
    OREQ           shift, and go to state 121
    SL             shift, and go to state 122
    SR             shift, and go to state 123
    SREQ           shift, and go to state 124
    SLEQ           shift, and go to state 125
    EQ             shift, and go to state 126
    NOTEQ          shift, and go to state 127
    LTEQ           shift, and go to state 128
    GTEQ           shift, and go to state 129
    ANDAND         shift, and go to state 130
    OROR           shift, and go to state 131
    PLUSPLUS       shift, and go to state 132
    MINUSMINUS     shift, and go to state 133
    ARROWSTAR      shift, and go to state 134
    ARROW          shift, and go to state 135
    BOOL           shift, and go to state 8
    CHAR           shift, and go to state 9
    CLASS          shift, and go to state 10
    CONST          shift, and go to state 11
    DELETE         shift, and go to state 136
    DOUBLE         shift, and go to state 12
    ENUM           shift, and go to state 13
    FLOAT          shift, and go to state 17
    INT            shift, and go to state 20
    LONG           shift, and go to state 21
    NEW            shift, and go to state 137
    SHORT          shift, and go to state 26
    SIGNED         shift, and go to state 27
    STRUCT         shift, and go to state 29
    TYPENAME       shift, and go to state 32
    UNION          shift, and go to state 33
    UNSIGNED       shift, and go to state 34
    VOID           shift, and go to state 37
    VOLATILE       shift, and go to state 38
    WCHAR_T        shift, and go to state 39
    '('            shift, and go to state 138
    ','            shift, and go to state 139
    '['            shift, and go to state 140
    '&'            shift, and go to state 141
    '<'            shift, and go to state 142
    '>'            shift, and go to state 143
    '_'            shift, and go to state 144
    '+'            shift, and go to state 145
    '='            shift, and go to state 146
    '%'            shift, and go to state 147
    '*'            shift, and go to state 148
    '/'            shift, and go to state 149
    '|'            shift, and go to state 150
    '^'            shift, and go to state 151
    '!'            shift, and go to state 152
    '~'            shift, and go to state 153
    TEMPLATE_NAME  shift, and go to state 44

    typedef_name               go to state 45
    class_name                 go to state 46
    enum_name                  go to state 47
    template_name              go to state 48
    identifier                 go to state 154
    nested_name_specifier      go to state 155
    type_specifier             go to state 156
    simple_type_specifier      go to state 64
    type_name                  go to state 65
    elaborated_type_specifier  go to state 66
    enum_specifier             go to state 67
    cv_qualifier               go to state 81
    type_specifier_seq         go to state 157
    class_specifier            go to state 84
    class_head                 go to state 85
    class_key                  go to state 86
    conversion_type_id         go to state 158
    operator                   go to state 159
    template_id                go to state 90


state 25

  190 storage_class_specifier: REGISTER .

    $default  reduce using rule 190 (storage_class_specifier)


state 26

  208 simple_type_specifier: SHORT .

    $default  reduce using rule 208 (simple_type_specifier)


state 27

  211 simple_type_specifier: SIGNED .

    $default  reduce using rule 211 (simple_type_specifier)


state 28

  191 storage_class_specifier: STATIC .

    $default  reduce using rule 191 (storage_class_specifier)


state 29

  331 class_key: STRUCT .

    $default  reduce using rule 331 (class_key)


state 30

  441 explicit_instantiation: TEMPLATE . declaration
  442 explicit_specialization: TEMPLATE . '<' '>' declaration

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 3
    ENUM_NAME      shift, and go to state 4
    COLONCOLON     shift, and go to state 5
    ASM            shift, and go to state 6
    AUTO           shift, and go to state 7
    BOOL           shift, and go to state 8
    CHAR           shift, and go to state 9
    CLASS          shift, and go to state 10
    CONST          shift, and go to state 11
    DOUBLE         shift, and go to state 12
    ENUM           shift, and go to state 13
    EXPLICIT       shift, and go to state 14
    EXPORT         shift, and go to state 15
    EXTERN         shift, and go to state 16
    FLOAT          shift, and go to state 17
    FRIEND         shift, and go to state 18
    INLINE         shift, and go to state 19
    INT            shift, and go to state 20
    LONG           shift, and go to state 21
    MUTABLE        shift, and go to state 22
    NAMESPACE      shift, and go to state 23
    OPERATOR       shift, and go to state 24
    REGISTER       shift, and go to state 25
    SHORT          shift, and go to state 26
    SIGNED         shift, and go to state 27
    STATIC         shift, and go to state 28
    STRUCT         shift, and go to state 29
    TEMPLATE       shift, and go to state 30
    TYPEDEF        shift, and go to state 31
    TYPENAME       shift, and go to state 32
    UNION          shift, and go to state 33
    UNSIGNED       shift, and go to state 34
    USING          shift, and go to state 35
    VIRTUAL        shift, and go to state 36
    VOID           shift, and go to state 37
    VOLATILE       shift, and go to state 38
    WCHAR_T        shift, and go to state 39
    '('            shift, and go to state 40
    '&'            shift, and go to state 41
    '<'            shift, and go to state 160
    '*'            shift, and go to state 42
    '~'            shift, and go to state 43
    TEMPLATE_NAME  shift, and go to state 44

    TEMPLATE  [reduce using rule 497 (EXPORT_opt)]

    typedef_name                    go to state 45
    class_name                      go to state 46
    enum_name                       go to state 47
    template_name                   go to state 48
    identifier                      go to state 49
    id_expression                   go to state 51
    unqualified_id                  go to state 52
    qualified_id                    go to state 53
    nested_name_specifier           go to state 54
    declaration                     go to state 161
    block_declaration               go to state 57
    simple_declaration              go to state 58
    decl_specifier                  go to state 59
    decl_specifier_seq              go to state 60
    storage_class_specifier         go to state 61
    function_specifier              go to state 62
    type_specifier                  go to state 63
    simple_type_specifier           go to state 64
    type_name                       go to state 65
    elaborated_type_specifier       go to state 66
    enum_specifier                  go to state 67
    namespace_definition            go to state 68
    named_namespace_definition      go to state 69
    original_namespace_definition   go to state 70
    extension_namespace_definition  go to state 71
    unnamed_namespace_definition    go to state 72
    namespace_alias_definition      go to state 73
    using_declaration               go to state 74
    using_directive                 go to state 75
    asm_definition                  go to state 76
    linkage_specification           go to state 77
    declarator                      go to state 78
    direct_declarator               go to state 79
    ptr_operator                    go to state 80
    cv_qualifier                    go to state 81
    declarator_id                   go to state 82
    function_definition             go to state 83
    class_specifier                 go to state 84
    class_head                      go to state 85
    class_key                       go to state 86
    conversion_function_id          go to state 87
    operator_function_id            go to state 88
    template_declaration            go to state 89
    template_id                     go to state 90
    explicit_instantiation          go to state 91
    explicit_specialization         go to state 92
    EXPORT_opt                      go to state 94


state 31

  186 decl_specifier: TYPEDEF .

    $default  reduce using rule 186 (decl_specifier)


state 32

  224 elaborated_type_specifier: TYPENAME . COLONCOLON_opt nested_name_specifier identifier
  225                          | TYPENAME . COLONCOLON_opt nested_name_specifier identifier '<' template_argument_list '>'

    COLONCOLON  shift, and go to state 162

    $default  reduce using rule 461 (COLONCOLON_opt)

    COLONCOLON_opt  go to state 163


state 33

  332 class_key: UNION .

    $default  reduce using rule 332 (class_key)


state 34

  212 simple_type_specifier: UNSIGNED .

    $default  reduce using rule 212 (simple_type_specifier)


state 35

  250 using_declaration: USING . TYPENAME COLONCOLON nested_name_specifier unqualified_id ';'
  251                  | USING . TYPENAME nested_name_specifier unqualified_id ';'
  252                  | USING . COLONCOLON nested_name_specifier unqualified_id ';'
  253                  | USING . nested_name_specifier unqualified_id ';'
  254                  | USING . COLONCOLON unqualified_id ';'
  255 using_directive: USING . NAMESPACE COLONCOLON nested_name_specifier namespace_name ';'
  256                | USING . NAMESPACE COLONCOLON namespace_name ';'
  257                | USING . NAMESPACE nested_name_specifier namespace_name ';'
  258                | USING . NAMESPACE namespace_name ';'

    CLASS_NAME     shift, and go to state 97
    COLONCOLON     shift, and go to state 164
    NAMESPACE      shift, and go to state 165
    TYPENAME       shift, and go to state 166
    TEMPLATE_NAME  shift, and go to state 44

    class_name             go to state 104
    template_name          go to state 48
    nested_name_specifier  go to state 167
    template_id            go to state 90


state 36

  195 function_specifier: VIRTUAL .

    $default  reduce using rule 195 (function_specifier)


state 37

  215 simple_type_specifier: VOID .

    $default  reduce using rule 215 (simple_type_specifier)


state 38

  287 cv_qualifier: VOLATILE .

    $default  reduce using rule 287 (cv_qualifier)


state 39

  206 simple_type_specifier: WCHAR_T .

    $default  reduce using rule 206 (simple_type_specifier)


state 40

  276 direct_declarator: '(' . declarator ')'

    IDENTIFIER     shift, and go to state 1
    CLASS_NAME     shift, and go to state 3
    COLONCOLON     shift, and go to state 168
    OPERATOR       shift, and go to state 24
    '('            shift, and go to state 40
    '&'            shift, and go to state 41
    '*'            shift, and go to state 42
    '~'            shift, and go to state 43
    TEMPLATE_NAME  shift, and go to state 44

    class_name              go to state 104
    template_name           go to state 48
    identifier              go to state 169
    id_expression           go to state 51
    unqualified_id          go to state 52
    qualified_id            go to state 53
    nested_name_specifier   go to state 170
    declarator              go to state 171
    direct_declarator       go to state 79
    ptr_operator            go to state 80
    declarator_id           go to state 82
    conversion_function_id  go to state 87
    operator_function_id    go to state 88
    template_id             go to state 90


state 41

  279 ptr_operator: '&' .

    $default  reduce using rule 279 (ptr_operator)


state 42

  277 ptr_operator: '*' .
  278             | '*' . cv_qualifier_seq

    CONST     shift, and go to state 11
    VOLATILE  shift, and go to state 38

    $default  reduce using rule 277 (ptr_operator)

    cv_qualifier_seq  go to state 172
    cv_qualifier      go to state 173


state 43

   30 unqualified_id: '~' . class_name

    CLASS_NAME     shift, and go to state 97
    TEMPLATE_NAME  shift, and go to state 44

    class_name     go to state 174
    template_name  go to state 48
    template_id    go to state 90


state 44

    7 template_name: TEMPLATE_NAME .

    $default  reduce using rule 7 (template_name)


state 45

  218 type_name: typedef_name .

    $default  reduce using rule 218 (type_name)


state 46

   32 nested_name_specifier: class_name . COLONCOLON nested_name_specifier
   33                      | class_name . COLONCOLON
  216 type_name: class_name .

    COLONCOLON  shift, and go to state 175

    COLONCOLON  [reduce using rule 216 (type_name)]
    $default    reduce using rule 216 (type_name)


state 47

  217 type_name: enum_name .

    $default  reduce using rule 217 (type_name)


state 48

  435 template_id: template_name . '<' template_argument_list '>'

    '<'  shift, and go to state 176


state 49

   27 unqualified_id: identifier .
  226 enum_name: identifier .

    IDENTIFIER     reduce using rule 226 (enum_name)
    TYPEDEF_NAME   reduce using rule 226 (enum_name)
    CLASS_NAME     reduce using rule 226 (enum_name)
    ENUM_NAME      reduce using rule 226 (enum_name)
    ELLIPSIS       reduce using rule 27 (unqualified_id)
    ELLIPSIS       [reduce using rule 226 (enum_name)]
    COLONCOLON     reduce using rule 226 (enum_name)
    AUTO           reduce using rule 226 (enum_name)
    BOOL           reduce using rule 226 (enum_name)
    CHAR           reduce using rule 226 (enum_name)
    CLASS          reduce using rule 226 (enum_name)
    CONST          reduce using rule 226 (enum_name)
    DOUBLE         reduce using rule 226 (enum_name)
    ENUM           reduce using rule 226 (enum_name)
    EXPLICIT       reduce using rule 226 (enum_name)
    EXTERN         reduce using rule 226 (enum_name)
    FLOAT          reduce using rule 226 (enum_name)
    FRIEND         reduce using rule 226 (enum_name)
    INLINE         reduce using rule 226 (enum_name)
    INT            reduce using rule 226 (enum_name)
    LONG           reduce using rule 226 (enum_name)
    MUTABLE        reduce using rule 226 (enum_name)
    OPERATOR       reduce using rule 226 (enum_name)
    REGISTER       reduce using rule 226 (enum_name)
    SHORT          reduce using rule 226 (enum_name)
    SIGNED         reduce using rule 226 (enum_name)
    STATIC         reduce using rule 226 (enum_name)
    STRUCT         reduce using rule 226 (enum_name)
    TRY            reduce using rule 27 (unqualified_id)
    TRY            [reduce using rule 226 (enum_name)]
    TYPEDEF        reduce using rule 226 (enum_name)
    TYPENAME       reduce using rule 226 (enum_name)
    UNION          reduce using rule 226 (enum_name)
    UNSIGNED       reduce using rule 226 (enum_name)
    VIRTUAL        reduce using rule 226 (enum_name)
    VOID           reduce using rule 226 (enum_name)
    VOLATILE       reduce using rule 226 (enum_name)
    WCHAR_T        reduce using rule 226 (enum_name)
    ';'            reduce using rule 27 (unqualified_id)
    ';'            [reduce using rule 226 (enum_name)]
    '('            reduce using rule 27 (unqualified_id)
    '('            [reduce using rule 226 (enum_name)]
    ')'            reduce using rule 27 (unqualified_id)
    ')'            [reduce using rule 226 (enum_name)]
    ','            reduce using rule 27 (unqualified_id)
    ','            [reduce using rule 226 (enum_name)]
    '{'            reduce using rule 27 (unqualified_id)
    '{'            [reduce using rule 226 (enum_name)]
    '['            reduce using rule 27 (unqualified_id)
    '['            [reduce using rule 226 (enum_name)]
    '&'            reduce using rule 27 (unqualified_id)
    '&'            [reduce using rule 226 (enum_name)]
    '>'            reduce using rule 27 (unqualified_id)
    '>'            [reduce using rule 226 (enum_name)]
    '='            reduce using rule 27 (unqualified_id)
    '='            [reduce using rule 226 (enum_name)]
    '*'            reduce using rule 27 (unqualified_id)
    '*'            [reduce using rule 226 (enum_name)]
    '~'            reduce using rule 226 (enum_name)
    ':'            reduce using rule 27 (unqualified_id)
    ':'            [reduce using rule 226 (enum_name)]
    TEMPLATE_NAME  reduce using rule 226 (enum_name)
    $default       reduce using rule 27 (unqualified_id)


state 50

    0 $accept: translation_unit . $end

    $end  shift, and go to state 177


state 51

  288 declarator_id: id_expression .

    $default  reduce using rule 288 (declarator_id)


state 52

   25 id_expression: unqualified_id .

    $default  reduce using rule 25 (id_expression)


state 53

   26 id_expression: qualified_id .

    $default  reduce using rule 26 (id_expression)


state 54

   31 qualified_id: nested_name_specifier . unqualified_id
  203 simple_type_specifier: nested_name_specifier . type_name
  280 ptr_operator: nested_name_specifier . '*'
  281             | nested_name_specifier . '*' cv_qualifier_seq

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 97
    ENUM_NAME      shift, and go to state 4
    OPERATOR       shift, and go to state 24
    '*'            shift, and go to state 178
    '~'            shift, and go to state 43
    TEMPLATE_NAME  shift, and go to state 44

    typedef_name            go to state 45
    class_name              go to state 179
    enum_name               go to state 47
    template_name           go to state 48
    identifier              go to state 49
    unqualified_id          go to state 180
    type_name               go to state 181
    conversion_function_id  go to state 87
    operator_function_id    go to state 88
    template_id             go to state 90


state 55

  167 declaration_seq: declaration_seq . declaration
  456 declaration_seq_opt: declaration_seq .

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 3
    ENUM_NAME      shift, and go to state 4
    COLONCOLON     shift, and go to state 5
    ASM            shift, and go to state 6
    AUTO           shift, and go to state 7
    BOOL           shift, and go to state 8
    CHAR           shift, and go to state 9
    CLASS          shift, and go to state 10
    CONST          shift, and go to state 11
    DOUBLE         shift, and go to state 12
    ENUM           shift, and go to state 13
    EXPLICIT       shift, and go to state 14
    EXPORT         shift, and go to state 15
    EXTERN         shift, and go to state 16
    FLOAT          shift, and go to state 17
    FRIEND         shift, and go to state 18
    INLINE         shift, and go to state 19
    INT            shift, and go to state 20
    LONG           shift, and go to state 21
    MUTABLE        shift, and go to state 22
    NAMESPACE      shift, and go to state 23
    OPERATOR       shift, and go to state 24
    REGISTER       shift, and go to state 25
    SHORT          shift, and go to state 26
    SIGNED         shift, and go to state 27
    STATIC         shift, and go to state 28
    STRUCT         shift, and go to state 29
    TEMPLATE       shift, and go to state 30
    TYPEDEF        shift, and go to state 31
    TYPENAME       shift, and go to state 32
    UNION          shift, and go to state 33
    UNSIGNED       shift, and go to state 34
    USING          shift, and go to state 35
    VIRTUAL        shift, and go to state 36
    VOID           shift, and go to state 37
    VOLATILE       shift, and go to state 38
    WCHAR_T        shift, and go to state 39
    '('            shift, and go to state 40
    '&'            shift, and go to state 41
    '*'            shift, and go to state 42
    '~'            shift, and go to state 43
    TEMPLATE_NAME  shift, and go to state 44

    TEMPLATE  [reduce using rule 497 (EXPORT_opt)]
    $default  reduce using rule 456 (declaration_seq_opt)

    typedef_name                    go to state 45
    class_name                      go to state 46
    enum_name                       go to state 47
    template_name                   go to state 48
    identifier                      go to state 49
    id_expression                   go to state 51
    unqualified_id                  go to state 52
    qualified_id                    go to state 53
    nested_name_specifier           go to state 54
    declaration                     go to state 182
    block_declaration               go to state 57
    simple_declaration              go to state 58
    decl_specifier                  go to state 59
    decl_specifier_seq              go to state 60
    storage_class_specifier         go to state 61
    function_specifier              go to state 62
    type_specifier                  go to state 63
    simple_type_specifier           go to state 64
    type_name                       go to state 65
    elaborated_type_specifier       go to state 66
    enum_specifier                  go to state 67
    namespace_definition            go to state 68
    named_namespace_definition      go to state 69
    original_namespace_definition   go to state 70
    extension_namespace_definition  go to state 71
    unnamed_namespace_definition    go to state 72
    namespace_alias_definition      go to state 73
    using_declaration               go to state 74
    using_directive                 go to state 75
    asm_definition                  go to state 76
    linkage_specification           go to state 77
    declarator                      go to state 78
    direct_declarator               go to state 79
    ptr_operator                    go to state 80
    cv_qualifier                    go to state 81
    declarator_id                   go to state 82
    function_definition             go to state 83
    class_specifier                 go to state 84
    class_head                      go to state 85
    class_key                       go to state 86
    conversion_function_id          go to state 87
    operator_function_id            go to state 88
    template_declaration            go to state 89
    template_id                     go to state 90
    explicit_instantiation          go to state 91
    explicit_specialization         go to state 92
    EXPORT_opt                      go to state 94


state 56

  166 declaration_seq: declaration .

    $default  reduce using rule 166 (declaration_seq)


state 57

  168 declaration: block_declaration .

    $default  reduce using rule 168 (declaration)


state 58

  175 block_declaration: simple_declaration .

    $default  reduce using rule 175 (block_declaration)


state 59

  187 decl_specifier_seq: decl_specifier .

    $default  reduce using rule 187 (decl_specifier_seq)


state 60

  180 simple_declaration: decl_specifier_seq . init_declarator_list ';'
  181                   | decl_specifier_seq . ';'
  188 decl_specifier_seq: decl_specifier_seq . decl_specifier
  314 function_definition: decl_specifier_seq . declarator ctor_initializer_opt function_body
  316                    | decl_specifier_seq . declarator function_try_block

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 3
    ENUM_NAME      shift, and go to state 4
    COLONCOLON     shift, and go to state 5
    AUTO           shift, and go to state 7
    BOOL           shift, and go to state 8
    CHAR           shift, and go to state 9
    CLASS          shift, and go to state 10
    CONST          shift, and go to state 11
    DOUBLE         shift, and go to state 12
    ENUM           shift, and go to state 13
    EXPLICIT       shift, and go to state 14
    EXTERN         shift, and go to state 183
    FLOAT          shift, and go to state 17
    FRIEND         shift, and go to state 18
    INLINE         shift, and go to state 19
    INT            shift, and go to state 20
    LONG           shift, and go to state 21
    MUTABLE        shift, and go to state 22
    OPERATOR       shift, and go to state 24
    REGISTER       shift, and go to state 25
    SHORT          shift, and go to state 26
    SIGNED         shift, and go to state 27
    STATIC         shift, and go to state 28
    STRUCT         shift, and go to state 29
    TYPEDEF        shift, and go to state 31
    TYPENAME       shift, and go to state 32
    UNION          shift, and go to state 33
    UNSIGNED       shift, and go to state 34
    VIRTUAL        shift, and go to state 36
    VOID           shift, and go to state 37
    VOLATILE       shift, and go to state 38
    WCHAR_T        shift, and go to state 39
    ';'            shift, and go to state 184
    '('            shift, and go to state 40
    '&'            shift, and go to state 41
    '*'            shift, and go to state 42
    '~'            shift, and go to state 43
    TEMPLATE_NAME  shift, and go to state 44

    typedef_name               go to state 45
    class_name                 go to state 46
    enum_name                  go to state 47
    template_name              go to state 48
    identifier                 go to state 49
    id_expression              go to state 51
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 54
    decl_specifier             go to state 185
    storage_class_specifier    go to state 61
    function_specifier         go to state 62
    type_specifier             go to state 63
    simple_type_specifier      go to state 64
    type_name                  go to state 65
    elaborated_type_specifier  go to state 66
    enum_specifier             go to state 67
    init_declarator_list       go to state 186
    init_declarator            go to state 187
    declarator                 go to state 188
    direct_declarator          go to state 79
    ptr_operator               go to state 80
    cv_qualifier               go to state 81
    declarator_id              go to state 82
    class_specifier            go to state 84
    class_head                 go to state 85
    class_key                  go to state 86
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90


state 61

  182 decl_specifier: storage_class_specifier .

    $default  reduce using rule 182 (decl_specifier)


state 62

  184 decl_specifier: function_specifier .

    $default  reduce using rule 184 (decl_specifier)


state 63

  183 decl_specifier: type_specifier .

    $default  reduce using rule 183 (decl_specifier)


state 64

  197 type_specifier: simple_type_specifier .

    $default  reduce using rule 197 (type_specifier)


state 65

  202 simple_type_specifier: type_name .

    $default  reduce using rule 202 (simple_type_specifier)


state 66

  200 type_specifier: elaborated_type_specifier .

    $default  reduce using rule 200 (type_specifier)


state 67

  199 type_specifier: enum_specifier .

    $default  reduce using rule 199 (type_specifier)


state 68

  174 declaration: namespace_definition .

    $default  reduce using rule 174 (declaration)


state 69

  236 namespace_definition: named_namespace_definition .

    $default  reduce using rule 236 (namespace_definition)


state 70

  238 named_namespace_definition: original_namespace_definition .

    $default  reduce using rule 238 (named_namespace_definition)


state 71

  239 named_namespace_definition: extension_namespace_definition .

    $default  reduce using rule 239 (named_namespace_definition)


state 72

  237 namespace_definition: unnamed_namespace_definition .

    $default  reduce using rule 237 (namespace_definition)


state 73

  177 block_declaration: namespace_alias_definition .

    $default  reduce using rule 177 (block_declaration)


state 74

  178 block_declaration: using_declaration .

    $default  reduce using rule 178 (block_declaration)


state 75

  179 block_declaration: using_directive .

    $default  reduce using rule 179 (block_declaration)


state 76

  176 block_declaration: asm_definition .

    $default  reduce using rule 176 (block_declaration)


state 77

  173 declaration: linkage_specification .

    $default  reduce using rule 173 (declaration)


state 78

  313 function_definition: declarator . ctor_initializer_opt function_body
  315                    | declarator . function_try_block

    TRY  shift, and go to state 189
    ':'  shift, and go to state 190

    $default  reduce using rule 487 (ctor_initializer_opt)

    ctor_initializer      go to state 191
    function_try_block    go to state 192
    ctor_initializer_opt  go to state 193


state 79

  265 declarator: direct_declarator .
  268 direct_declarator: direct_declarator . '(' parameter_declaration_clause ')' cv_qualifier_seq exception_specification
  269                  | direct_declarator . '(' parameter_declaration_clause ')' cv_qualifier_seq
  270                  | direct_declarator . '(' parameter_declaration_clause ')' exception_specification
  271                  | direct_declarator . '(' parameter_declaration_clause ')'
  275                  | direct_declarator . '[' constant_expression_opt ']'

    '('  shift, and go to state 194
    '['  shift, and go to state 195

    '('       [reduce using rule 265 (declarator)]
    $default  reduce using rule 265 (declarator)


state 80

  266 declarator: ptr_operator . declarator

    IDENTIFIER     shift, and go to state 1
    CLASS_NAME     shift, and go to state 3
    COLONCOLON     shift, and go to state 168
    OPERATOR       shift, and go to state 24
    '('            shift, and go to state 40
    '&'            shift, and go to state 41
    '*'            shift, and go to state 42
    '~'            shift, and go to state 43
    TEMPLATE_NAME  shift, and go to state 44

    class_name              go to state 104
    template_name           go to state 48
    identifier              go to state 169
    id_expression           go to state 51
    unqualified_id          go to state 52
    qualified_id            go to state 53
    nested_name_specifier   go to state 170
    declarator              go to state 196
    direct_declarator       go to state 79
    ptr_operator            go to state 80
    declarator_id           go to state 82
    conversion_function_id  go to state 87
    operator_function_id    go to state 88
    template_id             go to state 90


state 81

  201 type_specifier: cv_qualifier .

    $default  reduce using rule 201 (type_specifier)


state 82

  267 direct_declarator: declarator_id .

    $default  reduce using rule 267 (direct_declarator)


state 83

  169 declaration: function_definition .

    $default  reduce using rule 169 (declaration)


state 84

  198 type_specifier: class_specifier .

    $default  reduce using rule 198 (type_specifier)


state 85

  325 class_specifier: class_head . '{' member_specification_opt '}'

    '{'  shift, and go to state 197


state 86

  219 elaborated_type_specifier: class_key . COLONCOLON nested_name_specifier identifier
  220                          | class_key . COLONCOLON identifier
  326 class_head: class_key . identifier
  327           | class_key . identifier base_clause
  328           | class_key . nested_name_specifier identifier
  329           | class_key . nested_name_specifier identifier base_clause

    IDENTIFIER     shift, and go to state 1
    CLASS_NAME     shift, and go to state 97
    COLONCOLON     shift, and go to state 198
    TEMPLATE_NAME  shift, and go to state 44

    class_name             go to state 104
    template_name          go to state 48
    identifier             go to state 199
    nested_name_specifier  go to state 200
    template_id            go to state 90


state 87

   29 unqualified_id: conversion_function_id .

    $default  reduce using rule 29 (unqualified_id)


state 88

   28 unqualified_id: operator_function_id .

    $default  reduce using rule 28 (unqualified_id)


state 89

  170 declaration: template_declaration .

    $default  reduce using rule 170 (declaration)


state 90

    5 class_name: template_id .

    $default  reduce using rule 5 (class_name)


state 91

  171 declaration: explicit_instantiation .

    $default  reduce using rule 171 (declaration)


state 92

  172 declaration: explicit_specialization .

    $default  reduce using rule 172 (declaration)


state 93

   20 translation_unit: declaration_seq_opt .

    $default  reduce using rule 20 (translation_unit)


state 94

  424 template_declaration: EXPORT_opt . TEMPLATE '<' template_parameter_list '>' declaration

    TEMPLATE  shift, and go to state 201


state 95

  273 direct_declarator: CLASS_NAME COLONCOLON . declarator_id '(' parameter_declaration_clause ')'
  274                  | CLASS_NAME COLONCOLON . CLASS_NAME '(' parameter_declaration_clause ')'

    IDENTIFIER     shift, and go to state 1
    CLASS_NAME     shift, and go to state 202
    COLONCOLON     shift, and go to state 203
    OPERATOR       shift, and go to state 24
    '~'            shift, and go to state 43
    TEMPLATE_NAME  shift, and go to state 44

    class_name              go to state 104
    template_name           go to state 48
    identifier              go to state 169
    id_expression           go to state 51
    unqualified_id          go to state 52
    qualified_id            go to state 53
    nested_name_specifier   go to state 204
    declarator_id           go to state 205
    conversion_function_id  go to state 87
    operator_function_id    go to state 88
    template_id             go to state 90


state 96

  272 direct_declarator: CLASS_NAME '(' . parameter_declaration_clause ')'

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 97
    ENUM_NAME      shift, and go to state 4
    ELLIPSIS       shift, and go to state 206
    COLONCOLON     shift, and go to state 113
    AUTO           shift, and go to state 7
    BOOL           shift, and go to state 8
    CHAR           shift, and go to state 9
    CLASS          shift, and go to state 10
    CONST          shift, and go to state 11
    DOUBLE         shift, and go to state 12
    ENUM           shift, and go to state 13
    EXPLICIT       shift, and go to state 14
    EXTERN         shift, and go to state 183
    FLOAT          shift, and go to state 17
    FRIEND         shift, and go to state 18
    INLINE         shift, and go to state 19
    INT            shift, and go to state 20
    LONG           shift, and go to state 21
    MUTABLE        shift, and go to state 22
    REGISTER       shift, and go to state 25
    SHORT          shift, and go to state 26
    SIGNED         shift, and go to state 27
    STATIC         shift, and go to state 28
    STRUCT         shift, and go to state 29
    TYPEDEF        shift, and go to state 31
    TYPENAME       shift, and go to state 32
    UNION          shift, and go to state 33
    UNSIGNED       shift, and go to state 34
    VIRTUAL        shift, and go to state 36
    VOID           shift, and go to state 37
    VOLATILE       shift, and go to state 38
    WCHAR_T        shift, and go to state 39
    TEMPLATE_NAME  shift, and go to state 44

    $default  reduce using rule 305 (parameter_declaration_clause)

    typedef_name                  go to state 45
    class_name                    go to state 46
    enum_name                     go to state 47
    template_name                 go to state 48
    identifier                    go to state 154
    nested_name_specifier         go to state 155
    decl_specifier                go to state 59
    decl_specifier_seq            go to state 207
    storage_class_specifier       go to state 61
    function_specifier            go to state 62
    type_specifier                go to state 63
    simple_type_specifier         go to state 64
    type_name                     go to state 65
    elaborated_type_specifier     go to state 66
    enum_specifier                go to state 67
    cv_qualifier                  go to state 81
    parameter_declaration_clause  go to state 208
    parameter_declaration_list    go to state 209
    parameter_declaration         go to state 210
    class_specifier               go to state 84
    class_head                    go to state 85
    class_key                     go to state 86
    template_id                   go to state 90


state 97

    4 class_name: CLASS_NAME .

    $default  reduce using rule 4 (class_name)


state 98

  289 declarator_id: COLONCOLON id_expression .

    $default  reduce using rule 289 (declarator_id)


state 99

   31 qualified_id: nested_name_specifier . unqualified_id
  282 ptr_operator: COLONCOLON nested_name_specifier . '*'
  283             | COLONCOLON nested_name_specifier . '*' cv_qualifier_seq
  290 declarator_id: COLONCOLON nested_name_specifier . type_name
  458 nested_name_specifier_opt: nested_name_specifier .

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 97
    ENUM_NAME      shift, and go to state 4
    OPERATOR       shift, and go to state 24
    '*'            shift, and go to state 211
    '~'            shift, and go to state 43
    TEMPLATE_NAME  shift, and go to state 44

    IDENTIFIER     [reduce using rule 458 (nested_name_specifier_opt)]
    TYPEDEF_NAME   [reduce using rule 458 (nested_name_specifier_opt)]
    CLASS_NAME     [reduce using rule 458 (nested_name_specifier_opt)]
    ENUM_NAME      [reduce using rule 458 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 458 (nested_name_specifier_opt)]

    typedef_name            go to state 45
    class_name              go to state 179
    enum_name               go to state 47
    template_name           go to state 48
    identifier              go to state 49
    unqualified_id          go to state 180
    type_name               go to state 212
    conversion_function_id  go to state 87
    operator_function_id    go to state 88
    template_id             go to state 90


state 100

  291 declarator_id: COLONCOLON type_name .

    $default  reduce using rule 291 (declarator_id)


state 101

  204 simple_type_specifier: COLONCOLON nested_name_specifier_opt . type_name

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 97
    ENUM_NAME      shift, and go to state 4
    TEMPLATE_NAME  shift, and go to state 44

    typedef_name   go to state 45
    class_name     go to state 179
    enum_name      go to state 47
    template_name  go to state 48
    identifier     go to state 154
    type_name      go to state 213
    template_id    go to state 90


state 102

  259 asm_definition: ASM '(' . string_literal ')' ';'

    STRING  shift, and go to state 107

    string_literal  go to state 214


state 103

  221 elaborated_type_specifier: ENUM COLONCOLON . nested_name_specifier identifier
  222                          | ENUM COLONCOLON . identifier

    IDENTIFIER     shift, and go to state 1
    CLASS_NAME     shift, and go to state 97
    TEMPLATE_NAME  shift, and go to state 44

    class_name             go to state 104
    template_name          go to state 48
    identifier             go to state 215
    nested_name_specifier  go to state 216
    template_id            go to state 90


state 104

   32 nested_name_specifier: class_name . COLONCOLON nested_name_specifier
   33                      | class_name . COLONCOLON

    COLONCOLON  shift, and go to state 175


state 105

  227 enum_specifier: ENUM identifier . '{' enumerator_list_opt '}'

    '{'  shift, and go to state 217


state 106

  223 elaborated_type_specifier: ENUM nested_name_specifier . identifier

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 218


state 107

   17 string_literal: STRING .

    $default  reduce using rule 17 (string_literal)


state 108

  260 linkage_specification: EXTERN string_literal . '{' declaration_seq_opt '}'
  261                      | EXTERN string_literal . declaration

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 3
    ENUM_NAME      shift, and go to state 4
    COLONCOLON     shift, and go to state 5
    ASM            shift, and go to state 6
    AUTO           shift, and go to state 7
    BOOL           shift, and go to state 8
    CHAR           shift, and go to state 9
    CLASS          shift, and go to state 10
    CONST          shift, and go to state 11
    DOUBLE         shift, and go to state 12
    ENUM           shift, and go to state 13
    EXPLICIT       shift, and go to state 14
    EXPORT         shift, and go to state 15
    EXTERN         shift, and go to state 16
    FLOAT          shift, and go to state 17
    FRIEND         shift, and go to state 18
    INLINE         shift, and go to state 19
    INT            shift, and go to state 20
    LONG           shift, and go to state 21
    MUTABLE        shift, and go to state 22
    NAMESPACE      shift, and go to state 23
    OPERATOR       shift, and go to state 24
    REGISTER       shift, and go to state 25
    SHORT          shift, and go to state 26
    SIGNED         shift, and go to state 27
    STATIC         shift, and go to state 28
    STRUCT         shift, and go to state 29
    TEMPLATE       shift, and go to state 30
    TYPEDEF        shift, and go to state 31
    TYPENAME       shift, and go to state 32
    UNION          shift, and go to state 33
    UNSIGNED       shift, and go to state 34
    USING          shift, and go to state 35
    VIRTUAL        shift, and go to state 36
    VOID           shift, and go to state 37
    VOLATILE       shift, and go to state 38
    WCHAR_T        shift, and go to state 39
    '('            shift, and go to state 40
    '{'            shift, and go to state 219
    '&'            shift, and go to state 41
    '*'            shift, and go to state 42
    '~'            shift, and go to state 43
    TEMPLATE_NAME  shift, and go to state 44

    TEMPLATE  [reduce using rule 497 (EXPORT_opt)]

    typedef_name                    go to state 45
    class_name                      go to state 46
    enum_name                       go to state 47
    template_name                   go to state 48
    identifier                      go to state 49
    id_expression                   go to state 51
    unqualified_id                  go to state 52
    qualified_id                    go to state 53
    nested_name_specifier           go to state 54
    declaration                     go to state 220
    block_declaration               go to state 57
    simple_declaration              go to state 58
    decl_specifier                  go to state 59
    decl_specifier_seq              go to state 60
    storage_class_specifier         go to state 61
    function_specifier              go to state 62
    type_specifier                  go to state 63
    simple_type_specifier           go to state 64
    type_name                       go to state 65
    elaborated_type_specifier       go to state 66
    enum_specifier                  go to state 67
    namespace_definition            go to state 68
    named_namespace_definition      go to state 69
    original_namespace_definition   go to state 70
    extension_namespace_definition  go to state 71
    unnamed_namespace_definition    go to state 72
    namespace_alias_definition      go to state 73
    using_declaration               go to state 74
    using_directive                 go to state 75
    asm_definition                  go to state 76
    linkage_specification           go to state 77
    declarator                      go to state 78
    direct_declarator               go to state 79
    ptr_operator                    go to state 80
    cv_qualifier                    go to state 81
    declarator_id                   go to state 82
    function_definition             go to state 83
    class_specifier                 go to state 84
    class_head                      go to state 85
    class_key                       go to state 86
    conversion_function_id          go to state 87
    operator_function_id            go to state 88
    template_declaration            go to state 89
    template_id                     go to state 90
    explicit_instantiation          go to state 91
    explicit_specialization         go to state 92
    EXPORT_opt                      go to state 94


state 109

  242 unnamed_namespace_definition: NAMESPACE '{' . namespace_body '}'

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 3
    ENUM_NAME      shift, and go to state 4
    COLONCOLON     shift, and go to state 5
    ASM            shift, and go to state 6
    AUTO           shift, and go to state 7
    BOOL           shift, and go to state 8
    CHAR           shift, and go to state 9
    CLASS          shift, and go to state 10
    CONST          shift, and go to state 11
    DOUBLE         shift, and go to state 12
    ENUM           shift, and go to state 13
    EXPLICIT       shift, and go to state 14
    EXPORT         shift, and go to state 15
    EXTERN         shift, and go to state 16
    FLOAT          shift, and go to state 17
    FRIEND         shift, and go to state 18
    INLINE         shift, and go to state 19
    INT            shift, and go to state 20
    LONG           shift, and go to state 21
    MUTABLE        shift, and go to state 22
    NAMESPACE      shift, and go to state 23
    OPERATOR       shift, and go to state 24
    REGISTER       shift, and go to state 25
    SHORT          shift, and go to state 26
    SIGNED         shift, and go to state 27
    STATIC         shift, and go to state 28
    STRUCT         shift, and go to state 29
    TEMPLATE       shift, and go to state 30
    TYPEDEF        shift, and go to state 31
    TYPENAME       shift, and go to state 32
    UNION          shift, and go to state 33
    UNSIGNED       shift, and go to state 34
    USING          shift, and go to state 35
    VIRTUAL        shift, and go to state 36
    VOID           shift, and go to state 37
    VOLATILE       shift, and go to state 38
    WCHAR_T        shift, and go to state 39
    '('            shift, and go to state 40
    '&'            shift, and go to state 41
    '*'            shift, and go to state 42
    '~'            shift, and go to state 43
    TEMPLATE_NAME  shift, and go to state 44

    TEMPLATE  [reduce using rule 497 (EXPORT_opt)]
    $default  reduce using rule 455 (declaration_seq_opt)

    typedef_name                    go to state 45
    class_name                      go to state 46
    enum_name                       go to state 47
    template_name                   go to state 48
    identifier                      go to state 49
    id_expression                   go to state 51
    unqualified_id                  go to state 52
    qualified_id                    go to state 53
    nested_name_specifier           go to state 54
    declaration_seq                 go to state 55
    declaration                     go to state 56
    block_declaration               go to state 57
    simple_declaration              go to state 58
    decl_specifier                  go to state 59
    decl_specifier_seq              go to state 60
    storage_class_specifier         go to state 61
    function_specifier              go to state 62
    type_specifier                  go to state 63
    simple_type_specifier           go to state 64
    type_name                       go to state 65
    elaborated_type_specifier       go to state 66
    enum_specifier                  go to state 67
    namespace_definition            go to state 68
    named_namespace_definition      go to state 69
    original_namespace_definition   go to state 70
    extension_namespace_definition  go to state 71
    unnamed_namespace_definition    go to state 72
    namespace_body                  go to state 221
    namespace_alias_definition      go to state 73
    using_declaration               go to state 74
    using_directive                 go to state 75
    asm_definition                  go to state 76
    linkage_specification           go to state 77
    declarator                      go to state 78
    direct_declarator               go to state 79
    ptr_operator                    go to state 80
    cv_qualifier                    go to state 81
    declarator_id                   go to state 82
    function_definition             go to state 83
    class_specifier                 go to state 84
    class_head                      go to state 85
    class_key                       go to state 86
    conversion_function_id          go to state 87
    operator_function_id            go to state 88
    template_declaration            go to state 89
    template_id                     go to state 90
    explicit_instantiation          go to state 91
    explicit_specialization         go to state 92
    declaration_seq_opt             go to state 222
    EXPORT_opt                      go to state 94


state 110

    3 original_namespace_name: NAMESPACE_NAME .

    $default  reduce using rule 3 (original_namespace_name)


state 111

  241 extension_namespace_definition: NAMESPACE original_namespace_name . '{' namespace_body '}'

    '{'  shift, and go to state 223


state 112

  235 original_namespace_name: identifier .
  240 original_namespace_definition: NAMESPACE identifier . '{' namespace_body '}'
  245 namespace_alias_definition: NAMESPACE identifier . '=' qualified_namespace_specifier ';'

    '{'  shift, and go to state 224
    '='  shift, and go to state 225

    '{'  [reduce using rule 235 (original_namespace_name)]


state 113

  204 simple_type_specifier: COLONCOLON . nested_name_specifier_opt type_name

    CLASS_NAME     shift, and go to state 97
    TEMPLATE_NAME  shift, and go to state 44

    CLASS_NAME     [reduce using rule 457 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 457 (nested_name_specifier_opt)]
    $default       reduce using rule 457 (nested_name_specifier_opt)

    class_name                 go to state 104
    template_name              go to state 48
    nested_name_specifier      go to state 226
    template_id                go to state 90
    nested_name_specifier_opt  go to state 101


state 114

  399 operator: ADDEQ .

    $default  reduce using rule 399 (operator)


state 115

  400 operator: SUBEQ .

    $default  reduce using rule 400 (operator)


state 116

  401 operator: MULEQ .

    $default  reduce using rule 401 (operator)


state 117

  402 operator: DIVEQ .

    $default  reduce using rule 402 (operator)


state 118

  403 operator: MODEQ .

    $default  reduce using rule 403 (operator)


state 119

  404 operator: XOREQ .

    $default  reduce using rule 404 (operator)


state 120

  405 operator: ANDEQ .

    $default  reduce using rule 405 (operator)


state 121

  406 operator: OREQ .

    $default  reduce using rule 406 (operator)


state 122

  407 operator: SL .

    $default  reduce using rule 407 (operator)


state 123

  408 operator: SR .

    $default  reduce using rule 408 (operator)


state 124

  409 operator: SREQ .

    $default  reduce using rule 409 (operator)


state 125

  410 operator: SLEQ .

    $default  reduce using rule 410 (operator)


state 126

  411 operator: EQ .

    $default  reduce using rule 411 (operator)


state 127

  412 operator: NOTEQ .

    $default  reduce using rule 412 (operator)


state 128

  413 operator: LTEQ .

    $default  reduce using rule 413 (operator)


state 129

  414 operator: GTEQ .

    $default  reduce using rule 414 (operator)


state 130

  415 operator: ANDAND .

    $default  reduce using rule 415 (operator)


state 131

  416 operator: OROR .

    $default  reduce using rule 416 (operator)


state 132

  417 operator: PLUSPLUS .

    $default  reduce using rule 417 (operator)


state 133

  418 operator: MINUSMINUS .

    $default  reduce using rule 418 (operator)


state 134

  420 operator: ARROWSTAR .

    $default  reduce using rule 420 (operator)


state 135

  421 operator: ARROW .

    $default  reduce using rule 421 (operator)


state 136

  383 operator: DELETE .
  385         | DELETE . '[' ']'

    '['  shift, and go to state 227

    '['       [reduce using rule 383 (operator)]
    $default  reduce using rule 383 (operator)


state 137

  382 operator: NEW .
  384         | NEW . '[' ']'

    '['  shift, and go to state 228

    '['       [reduce using rule 382 (operator)]
    $default  reduce using rule 382 (operator)


state 138

  422 operator: '(' . ')'

    ')'  shift, and go to state 229


state 139

  419 operator: ',' .

    $default  reduce using rule 419 (operator)


state 140

  423 operator: '[' . ']'

    ']'  shift, and go to state 230


state 141

  392 operator: '&' .

    $default  reduce using rule 392 (operator)


state 142

  397 operator: '<' .

    $default  reduce using rule 397 (operator)


state 143

  398 operator: '>' .

    $default  reduce using rule 398 (operator)


state 144

  387 operator: '_' .

    $default  reduce using rule 387 (operator)


state 145

  386 operator: '+' .

    $default  reduce using rule 386 (operator)


state 146

  396 operator: '=' .

    $default  reduce using rule 396 (operator)


state 147

  390 operator: '%' .

    $default  reduce using rule 390 (operator)


state 148

  388 operator: '*' .

    $default  reduce using rule 388 (operator)


state 149

  389 operator: '/' .

    $default  reduce using rule 389 (operator)


state 150

  393 operator: '|' .

    $default  reduce using rule 393 (operator)


state 151

  391 operator: '^' .

    $default  reduce using rule 391 (operator)


state 152

  395 operator: '!' .

    $default  reduce using rule 395 (operator)


state 153

  394 operator: '~' .

    $default  reduce using rule 394 (operator)


state 154

  226 enum_name: identifier .

    $default  reduce using rule 226 (enum_name)


state 155

  203 simple_type_specifier: nested_name_specifier . type_name

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 97
    ENUM_NAME      shift, and go to state 4
    TEMPLATE_NAME  shift, and go to state 44

    typedef_name   go to state 45
    class_name     go to state 179
    enum_name      go to state 47
    template_name  go to state 48
    identifier     go to state 154
    type_name      go to state 181
    template_id    go to state 90


state 156

  293 type_specifier_seq: type_specifier . type_specifier_seq_opt

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 97
    ENUM_NAME      shift, and go to state 4
    COLONCOLON     shift, and go to state 113
    BOOL           shift, and go to state 8
    CHAR           shift, and go to state 9
    CLASS          shift, and go to state 10
    CONST          shift, and go to state 11
    DOUBLE         shift, and go to state 12
    ENUM           shift, and go to state 13
    FLOAT          shift, and go to state 17
    INT            shift, and go to state 20
    LONG           shift, and go to state 21
    SHORT          shift, and go to state 26
    SIGNED         shift, and go to state 27
    STRUCT         shift, and go to state 29
    TYPENAME       shift, and go to state 32
    UNION          shift, and go to state 33
    UNSIGNED       shift, and go to state 34
    VOID           shift, and go to state 37
    VOLATILE       shift, and go to state 38
    WCHAR_T        shift, and go to state 39
    TEMPLATE_NAME  shift, and go to state 44

    IDENTIFIER     [reduce using rule 483 (type_specifier_seq_opt)]
    CLASS_NAME     [reduce using rule 483 (type_specifier_seq_opt)]
    COLONCOLON     [reduce using rule 483 (type_specifier_seq_opt)]
    TEMPLATE_NAME  [reduce using rule 483 (type_specifier_seq_opt)]
    $default       reduce using rule 483 (type_specifier_seq_opt)

    typedef_name               go to state 45
    class_name                 go to state 46
    enum_name                  go to state 47
    template_name              go to state 48
    identifier                 go to state 154
    nested_name_specifier      go to state 155
    type_specifier             go to state 156
    simple_type_specifier      go to state 64
    type_name                  go to state 65
    elaborated_type_specifier  go to state 66
    enum_specifier             go to state 67
    cv_qualifier               go to state 81
    type_specifier_seq         go to state 231
    class_specifier            go to state 84
    class_head                 go to state 85
    class_key                  go to state 86
    template_id                go to state 90
    type_specifier_seq_opt     go to state 232


state 157

  370 conversion_type_id: type_specifier_seq . conversion_declarator_opt

    CLASS_NAME     shift, and go to state 97
    COLONCOLON     shift, and go to state 233
    '&'            shift, and go to state 41
    '*'            shift, and go to state 42
    TEMPLATE_NAME  shift, and go to state 44

    '&'       [reduce using rule 495 (conversion_declarator_opt)]
    '*'       [reduce using rule 495 (conversion_declarator_opt)]
    $default  reduce using rule 495 (conversion_declarator_opt)

    class_name                 go to state 104
    template_name              go to state 48
    nested_name_specifier      go to state 234
    ptr_operator               go to state 235
    conversion_declarator      go to state 236
    template_id                go to state 90
    conversion_declarator_opt  go to state 237


state 158

  369 conversion_function_id: OPERATOR conversion_type_id .

    $default  reduce using rule 369 (conversion_function_id)


state 159

  381 operator_function_id: OPERATOR operator .

    $default  reduce using rule 381 (operator_function_id)


state 160

  442 explicit_specialization: TEMPLATE '<' . '>' declaration

    '>'  shift, and go to state 238


state 161

  441 explicit_instantiation: TEMPLATE declaration .

    $default  reduce using rule 441 (explicit_instantiation)


state 162

  462 COLONCOLON_opt: COLONCOLON .

    $default  reduce using rule 462 (COLONCOLON_opt)


state 163

  224 elaborated_type_specifier: TYPENAME COLONCOLON_opt . nested_name_specifier identifier
  225                          | TYPENAME COLONCOLON_opt . nested_name_specifier identifier '<' template_argument_list '>'

    CLASS_NAME     shift, and go to state 97
    TEMPLATE_NAME  shift, and go to state 44

    class_name             go to state 104
    template_name          go to state 48
    nested_name_specifier  go to state 239
    template_id            go to state 90


state 164

  252 using_declaration: USING COLONCOLON . nested_name_specifier unqualified_id ';'
  254                  | USING COLONCOLON . unqualified_id ';'

    IDENTIFIER     shift, and go to state 1
    CLASS_NAME     shift, and go to state 97
    OPERATOR       shift, and go to state 24
    '~'            shift, and go to state 43
    TEMPLATE_NAME  shift, and go to state 44

    class_name              go to state 104
    template_name           go to state 48
    identifier              go to state 169
    unqualified_id          go to state 240
    nested_name_specifier   go to state 241
    conversion_function_id  go to state 87
    operator_function_id    go to state 88
    template_id             go to state 90


state 165

  255 using_directive: USING NAMESPACE . COLONCOLON nested_name_specifier namespace_name ';'
  256                | USING NAMESPACE . COLONCOLON namespace_name ';'
  257                | USING NAMESPACE . nested_name_specifier namespace_name ';'
  258                | USING NAMESPACE . namespace_name ';'

    IDENTIFIER      shift, and go to state 1
    CLASS_NAME      shift, and go to state 97
    COLONCOLON      shift, and go to state 242
    NAMESPACE_NAME  shift, and go to state 110
    TEMPLATE_NAME   shift, and go to state 44

    namespace_name           go to state 243
    original_namespace_name  go to state 244
    class_name               go to state 104
    template_name            go to state 48
    identifier               go to state 245
    nested_name_specifier    go to state 246
    namespace_alias          go to state 247
    template_id              go to state 90


state 166

  250 using_declaration: USING TYPENAME . COLONCOLON nested_name_specifier unqualified_id ';'
  251                  | USING TYPENAME . nested_name_specifier unqualified_id ';'

    CLASS_NAME     shift, and go to state 97
    COLONCOLON     shift, and go to state 248
    TEMPLATE_NAME  shift, and go to state 44

    class_name             go to state 104
    template_name          go to state 48
    nested_name_specifier  go to state 249
    template_id            go to state 90


state 167

  253 using_declaration: USING nested_name_specifier . unqualified_id ';'

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 24
    '~'         shift, and go to state 43

    identifier              go to state 169
    unqualified_id          go to state 250
    conversion_function_id  go to state 87
    operator_function_id    go to state 88


state 168

  282 ptr_operator: COLONCOLON . nested_name_specifier '*'
  283             | COLONCOLON . nested_name_specifier '*' cv_qualifier_seq
  289 declarator_id: COLONCOLON . id_expression
  290              | COLONCOLON . nested_name_specifier type_name
  291              | COLONCOLON . type_name

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 97
    ENUM_NAME      shift, and go to state 4
    OPERATOR       shift, and go to state 24
    '~'            shift, and go to state 43
    TEMPLATE_NAME  shift, and go to state 44

    typedef_name            go to state 45
    class_name              go to state 46
    enum_name               go to state 47
    template_name           go to state 48
    identifier              go to state 49
    id_expression           go to state 98
    unqualified_id          go to state 52
    qualified_id            go to state 53
    nested_name_specifier   go to state 251
    type_name               go to state 100
    conversion_function_id  go to state 87
    operator_function_id    go to state 88
    template_id             go to state 90


state 169

   27 unqualified_id: identifier .

    $default  reduce using rule 27 (unqualified_id)


state 170

   31 qualified_id: nested_name_specifier . unqualified_id
  280 ptr_operator: nested_name_specifier . '*'
  281             | nested_name_specifier . '*' cv_qualifier_seq

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 24
    '*'         shift, and go to state 178
    '~'         shift, and go to state 43

    identifier              go to state 169
    unqualified_id          go to state 180
    conversion_function_id  go to state 87
    operator_function_id    go to state 88


state 171

  276 direct_declarator: '(' declarator . ')'

    ')'  shift, and go to state 252


state 172

  278 ptr_operator: '*' cv_qualifier_seq .

    $default  reduce using rule 278 (ptr_operator)


state 173

  284 cv_qualifier_seq: cv_qualifier .
  285                 | cv_qualifier . cv_qualifier_seq

    CONST     shift, and go to state 11
    VOLATILE  shift, and go to state 38

    $default  reduce using rule 284 (cv_qualifier_seq)

    cv_qualifier_seq  go to state 253
    cv_qualifier      go to state 173


state 174

   30 unqualified_id: '~' class_name .

    $default  reduce using rule 30 (unqualified_id)


state 175

   32 nested_name_specifier: class_name COLONCOLON . nested_name_specifier
   33                      | class_name COLONCOLON .

    CLASS_NAME     shift, and go to state 97
    TEMPLATE_NAME  shift, and go to state 44

    CLASS_NAME     [reduce using rule 33 (nested_name_specifier)]
    TEMPLATE_NAME  [reduce using rule 33 (nested_name_specifier)]
    $default       reduce using rule 33 (nested_name_specifier)

    class_name             go to state 104
    template_name          go to state 48
    nested_name_specifier  go to state 254
    template_id            go to state 90


state 176

  435 template_id: template_name '<' . template_argument_list '>'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    TYPEDEF_NAME      shift, and go to state 2
    CLASS_NAME        shift, and go to state 97
    ENUM_NAME         shift, and go to state 4
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 8
    CHAR              shift, and go to state 9
    CLASS             shift, and go to state 10
    CONST             shift, and go to state 11
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DOUBLE            shift, and go to state 12
    DYNAMIC_CAST      shift, and go to state 263
    ENUM              shift, and go to state 13
    FALSE             shift, and go to state 264
    FLOAT             shift, and go to state 17
    INT               shift, and go to state 20
    LONG              shift, and go to state 21
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SHORT             shift, and go to state 26
    SIGNED            shift, and go to state 27
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    STRUCT            shift, and go to state 29
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    TYPENAME          shift, and go to state 32
    UNION             shift, and go to state 33
    UNSIGNED          shift, and go to state 34
    VOID              shift, and go to state 37
    VOLATILE          shift, and go to state 38
    WCHAR_T           shift, and go to state 39
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    typedef_name               go to state 45
    class_name                 go to state 46
    enum_name                  go to state 47
    template_name              go to state 280
    identifier                 go to state 49
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 289
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 308
    type_specifier             go to state 156
    simple_type_specifier      go to state 64
    type_name                  go to state 65
    elaborated_type_specifier  go to state 66
    enum_specifier             go to state 67
    cv_qualifier               go to state 81
    type_id                    go to state 309
    type_specifier_seq         go to state 310
    class_specifier            go to state 84
    class_head                 go to state 85
    class_key                  go to state 86
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90
    template_argument_list     go to state 311
    template_argument          go to state 312
    throw_expression           go to state 313


state 177

    0 $accept: translation_unit $end .

    $default  accept


state 178

  280 ptr_operator: nested_name_specifier '*' .
  281             | nested_name_specifier '*' . cv_qualifier_seq

    CONST     shift, and go to state 11
    VOLATILE  shift, and go to state 38

    $default  reduce using rule 280 (ptr_operator)

    cv_qualifier_seq  go to state 314
    cv_qualifier      go to state 173


state 179

  216 type_name: class_name .

    $default  reduce using rule 216 (type_name)


state 180

   31 qualified_id: nested_name_specifier unqualified_id .

    $default  reduce using rule 31 (qualified_id)


state 181

  203 simple_type_specifier: nested_name_specifier type_name .

    $default  reduce using rule 203 (simple_type_specifier)


state 182

  167 declaration_seq: declaration_seq declaration .

    $default  reduce using rule 167 (declaration_seq)


state 183

  192 storage_class_specifier: EXTERN .

    $default  reduce using rule 192 (storage_class_specifier)


state 184

  181 simple_declaration: decl_specifier_seq ';' .

    $default  reduce using rule 181 (simple_declaration)


state 185

  188 decl_specifier_seq: decl_specifier_seq decl_specifier .

    $default  reduce using rule 188 (decl_specifier_seq)


state 186

  180 simple_declaration: decl_specifier_seq init_declarator_list . ';'
  263 init_declarator_list: init_declarator_list . ',' init_declarator

    ';'  shift, and go to state 315
    ','  shift, and go to state 316


state 187

  262 init_declarator_list: init_declarator .

    $default  reduce using rule 262 (init_declarator_list)


state 188

  264 init_declarator: declarator . initializer_opt
  314 function_definition: decl_specifier_seq declarator . ctor_initializer_opt function_body
  316                    | decl_specifier_seq declarator . function_try_block

    TRY  shift, and go to state 189
    '('  shift, and go to state 317
    '='  shift, and go to state 318
    ':'  shift, and go to state 190

    '{'       reduce using rule 487 (ctor_initializer_opt)
    $default  reduce using rule 477 (initializer_opt)

    initializer           go to state 319
    ctor_initializer      go to state 191
    function_try_block    go to state 320
    initializer_opt       go to state 321
    ctor_initializer_opt  go to state 322


state 189

  444 function_try_block: TRY . ctor_initializer_opt function_body handler_seq

    ':'  shift, and go to state 190

    $default  reduce using rule 487 (ctor_initializer_opt)

    ctor_initializer      go to state 191
    ctor_initializer_opt  go to state 323


state 190

  372 ctor_initializer: ':' . mem_initializer_list

    IDENTIFIER     shift, and go to state 1
    CLASS_NAME     shift, and go to state 97
    COLONCOLON     shift, and go to state 324
    TEMPLATE_NAME  shift, and go to state 44

    class_name             go to state 325
    template_name          go to state 48
    identifier             go to state 326
    nested_name_specifier  go to state 327
    mem_initializer_list   go to state 328
    mem_initializer        go to state 329
    mem_initializer_id     go to state 330
    template_id            go to state 90


state 191

  488 ctor_initializer_opt: ctor_initializer .

    $default  reduce using rule 488 (ctor_initializer_opt)


state 192

  315 function_definition: declarator function_try_block .

    $default  reduce using rule 315 (function_definition)


state 193

  313 function_definition: declarator ctor_initializer_opt . function_body

    '{'  shift, and go to state 331

    compound_statement  go to state 332
    function_body       go to state 333


state 194

  268 direct_declarator: direct_declarator '(' . parameter_declaration_clause ')' cv_qualifier_seq exception_specification
  269                  | direct_declarator '(' . parameter_declaration_clause ')' cv_qualifier_seq
  270                  | direct_declarator '(' . parameter_declaration_clause ')' exception_specification
  271                  | direct_declarator '(' . parameter_declaration_clause ')'

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 97
    ENUM_NAME      shift, and go to state 4
    ELLIPSIS       shift, and go to state 206
    COLONCOLON     shift, and go to state 113
    AUTO           shift, and go to state 7
    BOOL           shift, and go to state 8
    CHAR           shift, and go to state 9
    CLASS          shift, and go to state 10
    CONST          shift, and go to state 11
    DOUBLE         shift, and go to state 12
    ENUM           shift, and go to state 13
    EXPLICIT       shift, and go to state 14
    EXTERN         shift, and go to state 183
    FLOAT          shift, and go to state 17
    FRIEND         shift, and go to state 18
    INLINE         shift, and go to state 19
    INT            shift, and go to state 20
    LONG           shift, and go to state 21
    MUTABLE        shift, and go to state 22
    REGISTER       shift, and go to state 25
    SHORT          shift, and go to state 26
    SIGNED         shift, and go to state 27
    STATIC         shift, and go to state 28
    STRUCT         shift, and go to state 29
    TYPEDEF        shift, and go to state 31
    TYPENAME       shift, and go to state 32
    UNION          shift, and go to state 33
    UNSIGNED       shift, and go to state 34
    VIRTUAL        shift, and go to state 36
    VOID           shift, and go to state 37
    VOLATILE       shift, and go to state 38
    WCHAR_T        shift, and go to state 39
    TEMPLATE_NAME  shift, and go to state 44

    $default  reduce using rule 305 (parameter_declaration_clause)

    typedef_name                  go to state 45
    class_name                    go to state 46
    enum_name                     go to state 47
    template_name                 go to state 48
    identifier                    go to state 154
    nested_name_specifier         go to state 155
    decl_specifier                go to state 59
    decl_specifier_seq            go to state 207
    storage_class_specifier       go to state 61
    function_specifier            go to state 62
    type_specifier                go to state 63
    simple_type_specifier         go to state 64
    type_name                     go to state 65
    elaborated_type_specifier     go to state 66
    enum_specifier                go to state 67
    cv_qualifier                  go to state 81
    parameter_declaration_clause  go to state 334
    parameter_declaration_list    go to state 209
    parameter_declaration         go to state 210
    class_specifier               go to state 84
    class_head                    go to state 85
    class_key                     go to state 86
    template_id                   go to state 90


state 195

  275 direct_declarator: direct_declarator '[' . constant_expression_opt ']'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    $default  reduce using rule 479 (constant_expression_opt)

    class_name                 go to state 104
    template_name              go to state 48
    identifier                 go to state 169
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 204
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 336
    conditional_expression     go to state 337
    constant_expression        go to state 338
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90
    constant_expression_opt    go to state 339


state 196

  266 declarator: ptr_operator declarator .

    $default  reduce using rule 266 (declarator)


state 197

  325 class_specifier: class_head '{' . member_specification_opt '}'

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 3
    ENUM_NAME      shift, and go to state 4
    COLONCOLON     shift, and go to state 5
    AUTO           shift, and go to state 7
    BOOL           shift, and go to state 8
    CHAR           shift, and go to state 9
    CLASS          shift, and go to state 10
    CONST          shift, and go to state 11
    DOUBLE         shift, and go to state 12
    ENUM           shift, and go to state 13
    EXPLICIT       shift, and go to state 14
    EXTERN         shift, and go to state 183
    FLOAT          shift, and go to state 17
    FRIEND         shift, and go to state 18
    INLINE         shift, and go to state 19
    INT            shift, and go to state 20
    LONG           shift, and go to state 21
    MUTABLE        shift, and go to state 22
    OPERATOR       shift, and go to state 24
    PRIVATE        shift, and go to state 340
    PROTECTED      shift, and go to state 341
    PUBLIC         shift, and go to state 342
    REGISTER       shift, and go to state 25
    SHORT          shift, and go to state 26
    SIGNED         shift, and go to state 27
    STATIC         shift, and go to state 28
    STRUCT         shift, and go to state 29
    TYPEDEF        shift, and go to state 31
    TYPENAME       shift, and go to state 32
    UNION          shift, and go to state 33
    UNSIGNED       shift, and go to state 34
    USING          shift, and go to state 343
    VIRTUAL        shift, and go to state 36
    VOID           shift, and go to state 37
    VOLATILE       shift, and go to state 38
    WCHAR_T        shift, and go to state 39
    ';'            shift, and go to state 344
    '('            shift, and go to state 40
    '&'            shift, and go to state 41
    '*'            shift, and go to state 42
    '~'            shift, and go to state 43
    TEMPLATE_NAME  shift, and go to state 44

    ';'       [reduce using rule 344 (member_declarator)]
    '}'       reduce using rule 491 (member_specification_opt)
    $default  reduce using rule 344 (member_declarator)

    typedef_name               go to state 45
    class_name                 go to state 46
    enum_name                  go to state 47
    template_name              go to state 48
    identifier                 go to state 345
    id_expression              go to state 51
    unqualified_id             go to state 52
    qualified_id               go to state 346
    nested_name_specifier      go to state 54
    decl_specifier             go to state 59
    decl_specifier_seq         go to state 347
    storage_class_specifier    go to state 61
    function_specifier         go to state 62
    type_specifier             go to state 63
    simple_type_specifier      go to state 64
    type_name                  go to state 65
    elaborated_type_specifier  go to state 66
    enum_specifier             go to state 67
    using_declaration          go to state 348
    declarator                 go to state 349
    direct_declarator          go to state 79
    ptr_operator               go to state 80
    cv_qualifier               go to state 81
    declarator_id              go to state 82
    function_definition        go to state 350
    class_specifier            go to state 84
    class_head                 go to state 85
    class_key                  go to state 86
    member_specification       go to state 351
    member_declaration         go to state 352
    member_declarator_list     go to state 353
    member_declarator          go to state 354
    access_specifier           go to state 355
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90
    member_specification_opt   go to state 356


state 198

  219 elaborated_type_specifier: class_key COLONCOLON . nested_name_specifier identifier
  220                          | class_key COLONCOLON . identifier

    IDENTIFIER     shift, and go to state 1
    CLASS_NAME     shift, and go to state 97
    TEMPLATE_NAME  shift, and go to state 44

    class_name             go to state 104
    template_name          go to state 48
    identifier             go to state 357
    nested_name_specifier  go to state 358
    template_id            go to state 90


state 199

  326 class_head: class_key identifier .
  327           | class_key identifier . base_clause

    ':'  shift, and go to state 359

    $default  reduce using rule 326 (class_head)

    base_clause  go to state 360


state 200

  328 class_head: class_key nested_name_specifier . identifier
  329           | class_key nested_name_specifier . identifier base_clause

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 361


state 201

  424 template_declaration: EXPORT_opt TEMPLATE . '<' template_parameter_list '>' declaration

    '<'  shift, and go to state 362


state 202

    4 class_name: CLASS_NAME .
  274 direct_declarator: CLASS_NAME COLONCOLON CLASS_NAME . '(' parameter_declaration_clause ')'

    '('  shift, and go to state 363

    $default  reduce using rule 4 (class_name)


state 203

  289 declarator_id: COLONCOLON . id_expression
  290              | COLONCOLON . nested_name_specifier type_name
  291              | COLONCOLON . type_name

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 97
    ENUM_NAME      shift, and go to state 4
    OPERATOR       shift, and go to state 24
    '~'            shift, and go to state 43
    TEMPLATE_NAME  shift, and go to state 44

    typedef_name            go to state 45
    class_name              go to state 46
    enum_name               go to state 47
    template_name           go to state 48
    identifier              go to state 49
    id_expression           go to state 98
    unqualified_id          go to state 52
    qualified_id            go to state 53
    nested_name_specifier   go to state 364
    type_name               go to state 100
    conversion_function_id  go to state 87
    operator_function_id    go to state 88
    template_id             go to state 90


state 204

   31 qualified_id: nested_name_specifier . unqualified_id

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 24
    '~'         shift, and go to state 43

    identifier              go to state 169
    unqualified_id          go to state 180
    conversion_function_id  go to state 87
    operator_function_id    go to state 88


state 205

  273 direct_declarator: CLASS_NAME COLONCOLON declarator_id . '(' parameter_declaration_clause ')'

    '('  shift, and go to state 365


state 206

  304 parameter_declaration_clause: ELLIPSIS .

    $default  reduce using rule 304 (parameter_declaration_clause)


state 207

  188 decl_specifier_seq: decl_specifier_seq . decl_specifier
  309 parameter_declaration: decl_specifier_seq . declarator
  310                      | decl_specifier_seq . declarator '=' assignment_expression
  311                      | decl_specifier_seq . abstract_declarator_opt
  312                      | decl_specifier_seq . abstract_declarator_opt '=' assignment_expression

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 3
    ENUM_NAME      shift, and go to state 4
    COLONCOLON     shift, and go to state 5
    AUTO           shift, and go to state 7
    BOOL           shift, and go to state 8
    CHAR           shift, and go to state 9
    CLASS          shift, and go to state 10
    CONST          shift, and go to state 11
    DOUBLE         shift, and go to state 12
    ENUM           shift, and go to state 13
    EXPLICIT       shift, and go to state 14
    EXTERN         shift, and go to state 183
    FLOAT          shift, and go to state 17
    FRIEND         shift, and go to state 18
    INLINE         shift, and go to state 19
    INT            shift, and go to state 20
    LONG           shift, and go to state 21
    MUTABLE        shift, and go to state 22
    OPERATOR       shift, and go to state 24
    REGISTER       shift, and go to state 25
    SHORT          shift, and go to state 26
    SIGNED         shift, and go to state 27
    STATIC         shift, and go to state 28
    STRUCT         shift, and go to state 29
    TYPEDEF        shift, and go to state 31
    TYPENAME       shift, and go to state 32
    UNION          shift, and go to state 33
    UNSIGNED       shift, and go to state 34
    VIRTUAL        shift, and go to state 36
    VOID           shift, and go to state 37
    VOLATILE       shift, and go to state 38
    WCHAR_T        shift, and go to state 39
    '('            shift, and go to state 366
    '&'            shift, and go to state 41
    '*'            shift, and go to state 42
    '~'            shift, and go to state 43
    TEMPLATE_NAME  shift, and go to state 44

    '('       [reduce using rule 485 (direct_abstract_declarator_opt)]
    '['       reduce using rule 485 (direct_abstract_declarator_opt)
    $default  reduce using rule 481 (abstract_declarator_opt)

    typedef_name                    go to state 45
    class_name                      go to state 46
    enum_name                       go to state 47
    template_name                   go to state 48
    identifier                      go to state 49
    id_expression                   go to state 51
    unqualified_id                  go to state 52
    qualified_id                    go to state 53
    nested_name_specifier           go to state 54
    decl_specifier                  go to state 185
    storage_class_specifier         go to state 61
    function_specifier              go to state 62
    type_specifier                  go to state 63
    simple_type_specifier           go to state 64
    type_name                       go to state 65
    elaborated_type_specifier       go to state 66
    enum_specifier                  go to state 67
    declarator                      go to state 367
    direct_declarator               go to state 79
    ptr_operator                    go to state 368
    cv_qualifier                    go to state 81
    declarator_id                   go to state 82
    abstract_declarator             go to state 369
    direct_abstract_declarator      go to state 370
    class_specifier                 go to state 84
    class_head                      go to state 85
    class_key                       go to state 86
    conversion_function_id          go to state 87
    operator_function_id            go to state 88
    template_id                     go to state 90
    abstract_declarator_opt         go to state 371
    direct_abstract_declarator_opt  go to state 372


state 208

  272 direct_declarator: CLASS_NAME '(' parameter_declaration_clause . ')'

    ')'  shift, and go to state 373


state 209

  302 parameter_declaration_clause: parameter_declaration_list . ELLIPSIS
  303                             | parameter_declaration_list .
  306                             | parameter_declaration_list . ',' ELLIPSIS
  308 parameter_declaration_list: parameter_declaration_list . ',' parameter_declaration

    ELLIPSIS  shift, and go to state 374
    ','       shift, and go to state 375

    $default  reduce using rule 303 (parameter_declaration_clause)


state 210

  307 parameter_declaration_list: parameter_declaration .

    $default  reduce using rule 307 (parameter_declaration_list)


state 211

  282 ptr_operator: COLONCOLON nested_name_specifier '*' .
  283             | COLONCOLON nested_name_specifier '*' . cv_qualifier_seq

    CONST     shift, and go to state 11
    VOLATILE  shift, and go to state 38

    $default  reduce using rule 282 (ptr_operator)

    cv_qualifier_seq  go to state 376
    cv_qualifier      go to state 173


state 212

  290 declarator_id: COLONCOLON nested_name_specifier type_name .

    $default  reduce using rule 290 (declarator_id)


state 213

  204 simple_type_specifier: COLONCOLON nested_name_specifier_opt type_name .

    $default  reduce using rule 204 (simple_type_specifier)


state 214

  259 asm_definition: ASM '(' string_literal . ')' ';'

    ')'  shift, and go to state 377


state 215

  222 elaborated_type_specifier: ENUM COLONCOLON identifier .

    $default  reduce using rule 222 (elaborated_type_specifier)


state 216

  221 elaborated_type_specifier: ENUM COLONCOLON nested_name_specifier . identifier

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 378


state 217

  227 enum_specifier: ENUM identifier '{' . enumerator_list_opt '}'

    IDENTIFIER  shift, and go to state 1

    $default  reduce using rule 475 (enumerator_list_opt)

    identifier             go to state 379
    enumerator_list        go to state 380
    enumerator_definition  go to state 381
    enumerator             go to state 382
    enumerator_list_opt    go to state 383


state 218

  223 elaborated_type_specifier: ENUM nested_name_specifier identifier .

    $default  reduce using rule 223 (elaborated_type_specifier)


state 219

  260 linkage_specification: EXTERN string_literal '{' . declaration_seq_opt '}'

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 3
    ENUM_NAME      shift, and go to state 4
    COLONCOLON     shift, and go to state 5
    ASM            shift, and go to state 6
    AUTO           shift, and go to state 7
    BOOL           shift, and go to state 8
    CHAR           shift, and go to state 9
    CLASS          shift, and go to state 10
    CONST          shift, and go to state 11
    DOUBLE         shift, and go to state 12
    ENUM           shift, and go to state 13
    EXPLICIT       shift, and go to state 14
    EXPORT         shift, and go to state 15
    EXTERN         shift, and go to state 16
    FLOAT          shift, and go to state 17
    FRIEND         shift, and go to state 18
    INLINE         shift, and go to state 19
    INT            shift, and go to state 20
    LONG           shift, and go to state 21
    MUTABLE        shift, and go to state 22
    NAMESPACE      shift, and go to state 23
    OPERATOR       shift, and go to state 24
    REGISTER       shift, and go to state 25
    SHORT          shift, and go to state 26
    SIGNED         shift, and go to state 27
    STATIC         shift, and go to state 28
    STRUCT         shift, and go to state 29
    TEMPLATE       shift, and go to state 30
    TYPEDEF        shift, and go to state 31
    TYPENAME       shift, and go to state 32
    UNION          shift, and go to state 33
    UNSIGNED       shift, and go to state 34
    USING          shift, and go to state 35
    VIRTUAL        shift, and go to state 36
    VOID           shift, and go to state 37
    VOLATILE       shift, and go to state 38
    WCHAR_T        shift, and go to state 39
    '('            shift, and go to state 40
    '&'            shift, and go to state 41
    '*'            shift, and go to state 42
    '~'            shift, and go to state 43
    TEMPLATE_NAME  shift, and go to state 44

    TEMPLATE  [reduce using rule 497 (EXPORT_opt)]
    $default  reduce using rule 455 (declaration_seq_opt)

    typedef_name                    go to state 45
    class_name                      go to state 46
    enum_name                       go to state 47
    template_name                   go to state 48
    identifier                      go to state 49
    id_expression                   go to state 51
    unqualified_id                  go to state 52
    qualified_id                    go to state 53
    nested_name_specifier           go to state 54
    declaration_seq                 go to state 55
    declaration                     go to state 56
    block_declaration               go to state 57
    simple_declaration              go to state 58
    decl_specifier                  go to state 59
    decl_specifier_seq              go to state 60
    storage_class_specifier         go to state 61
    function_specifier              go to state 62
    type_specifier                  go to state 63
    simple_type_specifier           go to state 64
    type_name                       go to state 65
    elaborated_type_specifier       go to state 66
    enum_specifier                  go to state 67
    namespace_definition            go to state 68
    named_namespace_definition      go to state 69
    original_namespace_definition   go to state 70
    extension_namespace_definition  go to state 71
    unnamed_namespace_definition    go to state 72
    namespace_alias_definition      go to state 73
    using_declaration               go to state 74
    using_directive                 go to state 75
    asm_definition                  go to state 76
    linkage_specification           go to state 77
    declarator                      go to state 78
    direct_declarator               go to state 79
    ptr_operator                    go to state 80
    cv_qualifier                    go to state 81
    declarator_id                   go to state 82
    function_definition             go to state 83
    class_specifier                 go to state 84
    class_head                      go to state 85
    class_key                       go to state 86
    conversion_function_id          go to state 87
    operator_function_id            go to state 88
    template_declaration            go to state 89
    template_id                     go to state 90
    explicit_instantiation          go to state 91
    explicit_specialization         go to state 92
    declaration_seq_opt             go to state 384
    EXPORT_opt                      go to state 94


state 220

  261 linkage_specification: EXTERN string_literal declaration .

    $default  reduce using rule 261 (linkage_specification)


state 221

  242 unnamed_namespace_definition: NAMESPACE '{' namespace_body . '}'

    '}'  shift, and go to state 385


state 222

  243 namespace_body: declaration_seq_opt .

    $default  reduce using rule 243 (namespace_body)


state 223

  241 extension_namespace_definition: NAMESPACE original_namespace_name '{' . namespace_body '}'

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 3
    ENUM_NAME      shift, and go to state 4
    COLONCOLON     shift, and go to state 5
    ASM            shift, and go to state 6
    AUTO           shift, and go to state 7
    BOOL           shift, and go to state 8
    CHAR           shift, and go to state 9
    CLASS          shift, and go to state 10
    CONST          shift, and go to state 11
    DOUBLE         shift, and go to state 12
    ENUM           shift, and go to state 13
    EXPLICIT       shift, and go to state 14
    EXPORT         shift, and go to state 15
    EXTERN         shift, and go to state 16
    FLOAT          shift, and go to state 17
    FRIEND         shift, and go to state 18
    INLINE         shift, and go to state 19
    INT            shift, and go to state 20
    LONG           shift, and go to state 21
    MUTABLE        shift, and go to state 22
    NAMESPACE      shift, and go to state 23
    OPERATOR       shift, and go to state 24
    REGISTER       shift, and go to state 25
    SHORT          shift, and go to state 26
    SIGNED         shift, and go to state 27
    STATIC         shift, and go to state 28
    STRUCT         shift, and go to state 29
    TEMPLATE       shift, and go to state 30
    TYPEDEF        shift, and go to state 31
    TYPENAME       shift, and go to state 32
    UNION          shift, and go to state 33
    UNSIGNED       shift, and go to state 34
    USING          shift, and go to state 35
    VIRTUAL        shift, and go to state 36
    VOID           shift, and go to state 37
    VOLATILE       shift, and go to state 38
    WCHAR_T        shift, and go to state 39
    '('            shift, and go to state 40
    '&'            shift, and go to state 41
    '*'            shift, and go to state 42
    '~'            shift, and go to state 43
    TEMPLATE_NAME  shift, and go to state 44

    TEMPLATE  [reduce using rule 497 (EXPORT_opt)]
    $default  reduce using rule 455 (declaration_seq_opt)

    typedef_name                    go to state 45
    class_name                      go to state 46
    enum_name                       go to state 47
    template_name                   go to state 48
    identifier                      go to state 49
    id_expression                   go to state 51
    unqualified_id                  go to state 52
    qualified_id                    go to state 53
    nested_name_specifier           go to state 54
    declaration_seq                 go to state 55
    declaration                     go to state 56
    block_declaration               go to state 57
    simple_declaration              go to state 58
    decl_specifier                  go to state 59
    decl_specifier_seq              go to state 60
    storage_class_specifier         go to state 61
    function_specifier              go to state 62
    type_specifier                  go to state 63
    simple_type_specifier           go to state 64
    type_name                       go to state 65
    elaborated_type_specifier       go to state 66
    enum_specifier                  go to state 67
    namespace_definition            go to state 68
    named_namespace_definition      go to state 69
    original_namespace_definition   go to state 70
    extension_namespace_definition  go to state 71
    unnamed_namespace_definition    go to state 72
    namespace_body                  go to state 386
    namespace_alias_definition      go to state 73
    using_declaration               go to state 74
    using_directive                 go to state 75
    asm_definition                  go to state 76
    linkage_specification           go to state 77
    declarator                      go to state 78
    direct_declarator               go to state 79
    ptr_operator                    go to state 80
    cv_qualifier                    go to state 81
    declarator_id                   go to state 82
    function_definition             go to state 83
    class_specifier                 go to state 84
    class_head                      go to state 85
    class_key                       go to state 86
    conversion_function_id          go to state 87
    operator_function_id            go to state 88
    template_declaration            go to state 89
    template_id                     go to state 90
    explicit_instantiation          go to state 91
    explicit_specialization         go to state 92
    declaration_seq_opt             go to state 222
    EXPORT_opt                      go to state 94


state 224

  240 original_namespace_definition: NAMESPACE identifier '{' . namespace_body '}'

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 3
    ENUM_NAME      shift, and go to state 4
    COLONCOLON     shift, and go to state 5
    ASM            shift, and go to state 6
    AUTO           shift, and go to state 7
    BOOL           shift, and go to state 8
    CHAR           shift, and go to state 9
    CLASS          shift, and go to state 10
    CONST          shift, and go to state 11
    DOUBLE         shift, and go to state 12
    ENUM           shift, and go to state 13
    EXPLICIT       shift, and go to state 14
    EXPORT         shift, and go to state 15
    EXTERN         shift, and go to state 16
    FLOAT          shift, and go to state 17
    FRIEND         shift, and go to state 18
    INLINE         shift, and go to state 19
    INT            shift, and go to state 20
    LONG           shift, and go to state 21
    MUTABLE        shift, and go to state 22
    NAMESPACE      shift, and go to state 23
    OPERATOR       shift, and go to state 24
    REGISTER       shift, and go to state 25
    SHORT          shift, and go to state 26
    SIGNED         shift, and go to state 27
    STATIC         shift, and go to state 28
    STRUCT         shift, and go to state 29
    TEMPLATE       shift, and go to state 30
    TYPEDEF        shift, and go to state 31
    TYPENAME       shift, and go to state 32
    UNION          shift, and go to state 33
    UNSIGNED       shift, and go to state 34
    USING          shift, and go to state 35
    VIRTUAL        shift, and go to state 36
    VOID           shift, and go to state 37
    VOLATILE       shift, and go to state 38
    WCHAR_T        shift, and go to state 39
    '('            shift, and go to state 40
    '&'            shift, and go to state 41
    '*'            shift, and go to state 42
    '~'            shift, and go to state 43
    TEMPLATE_NAME  shift, and go to state 44

    TEMPLATE  [reduce using rule 497 (EXPORT_opt)]
    $default  reduce using rule 455 (declaration_seq_opt)

    typedef_name                    go to state 45
    class_name                      go to state 46
    enum_name                       go to state 47
    template_name                   go to state 48
    identifier                      go to state 49
    id_expression                   go to state 51
    unqualified_id                  go to state 52
    qualified_id                    go to state 53
    nested_name_specifier           go to state 54
    declaration_seq                 go to state 55
    declaration                     go to state 56
    block_declaration               go to state 57
    simple_declaration              go to state 58
    decl_specifier                  go to state 59
    decl_specifier_seq              go to state 60
    storage_class_specifier         go to state 61
    function_specifier              go to state 62
    type_specifier                  go to state 63
    simple_type_specifier           go to state 64
    type_name                       go to state 65
    elaborated_type_specifier       go to state 66
    enum_specifier                  go to state 67
    namespace_definition            go to state 68
    named_namespace_definition      go to state 69
    original_namespace_definition   go to state 70
    extension_namespace_definition  go to state 71
    unnamed_namespace_definition    go to state 72
    namespace_body                  go to state 387
    namespace_alias_definition      go to state 73
    using_declaration               go to state 74
    using_directive                 go to state 75
    asm_definition                  go to state 76
    linkage_specification           go to state 77
    declarator                      go to state 78
    direct_declarator               go to state 79
    ptr_operator                    go to state 80
    cv_qualifier                    go to state 81
    declarator_id                   go to state 82
    function_definition             go to state 83
    class_specifier                 go to state 84
    class_head                      go to state 85
    class_key                       go to state 86
    conversion_function_id          go to state 87
    operator_function_id            go to state 88
    template_declaration            go to state 89
    template_id                     go to state 90
    explicit_instantiation          go to state 91
    explicit_specialization         go to state 92
    declaration_seq_opt             go to state 222
    EXPORT_opt                      go to state 94


state 225

  245 namespace_alias_definition: NAMESPACE identifier '=' . qualified_namespace_specifier ';'

    IDENTIFIER      shift, and go to state 1
    CLASS_NAME      shift, and go to state 97
    COLONCOLON      shift, and go to state 388
    NAMESPACE_NAME  shift, and go to state 110
    TEMPLATE_NAME   shift, and go to state 44

    namespace_name                 go to state 389
    original_namespace_name        go to state 244
    class_name                     go to state 104
    template_name                  go to state 48
    identifier                     go to state 245
    nested_name_specifier          go to state 390
    namespace_alias                go to state 247
    qualified_namespace_specifier  go to state 391
    template_id                    go to state 90


state 226

  458 nested_name_specifier_opt: nested_name_specifier .

    $default  reduce using rule 458 (nested_name_specifier_opt)


state 227

  385 operator: DELETE '[' . ']'

    ']'  shift, and go to state 392


state 228

  384 operator: NEW '[' . ']'

    ']'  shift, and go to state 393


state 229

  422 operator: '(' ')' .

    $default  reduce using rule 422 (operator)


state 230

  423 operator: '[' ']' .

    $default  reduce using rule 423 (operator)


state 231

  484 type_specifier_seq_opt: type_specifier_seq .

    $default  reduce using rule 484 (type_specifier_seq_opt)


state 232

  293 type_specifier_seq: type_specifier type_specifier_seq_opt .

    $default  reduce using rule 293 (type_specifier_seq)


state 233

  282 ptr_operator: COLONCOLON . nested_name_specifier '*'
  283             | COLONCOLON . nested_name_specifier '*' cv_qualifier_seq

    CLASS_NAME     shift, and go to state 97
    TEMPLATE_NAME  shift, and go to state 44

    class_name             go to state 104
    template_name          go to state 48
    nested_name_specifier  go to state 394
    template_id            go to state 90


state 234

  280 ptr_operator: nested_name_specifier . '*'
  281             | nested_name_specifier . '*' cv_qualifier_seq

    '*'  shift, and go to state 178


state 235

  371 conversion_declarator: ptr_operator . conversion_declarator_opt

    CLASS_NAME     shift, and go to state 97
    COLONCOLON     shift, and go to state 233
    '&'            shift, and go to state 41
    '*'            shift, and go to state 42
    TEMPLATE_NAME  shift, and go to state 44

    '&'       [reduce using rule 495 (conversion_declarator_opt)]
    '*'       [reduce using rule 495 (conversion_declarator_opt)]
    $default  reduce using rule 495 (conversion_declarator_opt)

    class_name                 go to state 104
    template_name              go to state 48
    nested_name_specifier      go to state 234
    ptr_operator               go to state 235
    conversion_declarator      go to state 236
    template_id                go to state 90
    conversion_declarator_opt  go to state 395


state 236

  496 conversion_declarator_opt: conversion_declarator .

    $default  reduce using rule 496 (conversion_declarator_opt)


state 237

  370 conversion_type_id: type_specifier_seq conversion_declarator_opt .

    $default  reduce using rule 370 (conversion_type_id)


state 238

  442 explicit_specialization: TEMPLATE '<' '>' . declaration

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 3
    ENUM_NAME      shift, and go to state 4
    COLONCOLON     shift, and go to state 5
    ASM            shift, and go to state 6
    AUTO           shift, and go to state 7
    BOOL           shift, and go to state 8
    CHAR           shift, and go to state 9
    CLASS          shift, and go to state 10
    CONST          shift, and go to state 11
    DOUBLE         shift, and go to state 12
    ENUM           shift, and go to state 13
    EXPLICIT       shift, and go to state 14
    EXPORT         shift, and go to state 15
    EXTERN         shift, and go to state 16
    FLOAT          shift, and go to state 17
    FRIEND         shift, and go to state 18
    INLINE         shift, and go to state 19
    INT            shift, and go to state 20
    LONG           shift, and go to state 21
    MUTABLE        shift, and go to state 22
    NAMESPACE      shift, and go to state 23
    OPERATOR       shift, and go to state 24
    REGISTER       shift, and go to state 25
    SHORT          shift, and go to state 26
    SIGNED         shift, and go to state 27
    STATIC         shift, and go to state 28
    STRUCT         shift, and go to state 29
    TEMPLATE       shift, and go to state 30
    TYPEDEF        shift, and go to state 31
    TYPENAME       shift, and go to state 32
    UNION          shift, and go to state 33
    UNSIGNED       shift, and go to state 34
    USING          shift, and go to state 35
    VIRTUAL        shift, and go to state 36
    VOID           shift, and go to state 37
    VOLATILE       shift, and go to state 38
    WCHAR_T        shift, and go to state 39
    '('            shift, and go to state 40
    '&'            shift, and go to state 41
    '*'            shift, and go to state 42
    '~'            shift, and go to state 43
    TEMPLATE_NAME  shift, and go to state 44

    TEMPLATE  [reduce using rule 497 (EXPORT_opt)]

    typedef_name                    go to state 45
    class_name                      go to state 46
    enum_name                       go to state 47
    template_name                   go to state 48
    identifier                      go to state 49
    id_expression                   go to state 51
    unqualified_id                  go to state 52
    qualified_id                    go to state 53
    nested_name_specifier           go to state 54
    declaration                     go to state 396
    block_declaration               go to state 57
    simple_declaration              go to state 58
    decl_specifier                  go to state 59
    decl_specifier_seq              go to state 60
    storage_class_specifier         go to state 61
    function_specifier              go to state 62
    type_specifier                  go to state 63
    simple_type_specifier           go to state 64
    type_name                       go to state 65
    elaborated_type_specifier       go to state 66
    enum_specifier                  go to state 67
    namespace_definition            go to state 68
    named_namespace_definition      go to state 69
    original_namespace_definition   go to state 70
    extension_namespace_definition  go to state 71
    unnamed_namespace_definition    go to state 72
    namespace_alias_definition      go to state 73
    using_declaration               go to state 74
    using_directive                 go to state 75
    asm_definition                  go to state 76
    linkage_specification           go to state 77
    declarator                      go to state 78
    direct_declarator               go to state 79
    ptr_operator                    go to state 80
    cv_qualifier                    go to state 81
    declarator_id                   go to state 82
    function_definition             go to state 83
    class_specifier                 go to state 84
    class_head                      go to state 85
    class_key                       go to state 86
    conversion_function_id          go to state 87
    operator_function_id            go to state 88
    template_declaration            go to state 89
    template_id                     go to state 90
    explicit_instantiation          go to state 91
    explicit_specialization         go to state 92
    EXPORT_opt                      go to state 94


state 239

  224 elaborated_type_specifier: TYPENAME COLONCOLON_opt nested_name_specifier . identifier
  225                          | TYPENAME COLONCOLON_opt nested_name_specifier . identifier '<' template_argument_list '>'

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 397


state 240

  254 using_declaration: USING COLONCOLON unqualified_id . ';'

    ';'  shift, and go to state 398


state 241

  252 using_declaration: USING COLONCOLON nested_name_specifier . unqualified_id ';'

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 24
    '~'         shift, and go to state 43

    identifier              go to state 169
    unqualified_id          go to state 399
    conversion_function_id  go to state 87
    operator_function_id    go to state 88


state 242

  255 using_directive: USING NAMESPACE COLONCOLON . nested_name_specifier namespace_name ';'
  256                | USING NAMESPACE COLONCOLON . namespace_name ';'

    IDENTIFIER      shift, and go to state 1
    CLASS_NAME      shift, and go to state 97
    NAMESPACE_NAME  shift, and go to state 110
    TEMPLATE_NAME   shift, and go to state 44

    namespace_name           go to state 400
    original_namespace_name  go to state 244
    class_name               go to state 104
    template_name            go to state 48
    identifier               go to state 245
    nested_name_specifier    go to state 401
    namespace_alias          go to state 247
    template_id              go to state 90


state 243

  258 using_directive: USING NAMESPACE namespace_name . ';'

    ';'  shift, and go to state 402


state 244

    2 namespace_name: original_namespace_name .
  233               | original_namespace_name .

    ';'       reduce using rule 2 (namespace_name)
    ';'       [reduce using rule 233 (namespace_name)]
    $default  reduce using rule 2 (namespace_name)


state 245

  235 original_namespace_name: identifier .
  244 namespace_alias: identifier .

    ';'       reduce using rule 235 (original_namespace_name)
    ';'       [reduce using rule 244 (namespace_alias)]
    $default  reduce using rule 235 (original_namespace_name)


state 246

  257 using_directive: USING NAMESPACE nested_name_specifier . namespace_name ';'

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 110

    namespace_name           go to state 403
    original_namespace_name  go to state 244
    identifier               go to state 245
    namespace_alias          go to state 247


state 247

  234 namespace_name: namespace_alias .

    $default  reduce using rule 234 (namespace_name)


state 248

  250 using_declaration: USING TYPENAME COLONCOLON . nested_name_specifier unqualified_id ';'

    CLASS_NAME     shift, and go to state 97
    TEMPLATE_NAME  shift, and go to state 44

    class_name             go to state 104
    template_name          go to state 48
    nested_name_specifier  go to state 404
    template_id            go to state 90


state 249

  251 using_declaration: USING TYPENAME nested_name_specifier . unqualified_id ';'

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 24
    '~'         shift, and go to state 43

    identifier              go to state 169
    unqualified_id          go to state 405
    conversion_function_id  go to state 87
    operator_function_id    go to state 88


state 250

  253 using_declaration: USING nested_name_specifier unqualified_id . ';'

    ';'  shift, and go to state 406


state 251

   31 qualified_id: nested_name_specifier . unqualified_id
  282 ptr_operator: COLONCOLON nested_name_specifier . '*'
  283             | COLONCOLON nested_name_specifier . '*' cv_qualifier_seq
  290 declarator_id: COLONCOLON nested_name_specifier . type_name

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 97
    ENUM_NAME      shift, and go to state 4
    OPERATOR       shift, and go to state 24
    '*'            shift, and go to state 211
    '~'            shift, and go to state 43
    TEMPLATE_NAME  shift, and go to state 44

    typedef_name            go to state 45
    class_name              go to state 179
    enum_name               go to state 47
    template_name           go to state 48
    identifier              go to state 49
    unqualified_id          go to state 180
    type_name               go to state 212
    conversion_function_id  go to state 87
    operator_function_id    go to state 88
    template_id             go to state 90


state 252

  276 direct_declarator: '(' declarator ')' .

    $default  reduce using rule 276 (direct_declarator)


state 253

  285 cv_qualifier_seq: cv_qualifier cv_qualifier_seq .

    $default  reduce using rule 285 (cv_qualifier_seq)


state 254

   32 nested_name_specifier: class_name COLONCOLON nested_name_specifier .

    $default  reduce using rule 32 (nested_name_specifier)


state 255

   14 integer_literal: INTEGER .

    $default  reduce using rule 14 (integer_literal)


state 256

   16 floating_literal: FLOATING .

    $default  reduce using rule 16 (floating_literal)


state 257

   15 character_literal: CHARACTER .

    $default  reduce using rule 15 (character_literal)


state 258

   70 new_expression: COLONCOLON . NEW new_placement_opt new_type_id new_initializer_opt
   72               | COLONCOLON . NEW new_placement_opt '(' type_id ')' new_initializer_opt
   81 delete_expression: COLONCOLON . DELETE cast_expression
   83                  | COLONCOLON . DELETE '[' ']' cast_expression
  204 simple_type_specifier: COLONCOLON . nested_name_specifier_opt type_name

    CLASS_NAME     shift, and go to state 97
    DELETE         shift, and go to state 407
    NEW            shift, and go to state 408
    TEMPLATE_NAME  shift, and go to state 44

    CLASS_NAME     [reduce using rule 457 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 457 (nested_name_specifier_opt)]
    $default       reduce using rule 457 (nested_name_specifier_opt)

    class_name                 go to state 104
    template_name              go to state 48
    nested_name_specifier      go to state 226
    template_id                go to state 90
    nested_name_specifier_opt  go to state 101


state 259

   56 unary_expression: PLUSPLUS . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name              go to state 104
    template_name           go to state 48
    identifier              go to state 169
    literal                 go to state 281
    integer_literal         go to state 282
    character_literal       go to state 283
    floating_literal        go to state 284
    string_literal          go to state 285
    boolean_literal         go to state 286
    primary_expression      go to state 287
    id_expression           go to state 288
    unqualified_id          go to state 52
    qualified_id            go to state 53
    nested_name_specifier   go to state 204
    postfix_expression      go to state 290
    unary_expression        go to state 291
    unary_operator          go to state 292
    new_expression          go to state 293
    delete_expression       go to state 294
    cast_expression         go to state 409
    conversion_function_id  go to state 87
    operator_function_id    go to state 88
    template_id             go to state 90


state 260

   57 unary_expression: MINUSMINUS . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name              go to state 104
    template_name           go to state 48
    identifier              go to state 169
    literal                 go to state 281
    integer_literal         go to state 282
    character_literal       go to state 283
    floating_literal        go to state 284
    string_literal          go to state 285
    boolean_literal         go to state 286
    primary_expression      go to state 287
    id_expression           go to state 288
    unqualified_id          go to state 52
    qualified_id            go to state 53
    nested_name_specifier   go to state 204
    postfix_expression      go to state 290
    unary_expression        go to state 291
    unary_operator          go to state 292
    new_expression          go to state 293
    delete_expression       go to state 294
    cast_expression         go to state 410
    conversion_function_id  go to state 87
    operator_function_id    go to state 88
    template_id             go to state 90


state 261

   50 postfix_expression: CONST_CAST . '<' type_id '>' '(' expression ')'

    '<'  shift, and go to state 411


state 262

   80 delete_expression: DELETE . cast_expression
   82                  | DELETE . '[' ']' cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '['               shift, and go to state 412
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name              go to state 104
    template_name           go to state 48
    identifier              go to state 169
    literal                 go to state 281
    integer_literal         go to state 282
    character_literal       go to state 283
    floating_literal        go to state 284
    string_literal          go to state 285
    boolean_literal         go to state 286
    primary_expression      go to state 287
    id_expression           go to state 288
    unqualified_id          go to state 52
    qualified_id            go to state 53
    nested_name_specifier   go to state 204
    postfix_expression      go to state 290
    unary_expression        go to state 291
    unary_operator          go to state 292
    new_expression          go to state 293
    delete_expression       go to state 294
    cast_expression         go to state 413
    conversion_function_id  go to state 87
    operator_function_id    go to state 88
    template_id             go to state 90


state 263

   47 postfix_expression: DYNAMIC_CAST . '<' type_id '>' '(' expression ')'

    '<'  shift, and go to state 414


state 264

   19 boolean_literal: FALSE .

    $default  reduce using rule 19 (boolean_literal)


state 265

   69 new_expression: NEW . new_placement_opt new_type_id new_initializer_opt
   71               | NEW . new_placement_opt '(' type_id ')' new_initializer_opt

    '('  shift, and go to state 415

    '('       [reduce using rule 463 (new_placement_opt)]
    $default  reduce using rule 463 (new_placement_opt)

    new_placement      go to state 416
    new_placement_opt  go to state 417


state 266

   49 postfix_expression: REINTERPRET_CAST . '<' type_id '>' '(' expression ')'

    '<'  shift, and go to state 418


state 267

   61 unary_expression: SIZEOF . unary_expression
   62                 | SIZEOF . '(' type_id ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 419
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name              go to state 104
    template_name           go to state 48
    identifier              go to state 169
    literal                 go to state 281
    integer_literal         go to state 282
    character_literal       go to state 283
    floating_literal        go to state 284
    string_literal          go to state 285
    boolean_literal         go to state 286
    primary_expression      go to state 287
    id_expression           go to state 288
    unqualified_id          go to state 52
    qualified_id            go to state 53
    nested_name_specifier   go to state 204
    postfix_expression      go to state 290
    unary_expression        go to state 420
    unary_operator          go to state 292
    new_expression          go to state 293
    delete_expression       go to state 294
    conversion_function_id  go to state 87
    operator_function_id    go to state 88
    template_id             go to state 90


state 268

   48 postfix_expression: STATIC_CAST . '<' type_id '>' '(' expression ')'

    '<'  shift, and go to state 421


state 269

   22 primary_expression: THIS .

    $default  reduce using rule 22 (primary_expression)


state 270

  451 throw_expression: THROW . assignment_expression_opt

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    $default  reduce using rule 501 (assignment_expression_opt)

    class_name                 go to state 104
    template_name              go to state 48
    identifier                 go to state 169
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 204
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 422
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90
    throw_expression           go to state 313
    assignment_expression_opt  go to state 423


state 271

   18 boolean_literal: TRUE .

    $default  reduce using rule 18 (boolean_literal)


state 272

   51 postfix_expression: TYPEID . '(' expression ')'
   52                   | TYPEID . '(' type_id ')'

    '('  shift, and go to state 424


state 273

   23 primary_expression: '(' . expression ')'
   85 cast_expression: '(' . type_id ')' cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    TYPEDEF_NAME      shift, and go to state 2
    CLASS_NAME        shift, and go to state 97
    ENUM_NAME         shift, and go to state 4
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 8
    CHAR              shift, and go to state 9
    CLASS             shift, and go to state 10
    CONST             shift, and go to state 11
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DOUBLE            shift, and go to state 12
    DYNAMIC_CAST      shift, and go to state 263
    ENUM              shift, and go to state 13
    FALSE             shift, and go to state 264
    FLOAT             shift, and go to state 17
    INT               shift, and go to state 20
    LONG              shift, and go to state 21
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SHORT             shift, and go to state 26
    SIGNED            shift, and go to state 27
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    STRUCT            shift, and go to state 29
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    TYPENAME          shift, and go to state 32
    UNION             shift, and go to state 33
    UNSIGNED          shift, and go to state 34
    VOID              shift, and go to state 37
    VOLATILE          shift, and go to state 38
    WCHAR_T           shift, and go to state 39
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    typedef_name               go to state 45
    class_name                 go to state 46
    enum_name                  go to state 47
    template_name              go to state 48
    identifier                 go to state 49
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 289
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 425
    expression                 go to state 426
    type_specifier             go to state 156
    simple_type_specifier      go to state 64
    type_name                  go to state 65
    elaborated_type_specifier  go to state 66
    enum_specifier             go to state 67
    cv_qualifier               go to state 81
    type_id                    go to state 427
    type_specifier_seq         go to state 310
    class_specifier            go to state 84
    class_head                 go to state 85
    class_key                  go to state 86
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90
    throw_expression           go to state 313


state 274

   59 unary_expression: '&' . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name              go to state 104
    template_name           go to state 48
    identifier              go to state 169
    literal                 go to state 281
    integer_literal         go to state 282
    character_literal       go to state 283
    floating_literal        go to state 284
    string_literal          go to state 285
    boolean_literal         go to state 286
    primary_expression      go to state 287
    id_expression           go to state 288
    unqualified_id          go to state 52
    qualified_id            go to state 53
    nested_name_specifier   go to state 204
    postfix_expression      go to state 290
    unary_expression        go to state 291
    unary_operator          go to state 292
    new_expression          go to state 293
    delete_expression       go to state 294
    cast_expression         go to state 428
    conversion_function_id  go to state 87
    operator_function_id    go to state 88
    template_id             go to state 90


state 275

   65 unary_operator: '+' .

    $default  reduce using rule 65 (unary_operator)


state 276

   66 unary_operator: '-' .

    $default  reduce using rule 66 (unary_operator)


state 277

   58 unary_expression: '*' . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name              go to state 104
    template_name           go to state 48
    identifier              go to state 169
    literal                 go to state 281
    integer_literal         go to state 282
    character_literal       go to state 283
    floating_literal        go to state 284
    string_literal          go to state 285
    boolean_literal         go to state 286
    primary_expression      go to state 287
    id_expression           go to state 288
    unqualified_id          go to state 52
    qualified_id            go to state 53
    nested_name_specifier   go to state 204
    postfix_expression      go to state 290
    unary_expression        go to state 291
    unary_operator          go to state 292
    new_expression          go to state 293
    delete_expression       go to state 294
    cast_expression         go to state 429
    conversion_function_id  go to state 87
    operator_function_id    go to state 88
    template_id             go to state 90


state 278

   67 unary_operator: '!' .

    $default  reduce using rule 67 (unary_operator)


state 279

   30 unqualified_id: '~' . class_name
   68 unary_operator: '~' .

    CLASS_NAME     shift, and go to state 97
    TEMPLATE_NAME  shift, and go to state 44

    CLASS_NAME     [reduce using rule 68 (unary_operator)]
    TEMPLATE_NAME  [reduce using rule 68 (unary_operator)]
    $default       reduce using rule 68 (unary_operator)

    class_name     go to state 174
    template_name  go to state 48
    template_id    go to state 90


state 280

  435 template_id: template_name . '<' template_argument_list '>'
  440 template_argument: template_name .

    '<'  shift, and go to state 176

    $default  reduce using rule 440 (template_argument)


state 281

   21 primary_expression: literal .

    $default  reduce using rule 21 (primary_expression)


state 282

    9 literal: integer_literal .

    $default  reduce using rule 9 (literal)


state 283

   10 literal: character_literal .

    $default  reduce using rule 10 (literal)


state 284

   11 literal: floating_literal .

    $default  reduce using rule 11 (literal)


state 285

   12 literal: string_literal .

    $default  reduce using rule 12 (literal)


state 286

   13 literal: boolean_literal .

    $default  reduce using rule 13 (literal)


state 287

   34 postfix_expression: primary_expression .

    $default  reduce using rule 34 (postfix_expression)


state 288

   24 primary_expression: id_expression .

    $default  reduce using rule 24 (primary_expression)


state 289

   31 qualified_id: nested_name_specifier . unqualified_id
  203 simple_type_specifier: nested_name_specifier . type_name

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 97
    ENUM_NAME      shift, and go to state 4
    OPERATOR       shift, and go to state 24
    '~'            shift, and go to state 43
    TEMPLATE_NAME  shift, and go to state 44

    typedef_name            go to state 45
    class_name              go to state 179
    enum_name               go to state 47
    template_name           go to state 48
    identifier              go to state 49
    unqualified_id          go to state 180
    type_name               go to state 181
    conversion_function_id  go to state 87
    operator_function_id    go to state 88
    template_id             go to state 90


state 290

   35 postfix_expression: postfix_expression . '[' expression ']'
   36                   | postfix_expression . '(' expression_list_opt ')'
   37                   | postfix_expression . '.' TEMPLATE COLONCOLON id_expression
   38                   | postfix_expression . '.' TEMPLATE id_expression
   39                   | postfix_expression . '.' COLONCOLON id_expression
   40                   | postfix_expression . '.' id_expression
   41                   | postfix_expression . ARROW TEMPLATE COLONCOLON id_expression
   42                   | postfix_expression . ARROW TEMPLATE id_expression
   43                   | postfix_expression . ARROW COLONCOLON id_expression
   44                   | postfix_expression . ARROW id_expression
   45                   | postfix_expression . PLUSPLUS
   46                   | postfix_expression . MINUSMINUS
   55 unary_expression: postfix_expression .

    PLUSPLUS    shift, and go to state 430
    MINUSMINUS  shift, and go to state 431
    ARROW       shift, and go to state 432
    '('         shift, and go to state 433
    '['         shift, and go to state 434
    '.'         shift, and go to state 435

    $default  reduce using rule 55 (unary_expression)


state 291

   84 cast_expression: unary_expression .

    $default  reduce using rule 84 (cast_expression)


state 292

   60 unary_expression: unary_operator . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name              go to state 104
    template_name           go to state 48
    identifier              go to state 169
    literal                 go to state 281
    integer_literal         go to state 282
    character_literal       go to state 283
    floating_literal        go to state 284
    string_literal          go to state 285
    boolean_literal         go to state 286
    primary_expression      go to state 287
    id_expression           go to state 288
    unqualified_id          go to state 52
    qualified_id            go to state 53
    nested_name_specifier   go to state 204
    postfix_expression      go to state 290
    unary_expression        go to state 291
    unary_operator          go to state 292
    new_expression          go to state 293
    delete_expression       go to state 294
    cast_expression         go to state 436
    conversion_function_id  go to state 87
    operator_function_id    go to state 88
    template_id             go to state 90


state 293

   63 unary_expression: new_expression .

    $default  reduce using rule 63 (unary_expression)


state 294

   64 unary_expression: delete_expression .

    $default  reduce using rule 64 (unary_expression)


state 295

   86 pm_expression: cast_expression .

    $default  reduce using rule 86 (pm_expression)


state 296

   87 pm_expression: pm_expression . DOTSTAR cast_expression
   88              | pm_expression . ARROWSTAR cast_expression
   89 multiplicative_expression: pm_expression .

    DOTSTAR    shift, and go to state 437
    ARROWSTAR  shift, and go to state 438

    $default  reduce using rule 89 (multiplicative_expression)


state 297

   90 multiplicative_expression: multiplicative_expression . '*' pm_expression
   91                          | multiplicative_expression . '/' pm_expression
   92                          | multiplicative_expression . '%' pm_expression
   93 additive_expression: multiplicative_expression .

    '%'  shift, and go to state 439
    '*'  shift, and go to state 440
    '/'  shift, and go to state 441

    $default  reduce using rule 93 (additive_expression)


state 298

   94 additive_expression: additive_expression . '+' multiplicative_expression
   95                    | additive_expression . '-' multiplicative_expression
   96 shift_expression: additive_expression .

    '+'  shift, and go to state 442
    '-'  shift, and go to state 443

    $default  reduce using rule 96 (shift_expression)


state 299

   97 shift_expression: shift_expression . SL additive_expression
   98                 | shift_expression . SR additive_expression
   99 relational_expression: shift_expression .

    SL  shift, and go to state 444
    SR  shift, and go to state 445

    $default  reduce using rule 99 (relational_expression)


state 300

  100 relational_expression: relational_expression . '<' shift_expression
  101                      | relational_expression . '>' shift_expression
  102                      | relational_expression . LTEQ shift_expression
  103                      | relational_expression . GTEQ shift_expression
  104 equality_expression: relational_expression .

    LTEQ  shift, and go to state 446
    GTEQ  shift, and go to state 447
    '<'   shift, and go to state 448
    '>'   shift, and go to state 449

    '>'       [reduce using rule 104 (equality_expression)]
    $default  reduce using rule 104 (equality_expression)


state 301

  105 equality_expression: equality_expression . EQ relational_expression
  106                    | equality_expression . NOTEQ relational_expression
  107 and_expression: equality_expression .

    EQ     shift, and go to state 450
    NOTEQ  shift, and go to state 451

    $default  reduce using rule 107 (and_expression)


state 302

  108 and_expression: and_expression . '&' equality_expression
  109 exclusive_or_expression: and_expression .

    '&'  shift, and go to state 452

    $default  reduce using rule 109 (exclusive_or_expression)


state 303

  110 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  111 inclusive_or_expression: exclusive_or_expression .

    '^'  shift, and go to state 453

    $default  reduce using rule 111 (inclusive_or_expression)


state 304

  112 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  113 logical_and_expression: inclusive_or_expression .

    '|'  shift, and go to state 454

    $default  reduce using rule 113 (logical_and_expression)


state 305

  114 logical_and_expression: logical_and_expression . ANDAND inclusive_or_expression
  115 logical_or_expression: logical_and_expression .

    ANDAND  shift, and go to state 455

    $default  reduce using rule 115 (logical_or_expression)


state 306

  116 logical_or_expression: logical_or_expression . OROR logical_and_expression
  117 conditional_expression: logical_or_expression .
  118                       | logical_or_expression . '?' expression ':' assignment_expression
  120 assignment_expression: logical_or_expression . assignment_operator assignment_expression

    ADDEQ  shift, and go to state 456
    SUBEQ  shift, and go to state 457
    MULEQ  shift, and go to state 458
    DIVEQ  shift, and go to state 459
    MODEQ  shift, and go to state 460
    XOREQ  shift, and go to state 461
    ANDEQ  shift, and go to state 462
    OREQ   shift, and go to state 463
    SREQ   shift, and go to state 464
    SLEQ   shift, and go to state 465
    OROR   shift, and go to state 466
    '='    shift, and go to state 467
    '?'    shift, and go to state 468

    $default  reduce using rule 117 (conditional_expression)

    assignment_operator  go to state 469


state 307

  119 assignment_expression: conditional_expression .

    $default  reduce using rule 119 (assignment_expression)


state 308

  438 template_argument: assignment_expression .

    $default  reduce using rule 438 (template_argument)


state 309

  439 template_argument: type_id .

    $default  reduce using rule 439 (template_argument)


state 310

  292 type_id: type_specifier_seq . abstract_declarator_opt

    CLASS_NAME     shift, and go to state 97
    COLONCOLON     shift, and go to state 233
    '('            shift, and go to state 470
    '&'            shift, and go to state 41
    '*'            shift, and go to state 42
    TEMPLATE_NAME  shift, and go to state 44

    '('       [reduce using rule 485 (direct_abstract_declarator_opt)]
    '['       reduce using rule 485 (direct_abstract_declarator_opt)
    $default  reduce using rule 481 (abstract_declarator_opt)

    class_name                      go to state 104
    template_name                   go to state 48
    nested_name_specifier           go to state 234
    ptr_operator                    go to state 471
    abstract_declarator             go to state 369
    direct_abstract_declarator      go to state 370
    template_id                     go to state 90
    abstract_declarator_opt         go to state 472
    direct_abstract_declarator_opt  go to state 372


state 311

  435 template_id: template_name '<' template_argument_list . '>'
  437 template_argument_list: template_argument_list . ',' template_argument

    ','  shift, and go to state 473
    '>'  shift, and go to state 474


state 312

  436 template_argument_list: template_argument .

    $default  reduce using rule 436 (template_argument_list)


state 313

  121 assignment_expression: throw_expression .

    $default  reduce using rule 121 (assignment_expression)


state 314

  281 ptr_operator: nested_name_specifier '*' cv_qualifier_seq .

    $default  reduce using rule 281 (ptr_operator)


state 315

  180 simple_declaration: decl_specifier_seq init_declarator_list ';' .

    $default  reduce using rule 180 (simple_declaration)


state 316

  263 init_declarator_list: init_declarator_list ',' . init_declarator

    IDENTIFIER     shift, and go to state 1
    CLASS_NAME     shift, and go to state 3
    COLONCOLON     shift, and go to state 168
    OPERATOR       shift, and go to state 24
    '('            shift, and go to state 40
    '&'            shift, and go to state 41
    '*'            shift, and go to state 42
    '~'            shift, and go to state 43
    TEMPLATE_NAME  shift, and go to state 44

    class_name              go to state 104
    template_name           go to state 48
    identifier              go to state 169
    id_expression           go to state 51
    unqualified_id          go to state 52
    qualified_id            go to state 53
    nested_name_specifier   go to state 170
    init_declarator         go to state 475
    declarator              go to state 476
    direct_declarator       go to state 79
    ptr_operator            go to state 80
    declarator_id           go to state 82
    conversion_function_id  go to state 87
    operator_function_id    go to state 88
    template_id             go to state 90


state 317

  319 initializer: '(' . expression_list ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name                 go to state 104
    template_name              go to state 48
    identifier                 go to state 169
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 204
    postfix_expression         go to state 290
    expression_list            go to state 477
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 478
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90
    throw_expression           go to state 313


state 318

  318 initializer: '=' . initializer_clause

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '{'               shift, and go to state 479
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name                 go to state 104
    template_name              go to state 48
    identifier                 go to state 169
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 204
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 480
    initializer_clause         go to state 481
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90
    throw_expression           go to state 313


state 319

  478 initializer_opt: initializer .

    $default  reduce using rule 478 (initializer_opt)


state 320

  316 function_definition: decl_specifier_seq declarator function_try_block .

    $default  reduce using rule 316 (function_definition)


state 321

  264 init_declarator: declarator initializer_opt .

    $default  reduce using rule 264 (init_declarator)


state 322

  314 function_definition: decl_specifier_seq declarator ctor_initializer_opt . function_body

    '{'  shift, and go to state 331

    compound_statement  go to state 332
    function_body       go to state 482


state 323

  444 function_try_block: TRY ctor_initializer_opt . function_body handler_seq

    '{'  shift, and go to state 331

    compound_statement  go to state 332
    function_body       go to state 483


state 324

  376 mem_initializer_id: COLONCOLON . nested_name_specifier class_name
  377                   | COLONCOLON . class_name

    CLASS_NAME     shift, and go to state 97
    TEMPLATE_NAME  shift, and go to state 44

    class_name             go to state 484
    template_name          go to state 48
    nested_name_specifier  go to state 485
    template_id            go to state 90


state 325

   32 nested_name_specifier: class_name . COLONCOLON nested_name_specifier
   33                      | class_name . COLONCOLON
  379 mem_initializer_id: class_name .

    COLONCOLON  shift, and go to state 175

    $default  reduce using rule 379 (mem_initializer_id)


state 326

  380 mem_initializer_id: identifier .

    $default  reduce using rule 380 (mem_initializer_id)


state 327

  378 mem_initializer_id: nested_name_specifier . class_name

    CLASS_NAME     shift, and go to state 97
    TEMPLATE_NAME  shift, and go to state 44

    class_name     go to state 486
    template_name  go to state 48
    template_id    go to state 90


state 328

  372 ctor_initializer: ':' mem_initializer_list .

    $default  reduce using rule 372 (ctor_initializer)


state 329

  373 mem_initializer_list: mem_initializer .
  374                     | mem_initializer . ',' mem_initializer_list

    ','  shift, and go to state 487

    $default  reduce using rule 373 (mem_initializer_list)


state 330

  375 mem_initializer: mem_initializer_id . '(' expression_list_opt ')'

    '('  shift, and go to state 488


state 331

  148 compound_statement: '{' . statement_seq_opt '}'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    TYPEDEF_NAME      shift, and go to state 2
    CLASS_NAME        shift, and go to state 97
    ENUM_NAME         shift, and go to state 4
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    ASM               shift, and go to state 6
    AUTO              shift, and go to state 7
    BOOL              shift, and go to state 8
    BREAK             shift, and go to state 489
    CASE              shift, and go to state 490
    CHAR              shift, and go to state 9
    CLASS             shift, and go to state 10
    CONST             shift, and go to state 11
    CONST_CAST        shift, and go to state 261
    CONTINUE          shift, and go to state 491
    DEFAULT           shift, and go to state 492
    DELETE            shift, and go to state 262
    DO                shift, and go to state 493
    DOUBLE            shift, and go to state 12
    DYNAMIC_CAST      shift, and go to state 263
    ENUM              shift, and go to state 13
    EXPLICIT          shift, and go to state 14
    EXTERN            shift, and go to state 183
    FALSE             shift, and go to state 264
    FLOAT             shift, and go to state 17
    FOR               shift, and go to state 494
    FRIEND            shift, and go to state 18
    GOTO              shift, and go to state 495
    IF                shift, and go to state 496
    INLINE            shift, and go to state 19
    INT               shift, and go to state 20
    LONG              shift, and go to state 21
    MUTABLE           shift, and go to state 22
    NAMESPACE         shift, and go to state 497
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REGISTER          shift, and go to state 25
    REINTERPRET_CAST  shift, and go to state 266
    RETURN            shift, and go to state 498
    SHORT             shift, and go to state 26
    SIGNED            shift, and go to state 27
    SIZEOF            shift, and go to state 267
    STATIC            shift, and go to state 28
    STATIC_CAST       shift, and go to state 268
    STRUCT            shift, and go to state 29
    SWITCH            shift, and go to state 499
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TRY               shift, and go to state 500
    TYPEDEF           shift, and go to state 31
    TYPEID            shift, and go to state 272
    TYPENAME          shift, and go to state 32
    UNION             shift, and go to state 33
    UNSIGNED          shift, and go to state 34
    USING             shift, and go to state 35
    VIRTUAL           shift, and go to state 36
    VOID              shift, and go to state 37
    VOLATILE          shift, and go to state 38
    WCHAR_T           shift, and go to state 39
    WHILE             shift, and go to state 501
    '('               shift, and go to state 273
    '{'               shift, and go to state 331
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    '}'       reduce using rule 471 (statement_seq_opt)
    $default  reduce using rule 469 (expression_opt)

    typedef_name                go to state 45
    class_name                  go to state 46
    enum_name                   go to state 47
    template_name               go to state 48
    identifier                  go to state 502
    literal                     go to state 281
    integer_literal             go to state 282
    character_literal           go to state 283
    floating_literal            go to state 284
    string_literal              go to state 285
    boolean_literal             go to state 286
    primary_expression          go to state 287
    id_expression               go to state 288
    unqualified_id              go to state 52
    qualified_id                go to state 53
    nested_name_specifier       go to state 289
    postfix_expression          go to state 290
    unary_expression            go to state 291
    unary_operator              go to state 292
    new_expression              go to state 293
    delete_expression           go to state 294
    cast_expression             go to state 295
    pm_expression               go to state 296
    multiplicative_expression   go to state 297
    additive_expression         go to state 298
    shift_expression            go to state 299
    relational_expression       go to state 300
    equality_expression         go to state 301
    and_expression              go to state 302
    exclusive_or_expression     go to state 303
    inclusive_or_expression     go to state 304
    logical_and_expression      go to state 305
    logical_or_expression       go to state 306
    conditional_expression      go to state 307
    assignment_expression       go to state 425
    expression                  go to state 503
    statement                   go to state 504
    labeled_statement           go to state 505
    expression_statement        go to state 506
    compound_statement          go to state 507
    statement_seq               go to state 508
    selection_statement         go to state 509
    iteration_statement         go to state 510
    jump_statement              go to state 511
    declaration_statement       go to state 512
    block_declaration           go to state 513
    simple_declaration          go to state 58
    decl_specifier              go to state 59
    decl_specifier_seq          go to state 514
    storage_class_specifier     go to state 61
    function_specifier          go to state 62
    type_specifier              go to state 63
    simple_type_specifier       go to state 64
    type_name                   go to state 65
    elaborated_type_specifier   go to state 66
    enum_specifier              go to state 67
    namespace_alias_definition  go to state 73
    using_declaration           go to state 74
    using_directive             go to state 75
    asm_definition              go to state 76
    cv_qualifier                go to state 81
    class_specifier             go to state 84
    class_head                  go to state 85
    class_key                   go to state 86
    conversion_function_id      go to state 87
    operator_function_id        go to state 88
    template_id                 go to state 90
    try_block                   go to state 515
    throw_expression            go to state 313
    expression_opt              go to state 516
    statement_seq_opt           go to state 517


state 332

  317 function_body: compound_statement .

    $default  reduce using rule 317 (function_body)


state 333

  313 function_definition: declarator ctor_initializer_opt function_body .

    $default  reduce using rule 313 (function_definition)


state 334

  268 direct_declarator: direct_declarator '(' parameter_declaration_clause . ')' cv_qualifier_seq exception_specification
  269                  | direct_declarator '(' parameter_declaration_clause . ')' cv_qualifier_seq
  270                  | direct_declarator '(' parameter_declaration_clause . ')' exception_specification
  271                  | direct_declarator '(' parameter_declaration_clause . ')'

    ')'  shift, and go to state 518


state 335

   70 new_expression: COLONCOLON . NEW new_placement_opt new_type_id new_initializer_opt
   72               | COLONCOLON . NEW new_placement_opt '(' type_id ')' new_initializer_opt
   81 delete_expression: COLONCOLON . DELETE cast_expression
   83                  | COLONCOLON . DELETE '[' ']' cast_expression

    DELETE  shift, and go to state 407
    NEW     shift, and go to state 408


state 336

  116 logical_or_expression: logical_or_expression . OROR logical_and_expression
  117 conditional_expression: logical_or_expression .
  118                       | logical_or_expression . '?' expression ':' assignment_expression

    OROR  shift, and go to state 466
    '?'   shift, and go to state 468

    $default  reduce using rule 117 (conditional_expression)


state 337

  135 constant_expression: conditional_expression .

    $default  reduce using rule 135 (constant_expression)


state 338

  480 constant_expression_opt: constant_expression .

    $default  reduce using rule 480 (constant_expression_opt)


state 339

  275 direct_declarator: direct_declarator '[' constant_expression_opt . ']'

    ']'  shift, and go to state 519


state 340

  366 access_specifier: PRIVATE .

    $default  reduce using rule 366 (access_specifier)


state 341

  367 access_specifier: PROTECTED .

    $default  reduce using rule 367 (access_specifier)


state 342

  368 access_specifier: PUBLIC .

    $default  reduce using rule 368 (access_specifier)


state 343

  250 using_declaration: USING . TYPENAME COLONCOLON nested_name_specifier unqualified_id ';'
  251                  | USING . TYPENAME nested_name_specifier unqualified_id ';'
  252                  | USING . COLONCOLON nested_name_specifier unqualified_id ';'
  253                  | USING . nested_name_specifier unqualified_id ';'
  254                  | USING . COLONCOLON unqualified_id ';'

    CLASS_NAME     shift, and go to state 97
    COLONCOLON     shift, and go to state 164
    TYPENAME       shift, and go to state 166
    TEMPLATE_NAME  shift, and go to state 44

    class_name             go to state 104
    template_name          go to state 48
    nested_name_specifier  go to state 167
    template_id            go to state 90


state 344

  338 member_declaration: ';' .

    $default  reduce using rule 338 (member_declaration)


state 345

   27 unqualified_id: identifier .
  226 enum_name: identifier .
  348 member_declarator: identifier . ':' constant_expression

    ':'  shift, and go to state 520

    TRY       reduce using rule 27 (unqualified_id)
    ';'       reduce using rule 27 (unqualified_id)
    ';'       [reduce using rule 226 (enum_name)]
    '('       reduce using rule 27 (unqualified_id)
    '('       [reduce using rule 226 (enum_name)]
    ','       reduce using rule 27 (unqualified_id)
    ','       [reduce using rule 226 (enum_name)]
    '{'       reduce using rule 27 (unqualified_id)
    '['       reduce using rule 27 (unqualified_id)
    '='       reduce using rule 27 (unqualified_id)
    ':'       [reduce using rule 27 (unqualified_id)]
    $default  reduce using rule 226 (enum_name)


state 346

   26 id_expression: qualified_id .
  340 member_declaration: qualified_id . ';'

    ';'  shift, and go to state 521

    ';'       [reduce using rule 26 (id_expression)]
    $default  reduce using rule 26 (id_expression)


state 347

  188 decl_specifier_seq: decl_specifier_seq . decl_specifier
  314 function_definition: decl_specifier_seq . declarator ctor_initializer_opt function_body
  316                    | decl_specifier_seq . declarator function_try_block
  335 member_declaration: decl_specifier_seq . member_declarator_list ';'
  336                   | decl_specifier_seq . ';'

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 3
    ENUM_NAME      shift, and go to state 4
    COLONCOLON     shift, and go to state 5
    AUTO           shift, and go to state 7
    BOOL           shift, and go to state 8
    CHAR           shift, and go to state 9
    CLASS          shift, and go to state 10
    CONST          shift, and go to state 11
    DOUBLE         shift, and go to state 12
    ENUM           shift, and go to state 13
    EXPLICIT       shift, and go to state 14
    EXTERN         shift, and go to state 183
    FLOAT          shift, and go to state 17
    FRIEND         shift, and go to state 18
    INLINE         shift, and go to state 19
    INT            shift, and go to state 20
    LONG           shift, and go to state 21
    MUTABLE        shift, and go to state 22
    OPERATOR       shift, and go to state 24
    REGISTER       shift, and go to state 25
    SHORT          shift, and go to state 26
    SIGNED         shift, and go to state 27
    STATIC         shift, and go to state 28
    STRUCT         shift, and go to state 29
    TYPEDEF        shift, and go to state 31
    TYPENAME       shift, and go to state 32
    UNION          shift, and go to state 33
    UNSIGNED       shift, and go to state 34
    VIRTUAL        shift, and go to state 36
    VOID           shift, and go to state 37
    VOLATILE       shift, and go to state 38
    WCHAR_T        shift, and go to state 39
    ';'            shift, and go to state 522
    '('            shift, and go to state 40
    '&'            shift, and go to state 41
    '*'            shift, and go to state 42
    '~'            shift, and go to state 43
    TEMPLATE_NAME  shift, and go to state 44

    ';'       [reduce using rule 344 (member_declarator)]
    $default  reduce using rule 344 (member_declarator)

    typedef_name               go to state 45
    class_name                 go to state 46
    enum_name                  go to state 47
    template_name              go to state 48
    identifier                 go to state 345
    id_expression              go to state 51
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 54
    decl_specifier             go to state 185
    storage_class_specifier    go to state 61
    function_specifier         go to state 62
    type_specifier             go to state 63
    simple_type_specifier      go to state 64
    type_name                  go to state 65
    elaborated_type_specifier  go to state 66
    enum_specifier             go to state 67
    declarator                 go to state 523
    direct_declarator          go to state 79
    ptr_operator               go to state 80
    cv_qualifier               go to state 81
    declarator_id              go to state 82
    class_specifier            go to state 84
    class_head                 go to state 85
    class_key                  go to state 86
    member_declarator_list     go to state 524
    member_declarator          go to state 354
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90


state 348

  341 member_declaration: using_declaration .

    $default  reduce using rule 341 (member_declaration)


state 349

  313 function_definition: declarator . ctor_initializer_opt function_body
  315                    | declarator . function_try_block
  345 member_declarator: declarator .
  346                  | declarator . pure_specifier
  347                  | declarator . constant_initializer

    TRY  shift, and go to state 189
    '='  shift, and go to state 525
    ':'  shift, and go to state 190

    '{'       reduce using rule 487 (ctor_initializer_opt)
    $default  reduce using rule 345 (member_declarator)

    pure_specifier        go to state 526
    constant_initializer  go to state 527
    ctor_initializer      go to state 191
    function_try_block    go to state 192
    ctor_initializer_opt  go to state 193


state 350

  339 member_declaration: function_definition . SEMICOLON_opt

    ';'  shift, and go to state 528

    ';'       [reduce using rule 493 (SEMICOLON_opt)]
    $default  reduce using rule 493 (SEMICOLON_opt)

    SEMICOLON_opt  go to state 529


state 351

  492 member_specification_opt: member_specification .

    $default  reduce using rule 492 (member_specification_opt)


state 352

  333 member_specification: member_declaration . member_specification_opt

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 3
    ENUM_NAME      shift, and go to state 4
    COLONCOLON     shift, and go to state 5
    AUTO           shift, and go to state 7
    BOOL           shift, and go to state 8
    CHAR           shift, and go to state 9
    CLASS          shift, and go to state 10
    CONST          shift, and go to state 11
    DOUBLE         shift, and go to state 12
    ENUM           shift, and go to state 13
    EXPLICIT       shift, and go to state 14
    EXTERN         shift, and go to state 183
    FLOAT          shift, and go to state 17
    FRIEND         shift, and go to state 18
    INLINE         shift, and go to state 19
    INT            shift, and go to state 20
    LONG           shift, and go to state 21
    MUTABLE        shift, and go to state 22
    OPERATOR       shift, and go to state 24
    PRIVATE        shift, and go to state 340
    PROTECTED      shift, and go to state 341
    PUBLIC         shift, and go to state 342
    REGISTER       shift, and go to state 25
    SHORT          shift, and go to state 26
    SIGNED         shift, and go to state 27
    STATIC         shift, and go to state 28
    STRUCT         shift, and go to state 29
    TYPEDEF        shift, and go to state 31
    TYPENAME       shift, and go to state 32
    UNION          shift, and go to state 33
    UNSIGNED       shift, and go to state 34
    USING          shift, and go to state 343
    VIRTUAL        shift, and go to state 36
    VOID           shift, and go to state 37
    VOLATILE       shift, and go to state 38
    WCHAR_T        shift, and go to state 39
    ';'            shift, and go to state 344
    '('            shift, and go to state 40
    '&'            shift, and go to state 41
    '*'            shift, and go to state 42
    '~'            shift, and go to state 43
    TEMPLATE_NAME  shift, and go to state 44

    ';'       [reduce using rule 344 (member_declarator)]
    '}'       reduce using rule 491 (member_specification_opt)
    $default  reduce using rule 344 (member_declarator)

    typedef_name               go to state 45
    class_name                 go to state 46
    enum_name                  go to state 47
    template_name              go to state 48
    identifier                 go to state 345
    id_expression              go to state 51
    unqualified_id             go to state 52
    qualified_id               go to state 346
    nested_name_specifier      go to state 54
    decl_specifier             go to state 59
    decl_specifier_seq         go to state 347
    storage_class_specifier    go to state 61
    function_specifier         go to state 62
    type_specifier             go to state 63
    simple_type_specifier      go to state 64
    type_name                  go to state 65
    elaborated_type_specifier  go to state 66
    enum_specifier             go to state 67
    using_declaration          go to state 348
    declarator                 go to state 349
    direct_declarator          go to state 79
    ptr_operator               go to state 80
    cv_qualifier               go to state 81
    declarator_id              go to state 82
    function_definition        go to state 350
    class_specifier            go to state 84
    class_head                 go to state 85
    class_key                  go to state 86
    member_specification       go to state 351
    member_declaration         go to state 352
    member_declarator_list     go to state 353
    member_declarator          go to state 354
    access_specifier           go to state 355
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90
    member_specification_opt   go to state 530


state 353

  337 member_declaration: member_declarator_list . ';'
  343 member_declarator_list: member_declarator_list . ',' member_declarator

    ';'  shift, and go to state 531
    ','  shift, and go to state 532


state 354

  342 member_declarator_list: member_declarator .

    $default  reduce using rule 342 (member_declarator_list)


state 355

  334 member_specification: access_specifier . ':' member_specification_opt

    ':'  shift, and go to state 533


state 356

  325 class_specifier: class_head '{' member_specification_opt . '}'

    '}'  shift, and go to state 534


state 357

  220 elaborated_type_specifier: class_key COLONCOLON identifier .

    $default  reduce using rule 220 (elaborated_type_specifier)


state 358

  219 elaborated_type_specifier: class_key COLONCOLON nested_name_specifier . identifier

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 535


state 359

  351 base_clause: ':' . base_specifier_list

    CLASS_NAME     shift, and go to state 97
    COLONCOLON     shift, and go to state 536
    PRIVATE        shift, and go to state 340
    PROTECTED      shift, and go to state 341
    PUBLIC         shift, and go to state 342
    VIRTUAL        shift, and go to state 537
    TEMPLATE_NAME  shift, and go to state 44

    class_name             go to state 538
    template_name          go to state 48
    nested_name_specifier  go to state 539
    base_specifier_list    go to state 540
    base_specifier         go to state 541
    access_specifier       go to state 542
    template_id            go to state 90


state 360

  327 class_head: class_key identifier base_clause .

    $default  reduce using rule 327 (class_head)


state 361

  328 class_head: class_key nested_name_specifier identifier .
  329           | class_key nested_name_specifier identifier . base_clause

    ':'  shift, and go to state 359

    $default  reduce using rule 328 (class_head)

    base_clause  go to state 543


state 362

  424 template_declaration: EXPORT_opt TEMPLATE '<' . template_parameter_list '>' declaration

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 97
    ENUM_NAME      shift, and go to state 4
    COLONCOLON     shift, and go to state 113
    AUTO           shift, and go to state 7
    BOOL           shift, and go to state 8
    CHAR           shift, and go to state 9
    CLASS          shift, and go to state 544
    CONST          shift, and go to state 11
    DOUBLE         shift, and go to state 12
    ENUM           shift, and go to state 13
    EXPLICIT       shift, and go to state 14
    EXTERN         shift, and go to state 183
    FLOAT          shift, and go to state 17
    FRIEND         shift, and go to state 18
    INLINE         shift, and go to state 19
    INT            shift, and go to state 20
    LONG           shift, and go to state 21
    MUTABLE        shift, and go to state 22
    REGISTER       shift, and go to state 25
    SHORT          shift, and go to state 26
    SIGNED         shift, and go to state 27
    STATIC         shift, and go to state 28
    STRUCT         shift, and go to state 29
    TEMPLATE       shift, and go to state 545
    TYPEDEF        shift, and go to state 31
    TYPENAME       shift, and go to state 546
    UNION          shift, and go to state 33
    UNSIGNED       shift, and go to state 34
    VIRTUAL        shift, and go to state 36
    VOID           shift, and go to state 37
    VOLATILE       shift, and go to state 38
    WCHAR_T        shift, and go to state 39
    TEMPLATE_NAME  shift, and go to state 44

    typedef_name               go to state 45
    class_name                 go to state 46
    enum_name                  go to state 47
    template_name              go to state 48
    identifier                 go to state 154
    nested_name_specifier      go to state 155
    decl_specifier             go to state 59
    decl_specifier_seq         go to state 207
    storage_class_specifier    go to state 61
    function_specifier         go to state 62
    type_specifier             go to state 63
    simple_type_specifier      go to state 64
    type_name                  go to state 65
    elaborated_type_specifier  go to state 66
    enum_specifier             go to state 67
    cv_qualifier               go to state 81
    parameter_declaration      go to state 547
    class_specifier            go to state 84
    class_head                 go to state 85
    class_key                  go to state 86
    template_parameter_list    go to state 548
    template_parameter         go to state 549
    type_parameter             go to state 550
    template_id                go to state 90


state 363

  274 direct_declarator: CLASS_NAME COLONCOLON CLASS_NAME '(' . parameter_declaration_clause ')'

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 97
    ENUM_NAME      shift, and go to state 4
    ELLIPSIS       shift, and go to state 206
    COLONCOLON     shift, and go to state 113
    AUTO           shift, and go to state 7
    BOOL           shift, and go to state 8
    CHAR           shift, and go to state 9
    CLASS          shift, and go to state 10
    CONST          shift, and go to state 11
    DOUBLE         shift, and go to state 12
    ENUM           shift, and go to state 13
    EXPLICIT       shift, and go to state 14
    EXTERN         shift, and go to state 183
    FLOAT          shift, and go to state 17
    FRIEND         shift, and go to state 18
    INLINE         shift, and go to state 19
    INT            shift, and go to state 20
    LONG           shift, and go to state 21
    MUTABLE        shift, and go to state 22
    REGISTER       shift, and go to state 25
    SHORT          shift, and go to state 26
    SIGNED         shift, and go to state 27
    STATIC         shift, and go to state 28
    STRUCT         shift, and go to state 29
    TYPEDEF        shift, and go to state 31
    TYPENAME       shift, and go to state 32
    UNION          shift, and go to state 33
    UNSIGNED       shift, and go to state 34
    VIRTUAL        shift, and go to state 36
    VOID           shift, and go to state 37
    VOLATILE       shift, and go to state 38
    WCHAR_T        shift, and go to state 39
    TEMPLATE_NAME  shift, and go to state 44

    $default  reduce using rule 305 (parameter_declaration_clause)

    typedef_name                  go to state 45
    class_name                    go to state 46
    enum_name                     go to state 47
    template_name                 go to state 48
    identifier                    go to state 154
    nested_name_specifier         go to state 155
    decl_specifier                go to state 59
    decl_specifier_seq            go to state 207
    storage_class_specifier       go to state 61
    function_specifier            go to state 62
    type_specifier                go to state 63
    simple_type_specifier         go to state 64
    type_name                     go to state 65
    elaborated_type_specifier     go to state 66
    enum_specifier                go to state 67
    cv_qualifier                  go to state 81
    parameter_declaration_clause  go to state 551
    parameter_declaration_list    go to state 209
    parameter_declaration         go to state 210
    class_specifier               go to state 84
    class_head                    go to state 85
    class_key                     go to state 86
    template_id                   go to state 90


state 364

   31 qualified_id: nested_name_specifier . unqualified_id
  290 declarator_id: COLONCOLON nested_name_specifier . type_name

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 97
    ENUM_NAME      shift, and go to state 4
    OPERATOR       shift, and go to state 24
    '~'            shift, and go to state 43
    TEMPLATE_NAME  shift, and go to state 44

    typedef_name            go to state 45
    class_name              go to state 179
    enum_name               go to state 47
    template_name           go to state 48
    identifier              go to state 49
    unqualified_id          go to state 180
    type_name               go to state 212
    conversion_function_id  go to state 87
    operator_function_id    go to state 88
    template_id             go to state 90


state 365

  273 direct_declarator: CLASS_NAME COLONCOLON declarator_id '(' . parameter_declaration_clause ')'

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 97
    ENUM_NAME      shift, and go to state 4
    ELLIPSIS       shift, and go to state 206
    COLONCOLON     shift, and go to state 113
    AUTO           shift, and go to state 7
    BOOL           shift, and go to state 8
    CHAR           shift, and go to state 9
    CLASS          shift, and go to state 10
    CONST          shift, and go to state 11
    DOUBLE         shift, and go to state 12
    ENUM           shift, and go to state 13
    EXPLICIT       shift, and go to state 14
    EXTERN         shift, and go to state 183
    FLOAT          shift, and go to state 17
    FRIEND         shift, and go to state 18
    INLINE         shift, and go to state 19
    INT            shift, and go to state 20
    LONG           shift, and go to state 21
    MUTABLE        shift, and go to state 22
    REGISTER       shift, and go to state 25
    SHORT          shift, and go to state 26
    SIGNED         shift, and go to state 27
    STATIC         shift, and go to state 28
    STRUCT         shift, and go to state 29
    TYPEDEF        shift, and go to state 31
    TYPENAME       shift, and go to state 32
    UNION          shift, and go to state 33
    UNSIGNED       shift, and go to state 34
    VIRTUAL        shift, and go to state 36
    VOID           shift, and go to state 37
    VOLATILE       shift, and go to state 38
    WCHAR_T        shift, and go to state 39
    TEMPLATE_NAME  shift, and go to state 44

    $default  reduce using rule 305 (parameter_declaration_clause)

    typedef_name                  go to state 45
    class_name                    go to state 46
    enum_name                     go to state 47
    template_name                 go to state 48
    identifier                    go to state 154
    nested_name_specifier         go to state 155
    decl_specifier                go to state 59
    decl_specifier_seq            go to state 207
    storage_class_specifier       go to state 61
    function_specifier            go to state 62
    type_specifier                go to state 63
    simple_type_specifier         go to state 64
    type_name                     go to state 65
    elaborated_type_specifier     go to state 66
    enum_specifier                go to state 67
    cv_qualifier                  go to state 81
    parameter_declaration_clause  go to state 552
    parameter_declaration_list    go to state 209
    parameter_declaration         go to state 210
    class_specifier               go to state 84
    class_head                    go to state 85
    class_key                     go to state 86
    template_id                   go to state 90


state 366

  276 direct_declarator: '(' . declarator ')'
  301 direct_abstract_declarator: '(' . abstract_declarator ')'

    IDENTIFIER     shift, and go to state 1
    CLASS_NAME     shift, and go to state 3
    COLONCOLON     shift, and go to state 168
    OPERATOR       shift, and go to state 24
    '('            shift, and go to state 366
    '&'            shift, and go to state 41
    '*'            shift, and go to state 42
    '~'            shift, and go to state 43
    TEMPLATE_NAME  shift, and go to state 44

    '('       [reduce using rule 485 (direct_abstract_declarator_opt)]
    $default  reduce using rule 485 (direct_abstract_declarator_opt)

    class_name                      go to state 104
    template_name                   go to state 48
    identifier                      go to state 169
    id_expression                   go to state 51
    unqualified_id                  go to state 52
    qualified_id                    go to state 53
    nested_name_specifier           go to state 170
    declarator                      go to state 171
    direct_declarator               go to state 79
    ptr_operator                    go to state 368
    declarator_id                   go to state 82
    abstract_declarator             go to state 553
    direct_abstract_declarator      go to state 370
    conversion_function_id          go to state 87
    operator_function_id            go to state 88
    template_id                     go to state 90
    direct_abstract_declarator_opt  go to state 372


state 367

  309 parameter_declaration: decl_specifier_seq declarator .
  310                      | decl_specifier_seq declarator . '=' assignment_expression

    '='  shift, and go to state 554

    $default  reduce using rule 309 (parameter_declaration)


state 368

  266 declarator: ptr_operator . declarator
  294 abstract_declarator: ptr_operator . abstract_declarator_opt

    IDENTIFIER     shift, and go to state 1
    CLASS_NAME     shift, and go to state 3
    COLONCOLON     shift, and go to state 168
    OPERATOR       shift, and go to state 24
    '('            shift, and go to state 366
    '&'            shift, and go to state 41
    '*'            shift, and go to state 42
    '~'            shift, and go to state 43
    TEMPLATE_NAME  shift, and go to state 44

    '('       [reduce using rule 485 (direct_abstract_declarator_opt)]
    '['       reduce using rule 485 (direct_abstract_declarator_opt)
    $default  reduce using rule 481 (abstract_declarator_opt)

    class_name                      go to state 104
    template_name                   go to state 48
    identifier                      go to state 169
    id_expression                   go to state 51
    unqualified_id                  go to state 52
    qualified_id                    go to state 53
    nested_name_specifier           go to state 170
    declarator                      go to state 196
    direct_declarator               go to state 79
    ptr_operator                    go to state 368
    declarator_id                   go to state 82
    abstract_declarator             go to state 369
    direct_abstract_declarator      go to state 370
    conversion_function_id          go to state 87
    operator_function_id            go to state 88
    template_id                     go to state 90
    abstract_declarator_opt         go to state 555
    direct_abstract_declarator_opt  go to state 372


state 369

  482 abstract_declarator_opt: abstract_declarator .

    $default  reduce using rule 482 (abstract_declarator_opt)


state 370

  295 abstract_declarator: direct_abstract_declarator .
  486 direct_abstract_declarator_opt: direct_abstract_declarator .

    '('       reduce using rule 486 (direct_abstract_declarator_opt)
    '['       reduce using rule 486 (direct_abstract_declarator_opt)
    $default  reduce using rule 295 (abstract_declarator)


state 371

  311 parameter_declaration: decl_specifier_seq abstract_declarator_opt .
  312                      | decl_specifier_seq abstract_declarator_opt . '=' assignment_expression

    '='  shift, and go to state 556

    $default  reduce using rule 311 (parameter_declaration)


state 372

  296 direct_abstract_declarator: direct_abstract_declarator_opt . '(' parameter_declaration_clause ')' cv_qualifier_seq exception_specification
  297                           | direct_abstract_declarator_opt . '(' parameter_declaration_clause ')' cv_qualifier_seq
  298                           | direct_abstract_declarator_opt . '(' parameter_declaration_clause ')' exception_specification
  299                           | direct_abstract_declarator_opt . '(' parameter_declaration_clause ')'
  300                           | direct_abstract_declarator_opt . '[' constant_expression_opt ']'

    '('  shift, and go to state 557
    '['  shift, and go to state 558


state 373

  272 direct_declarator: CLASS_NAME '(' parameter_declaration_clause ')' .

    $default  reduce using rule 272 (direct_declarator)


state 374

  302 parameter_declaration_clause: parameter_declaration_list ELLIPSIS .

    $default  reduce using rule 302 (parameter_declaration_clause)


state 375

  306 parameter_declaration_clause: parameter_declaration_list ',' . ELLIPSIS
  308 parameter_declaration_list: parameter_declaration_list ',' . parameter_declaration

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 97
    ENUM_NAME      shift, and go to state 4
    ELLIPSIS       shift, and go to state 559
    COLONCOLON     shift, and go to state 113
    AUTO           shift, and go to state 7
    BOOL           shift, and go to state 8
    CHAR           shift, and go to state 9
    CLASS          shift, and go to state 10
    CONST          shift, and go to state 11
    DOUBLE         shift, and go to state 12
    ENUM           shift, and go to state 13
    EXPLICIT       shift, and go to state 14
    EXTERN         shift, and go to state 183
    FLOAT          shift, and go to state 17
    FRIEND         shift, and go to state 18
    INLINE         shift, and go to state 19
    INT            shift, and go to state 20
    LONG           shift, and go to state 21
    MUTABLE        shift, and go to state 22
    REGISTER       shift, and go to state 25
    SHORT          shift, and go to state 26
    SIGNED         shift, and go to state 27
    STATIC         shift, and go to state 28
    STRUCT         shift, and go to state 29
    TYPEDEF        shift, and go to state 31
    TYPENAME       shift, and go to state 32
    UNION          shift, and go to state 33
    UNSIGNED       shift, and go to state 34
    VIRTUAL        shift, and go to state 36
    VOID           shift, and go to state 37
    VOLATILE       shift, and go to state 38
    WCHAR_T        shift, and go to state 39
    TEMPLATE_NAME  shift, and go to state 44

    typedef_name               go to state 45
    class_name                 go to state 46
    enum_name                  go to state 47
    template_name              go to state 48
    identifier                 go to state 154
    nested_name_specifier      go to state 155
    decl_specifier             go to state 59
    decl_specifier_seq         go to state 207
    storage_class_specifier    go to state 61
    function_specifier         go to state 62
    type_specifier             go to state 63
    simple_type_specifier      go to state 64
    type_name                  go to state 65
    elaborated_type_specifier  go to state 66
    enum_specifier             go to state 67
    cv_qualifier               go to state 81
    parameter_declaration      go to state 560
    class_specifier            go to state 84
    class_head                 go to state 85
    class_key                  go to state 86
    template_id                go to state 90


state 376

  283 ptr_operator: COLONCOLON nested_name_specifier '*' cv_qualifier_seq .

    $default  reduce using rule 283 (ptr_operator)


state 377

  259 asm_definition: ASM '(' string_literal ')' . ';'

    ';'  shift, and go to state 561


state 378

  221 elaborated_type_specifier: ENUM COLONCOLON nested_name_specifier identifier .

    $default  reduce using rule 221 (elaborated_type_specifier)


state 379

  232 enumerator: identifier .

    $default  reduce using rule 232 (enumerator)


state 380

  229 enumerator_list: enumerator_list . ',' enumerator_definition
  476 enumerator_list_opt: enumerator_list .

    ','  shift, and go to state 562

    $default  reduce using rule 476 (enumerator_list_opt)


state 381

  228 enumerator_list: enumerator_definition .

    $default  reduce using rule 228 (enumerator_list)


state 382

  230 enumerator_definition: enumerator .
  231                      | enumerator . '=' constant_expression

    '='  shift, and go to state 563

    $default  reduce using rule 230 (enumerator_definition)


state 383

  227 enum_specifier: ENUM identifier '{' enumerator_list_opt . '}'

    '}'  shift, and go to state 564


state 384

  260 linkage_specification: EXTERN string_literal '{' declaration_seq_opt . '}'

    '}'  shift, and go to state 565


state 385

  242 unnamed_namespace_definition: NAMESPACE '{' namespace_body '}' .

    $default  reduce using rule 242 (unnamed_namespace_definition)


state 386

  241 extension_namespace_definition: NAMESPACE original_namespace_name '{' namespace_body . '}'

    '}'  shift, and go to state 566


state 387

  240 original_namespace_definition: NAMESPACE identifier '{' namespace_body . '}'

    '}'  shift, and go to state 567


state 388

  246 qualified_namespace_specifier: COLONCOLON . nested_name_specifier namespace_name
  247                              | COLONCOLON . namespace_name

    IDENTIFIER      shift, and go to state 1
    CLASS_NAME      shift, and go to state 97
    NAMESPACE_NAME  shift, and go to state 110
    TEMPLATE_NAME   shift, and go to state 44

    namespace_name           go to state 568
    original_namespace_name  go to state 244
    class_name               go to state 104
    template_name            go to state 48
    identifier               go to state 245
    nested_name_specifier    go to state 569
    namespace_alias          go to state 247
    template_id              go to state 90


state 389

  249 qualified_namespace_specifier: namespace_name .

    $default  reduce using rule 249 (qualified_namespace_specifier)


state 390

  248 qualified_namespace_specifier: nested_name_specifier . namespace_name

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 110

    namespace_name           go to state 570
    original_namespace_name  go to state 244
    identifier               go to state 245
    namespace_alias          go to state 247


state 391

  245 namespace_alias_definition: NAMESPACE identifier '=' qualified_namespace_specifier . ';'

    ';'  shift, and go to state 571


state 392

  385 operator: DELETE '[' ']' .

    $default  reduce using rule 385 (operator)


state 393

  384 operator: NEW '[' ']' .

    $default  reduce using rule 384 (operator)


state 394

  282 ptr_operator: COLONCOLON nested_name_specifier . '*'
  283             | COLONCOLON nested_name_specifier . '*' cv_qualifier_seq

    '*'  shift, and go to state 211


state 395

  371 conversion_declarator: ptr_operator conversion_declarator_opt .

    $default  reduce using rule 371 (conversion_declarator)


state 396

  442 explicit_specialization: TEMPLATE '<' '>' declaration .

    $default  reduce using rule 442 (explicit_specialization)


state 397

  224 elaborated_type_specifier: TYPENAME COLONCOLON_opt nested_name_specifier identifier .
  225                          | TYPENAME COLONCOLON_opt nested_name_specifier identifier . '<' template_argument_list '>'

    '<'  shift, and go to state 572

    '<'       [reduce using rule 224 (elaborated_type_specifier)]
    $default  reduce using rule 224 (elaborated_type_specifier)


state 398

  254 using_declaration: USING COLONCOLON unqualified_id ';' .

    $default  reduce using rule 254 (using_declaration)


state 399

  252 using_declaration: USING COLONCOLON nested_name_specifier unqualified_id . ';'

    ';'  shift, and go to state 573


state 400

  256 using_directive: USING NAMESPACE COLONCOLON namespace_name . ';'

    ';'  shift, and go to state 574


state 401

  255 using_directive: USING NAMESPACE COLONCOLON nested_name_specifier . namespace_name ';'

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 110

    namespace_name           go to state 575
    original_namespace_name  go to state 244
    identifier               go to state 245
    namespace_alias          go to state 247


state 402

  258 using_directive: USING NAMESPACE namespace_name ';' .

    $default  reduce using rule 258 (using_directive)


state 403

  257 using_directive: USING NAMESPACE nested_name_specifier namespace_name . ';'

    ';'  shift, and go to state 576


state 404

  250 using_declaration: USING TYPENAME COLONCOLON nested_name_specifier . unqualified_id ';'

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 24
    '~'         shift, and go to state 43

    identifier              go to state 169
    unqualified_id          go to state 577
    conversion_function_id  go to state 87
    operator_function_id    go to state 88


state 405

  251 using_declaration: USING TYPENAME nested_name_specifier unqualified_id . ';'

    ';'  shift, and go to state 578


state 406

  253 using_declaration: USING nested_name_specifier unqualified_id ';' .

    $default  reduce using rule 253 (using_declaration)


state 407

   81 delete_expression: COLONCOLON DELETE . cast_expression
   83                  | COLONCOLON DELETE . '[' ']' cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '['               shift, and go to state 579
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name              go to state 104
    template_name           go to state 48
    identifier              go to state 169
    literal                 go to state 281
    integer_literal         go to state 282
    character_literal       go to state 283
    floating_literal        go to state 284
    string_literal          go to state 285
    boolean_literal         go to state 286
    primary_expression      go to state 287
    id_expression           go to state 288
    unqualified_id          go to state 52
    qualified_id            go to state 53
    nested_name_specifier   go to state 204
    postfix_expression      go to state 290
    unary_expression        go to state 291
    unary_operator          go to state 292
    new_expression          go to state 293
    delete_expression       go to state 294
    cast_expression         go to state 580
    conversion_function_id  go to state 87
    operator_function_id    go to state 88
    template_id             go to state 90


state 408

   70 new_expression: COLONCOLON NEW . new_placement_opt new_type_id new_initializer_opt
   72               | COLONCOLON NEW . new_placement_opt '(' type_id ')' new_initializer_opt

    '('  shift, and go to state 415

    '('       [reduce using rule 463 (new_placement_opt)]
    $default  reduce using rule 463 (new_placement_opt)

    new_placement      go to state 416
    new_placement_opt  go to state 581


state 409

   56 unary_expression: PLUSPLUS cast_expression .

    $default  reduce using rule 56 (unary_expression)


state 410

   57 unary_expression: MINUSMINUS cast_expression .

    $default  reduce using rule 57 (unary_expression)


state 411

   50 postfix_expression: CONST_CAST '<' . type_id '>' '(' expression ')'

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 97
    ENUM_NAME      shift, and go to state 4
    COLONCOLON     shift, and go to state 113
    BOOL           shift, and go to state 8
    CHAR           shift, and go to state 9
    CLASS          shift, and go to state 10
    CONST          shift, and go to state 11
    DOUBLE         shift, and go to state 12
    ENUM           shift, and go to state 13
    FLOAT          shift, and go to state 17
    INT            shift, and go to state 20
    LONG           shift, and go to state 21
    SHORT          shift, and go to state 26
    SIGNED         shift, and go to state 27
    STRUCT         shift, and go to state 29
    TYPENAME       shift, and go to state 32
    UNION          shift, and go to state 33
    UNSIGNED       shift, and go to state 34
    VOID           shift, and go to state 37
    VOLATILE       shift, and go to state 38
    WCHAR_T        shift, and go to state 39
    TEMPLATE_NAME  shift, and go to state 44

    typedef_name               go to state 45
    class_name                 go to state 46
    enum_name                  go to state 47
    template_name              go to state 48
    identifier                 go to state 154
    nested_name_specifier      go to state 155
    type_specifier             go to state 156
    simple_type_specifier      go to state 64
    type_name                  go to state 65
    elaborated_type_specifier  go to state 66
    enum_specifier             go to state 67
    cv_qualifier               go to state 81
    type_id                    go to state 582
    type_specifier_seq         go to state 310
    class_specifier            go to state 84
    class_head                 go to state 85
    class_key                  go to state 86
    template_id                go to state 90


state 412

   82 delete_expression: DELETE '[' . ']' cast_expression

    ']'  shift, and go to state 583


state 413

   80 delete_expression: DELETE cast_expression .

    $default  reduce using rule 80 (delete_expression)


state 414

   47 postfix_expression: DYNAMIC_CAST '<' . type_id '>' '(' expression ')'

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 97
    ENUM_NAME      shift, and go to state 4
    COLONCOLON     shift, and go to state 113
    BOOL           shift, and go to state 8
    CHAR           shift, and go to state 9
    CLASS          shift, and go to state 10
    CONST          shift, and go to state 11
    DOUBLE         shift, and go to state 12
    ENUM           shift, and go to state 13
    FLOAT          shift, and go to state 17
    INT            shift, and go to state 20
    LONG           shift, and go to state 21
    SHORT          shift, and go to state 26
    SIGNED         shift, and go to state 27
    STRUCT         shift, and go to state 29
    TYPENAME       shift, and go to state 32
    UNION          shift, and go to state 33
    UNSIGNED       shift, and go to state 34
    VOID           shift, and go to state 37
    VOLATILE       shift, and go to state 38
    WCHAR_T        shift, and go to state 39
    TEMPLATE_NAME  shift, and go to state 44

    typedef_name               go to state 45
    class_name                 go to state 46
    enum_name                  go to state 47
    template_name              go to state 48
    identifier                 go to state 154
    nested_name_specifier      go to state 155
    type_specifier             go to state 156
    simple_type_specifier      go to state 64
    type_name                  go to state 65
    elaborated_type_specifier  go to state 66
    enum_specifier             go to state 67
    cv_qualifier               go to state 81
    type_id                    go to state 584
    type_specifier_seq         go to state 310
    class_specifier            go to state 84
    class_head                 go to state 85
    class_key                  go to state 86
    template_id                go to state 90


state 415

   73 new_placement: '(' . expression_list ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name                 go to state 104
    template_name              go to state 48
    identifier                 go to state 169
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 204
    postfix_expression         go to state 290
    expression_list            go to state 585
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 478
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90
    throw_expression           go to state 313


state 416

  464 new_placement_opt: new_placement .

    $default  reduce using rule 464 (new_placement_opt)


state 417

   69 new_expression: NEW new_placement_opt . new_type_id new_initializer_opt
   71               | NEW new_placement_opt . '(' type_id ')' new_initializer_opt

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 97
    ENUM_NAME      shift, and go to state 4
    COLONCOLON     shift, and go to state 113
    BOOL           shift, and go to state 8
    CHAR           shift, and go to state 9
    CLASS          shift, and go to state 10
    CONST          shift, and go to state 11
    DOUBLE         shift, and go to state 12
    ENUM           shift, and go to state 13
    FLOAT          shift, and go to state 17
    INT            shift, and go to state 20
    LONG           shift, and go to state 21
    SHORT          shift, and go to state 26
    SIGNED         shift, and go to state 27
    STRUCT         shift, and go to state 29
    TYPENAME       shift, and go to state 32
    UNION          shift, and go to state 33
    UNSIGNED       shift, and go to state 34
    VOID           shift, and go to state 37
    VOLATILE       shift, and go to state 38
    WCHAR_T        shift, and go to state 39
    '('            shift, and go to state 586
    TEMPLATE_NAME  shift, and go to state 44

    typedef_name               go to state 45
    class_name                 go to state 46
    enum_name                  go to state 47
    template_name              go to state 48
    identifier                 go to state 154
    nested_name_specifier      go to state 155
    new_type_id                go to state 587
    type_specifier             go to state 156
    simple_type_specifier      go to state 64
    type_name                  go to state 65
    elaborated_type_specifier  go to state 66
    enum_specifier             go to state 67
    cv_qualifier               go to state 81
    type_specifier_seq         go to state 588
    class_specifier            go to state 84
    class_head                 go to state 85
    class_key                  go to state 86
    template_id                go to state 90


state 418

   49 postfix_expression: REINTERPRET_CAST '<' . type_id '>' '(' expression ')'

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 97
    ENUM_NAME      shift, and go to state 4
    COLONCOLON     shift, and go to state 113
    BOOL           shift, and go to state 8
    CHAR           shift, and go to state 9
    CLASS          shift, and go to state 10
    CONST          shift, and go to state 11
    DOUBLE         shift, and go to state 12
    ENUM           shift, and go to state 13
    FLOAT          shift, and go to state 17
    INT            shift, and go to state 20
    LONG           shift, and go to state 21
    SHORT          shift, and go to state 26
    SIGNED         shift, and go to state 27
    STRUCT         shift, and go to state 29
    TYPENAME       shift, and go to state 32
    UNION          shift, and go to state 33
    UNSIGNED       shift, and go to state 34
    VOID           shift, and go to state 37
    VOLATILE       shift, and go to state 38
    WCHAR_T        shift, and go to state 39
    TEMPLATE_NAME  shift, and go to state 44

    typedef_name               go to state 45
    class_name                 go to state 46
    enum_name                  go to state 47
    template_name              go to state 48
    identifier                 go to state 154
    nested_name_specifier      go to state 155
    type_specifier             go to state 156
    simple_type_specifier      go to state 64
    type_name                  go to state 65
    elaborated_type_specifier  go to state 66
    enum_specifier             go to state 67
    cv_qualifier               go to state 81
    type_id                    go to state 589
    type_specifier_seq         go to state 310
    class_specifier            go to state 84
    class_head                 go to state 85
    class_key                  go to state 86
    template_id                go to state 90


state 419

   23 primary_expression: '(' . expression ')'
   62 unary_expression: SIZEOF '(' . type_id ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    TYPEDEF_NAME      shift, and go to state 2
    CLASS_NAME        shift, and go to state 97
    ENUM_NAME         shift, and go to state 4
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 8
    CHAR              shift, and go to state 9
    CLASS             shift, and go to state 10
    CONST             shift, and go to state 11
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DOUBLE            shift, and go to state 12
    DYNAMIC_CAST      shift, and go to state 263
    ENUM              shift, and go to state 13
    FALSE             shift, and go to state 264
    FLOAT             shift, and go to state 17
    INT               shift, and go to state 20
    LONG              shift, and go to state 21
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SHORT             shift, and go to state 26
    SIGNED            shift, and go to state 27
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    STRUCT            shift, and go to state 29
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    TYPENAME          shift, and go to state 32
    UNION             shift, and go to state 33
    UNSIGNED          shift, and go to state 34
    VOID              shift, and go to state 37
    VOLATILE          shift, and go to state 38
    WCHAR_T           shift, and go to state 39
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    typedef_name               go to state 45
    class_name                 go to state 46
    enum_name                  go to state 47
    template_name              go to state 48
    identifier                 go to state 49
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 289
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 425
    expression                 go to state 426
    type_specifier             go to state 156
    simple_type_specifier      go to state 64
    type_name                  go to state 65
    elaborated_type_specifier  go to state 66
    enum_specifier             go to state 67
    cv_qualifier               go to state 81
    type_id                    go to state 590
    type_specifier_seq         go to state 310
    class_specifier            go to state 84
    class_head                 go to state 85
    class_key                  go to state 86
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90
    throw_expression           go to state 313


state 420

   61 unary_expression: SIZEOF unary_expression .

    $default  reduce using rule 61 (unary_expression)


state 421

   48 postfix_expression: STATIC_CAST '<' . type_id '>' '(' expression ')'

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 97
    ENUM_NAME      shift, and go to state 4
    COLONCOLON     shift, and go to state 113
    BOOL           shift, and go to state 8
    CHAR           shift, and go to state 9
    CLASS          shift, and go to state 10
    CONST          shift, and go to state 11
    DOUBLE         shift, and go to state 12
    ENUM           shift, and go to state 13
    FLOAT          shift, and go to state 17
    INT            shift, and go to state 20
    LONG           shift, and go to state 21
    SHORT          shift, and go to state 26
    SIGNED         shift, and go to state 27
    STRUCT         shift, and go to state 29
    TYPENAME       shift, and go to state 32
    UNION          shift, and go to state 33
    UNSIGNED       shift, and go to state 34
    VOID           shift, and go to state 37
    VOLATILE       shift, and go to state 38
    WCHAR_T        shift, and go to state 39
    TEMPLATE_NAME  shift, and go to state 44

    typedef_name               go to state 45
    class_name                 go to state 46
    enum_name                  go to state 47
    template_name              go to state 48
    identifier                 go to state 154
    nested_name_specifier      go to state 155
    type_specifier             go to state 156
    simple_type_specifier      go to state 64
    type_name                  go to state 65
    elaborated_type_specifier  go to state 66
    enum_specifier             go to state 67
    cv_qualifier               go to state 81
    type_id                    go to state 591
    type_specifier_seq         go to state 310
    class_specifier            go to state 84
    class_head                 go to state 85
    class_key                  go to state 86
    template_id                go to state 90


state 422

  502 assignment_expression_opt: assignment_expression .

    $default  reduce using rule 502 (assignment_expression_opt)


state 423

  451 throw_expression: THROW assignment_expression_opt .

    $default  reduce using rule 451 (throw_expression)


state 424

   51 postfix_expression: TYPEID '(' . expression ')'
   52                   | TYPEID '(' . type_id ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    TYPEDEF_NAME      shift, and go to state 2
    CLASS_NAME        shift, and go to state 97
    ENUM_NAME         shift, and go to state 4
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 8
    CHAR              shift, and go to state 9
    CLASS             shift, and go to state 10
    CONST             shift, and go to state 11
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DOUBLE            shift, and go to state 12
    DYNAMIC_CAST      shift, and go to state 263
    ENUM              shift, and go to state 13
    FALSE             shift, and go to state 264
    FLOAT             shift, and go to state 17
    INT               shift, and go to state 20
    LONG              shift, and go to state 21
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SHORT             shift, and go to state 26
    SIGNED            shift, and go to state 27
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    STRUCT            shift, and go to state 29
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    TYPENAME          shift, and go to state 32
    UNION             shift, and go to state 33
    UNSIGNED          shift, and go to state 34
    VOID              shift, and go to state 37
    VOLATILE          shift, and go to state 38
    WCHAR_T           shift, and go to state 39
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    typedef_name               go to state 45
    class_name                 go to state 46
    enum_name                  go to state 47
    template_name              go to state 48
    identifier                 go to state 49
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 289
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 425
    expression                 go to state 592
    type_specifier             go to state 156
    simple_type_specifier      go to state 64
    type_name                  go to state 65
    elaborated_type_specifier  go to state 66
    enum_specifier             go to state 67
    cv_qualifier               go to state 81
    type_id                    go to state 593
    type_specifier_seq         go to state 310
    class_specifier            go to state 84
    class_head                 go to state 85
    class_key                  go to state 86
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90
    throw_expression           go to state 313


state 425

  133 expression: assignment_expression .

    $default  reduce using rule 133 (expression)


state 426

   23 primary_expression: '(' expression . ')'
  134 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 594
    ','  shift, and go to state 595


state 427

   85 cast_expression: '(' type_id . ')' cast_expression

    ')'  shift, and go to state 596


state 428

   59 unary_expression: '&' cast_expression .

    $default  reduce using rule 59 (unary_expression)


state 429

   58 unary_expression: '*' cast_expression .

    $default  reduce using rule 58 (unary_expression)


state 430

   45 postfix_expression: postfix_expression PLUSPLUS .

    $default  reduce using rule 45 (postfix_expression)


state 431

   46 postfix_expression: postfix_expression MINUSMINUS .

    $default  reduce using rule 46 (postfix_expression)


state 432

   41 postfix_expression: postfix_expression ARROW . TEMPLATE COLONCOLON id_expression
   42                   | postfix_expression ARROW . TEMPLATE id_expression
   43                   | postfix_expression ARROW . COLONCOLON id_expression
   44                   | postfix_expression ARROW . id_expression

    IDENTIFIER     shift, and go to state 1
    CLASS_NAME     shift, and go to state 97
    COLONCOLON     shift, and go to state 597
    OPERATOR       shift, and go to state 24
    TEMPLATE       shift, and go to state 598
    '~'            shift, and go to state 43
    TEMPLATE_NAME  shift, and go to state 44

    class_name              go to state 104
    template_name           go to state 48
    identifier              go to state 169
    id_expression           go to state 599
    unqualified_id          go to state 52
    qualified_id            go to state 53
    nested_name_specifier   go to state 204
    conversion_function_id  go to state 87
    operator_function_id    go to state 88
    template_id             go to state 90


state 433

   36 postfix_expression: postfix_expression '(' . expression_list_opt ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    $default  reduce using rule 459 (expression_list_opt)

    class_name                 go to state 104
    template_name              go to state 48
    identifier                 go to state 169
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 204
    postfix_expression         go to state 290
    expression_list            go to state 600
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 478
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90
    throw_expression           go to state 313
    expression_list_opt        go to state 601


state 434

   35 postfix_expression: postfix_expression '[' . expression ']'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name                 go to state 104
    template_name              go to state 48
    identifier                 go to state 169
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 204
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 425
    expression                 go to state 602
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90
    throw_expression           go to state 313


state 435

   37 postfix_expression: postfix_expression '.' . TEMPLATE COLONCOLON id_expression
   38                   | postfix_expression '.' . TEMPLATE id_expression
   39                   | postfix_expression '.' . COLONCOLON id_expression
   40                   | postfix_expression '.' . id_expression

    IDENTIFIER     shift, and go to state 1
    CLASS_NAME     shift, and go to state 97
    COLONCOLON     shift, and go to state 603
    OPERATOR       shift, and go to state 24
    TEMPLATE       shift, and go to state 604
    '~'            shift, and go to state 43
    TEMPLATE_NAME  shift, and go to state 44

    class_name              go to state 104
    template_name           go to state 48
    identifier              go to state 169
    id_expression           go to state 605
    unqualified_id          go to state 52
    qualified_id            go to state 53
    nested_name_specifier   go to state 204
    conversion_function_id  go to state 87
    operator_function_id    go to state 88
    template_id             go to state 90


state 436

   60 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 60 (unary_expression)


state 437

   87 pm_expression: pm_expression DOTSTAR . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name              go to state 104
    template_name           go to state 48
    identifier              go to state 169
    literal                 go to state 281
    integer_literal         go to state 282
    character_literal       go to state 283
    floating_literal        go to state 284
    string_literal          go to state 285
    boolean_literal         go to state 286
    primary_expression      go to state 287
    id_expression           go to state 288
    unqualified_id          go to state 52
    qualified_id            go to state 53
    nested_name_specifier   go to state 204
    postfix_expression      go to state 290
    unary_expression        go to state 291
    unary_operator          go to state 292
    new_expression          go to state 293
    delete_expression       go to state 294
    cast_expression         go to state 606
    conversion_function_id  go to state 87
    operator_function_id    go to state 88
    template_id             go to state 90


state 438

   88 pm_expression: pm_expression ARROWSTAR . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name              go to state 104
    template_name           go to state 48
    identifier              go to state 169
    literal                 go to state 281
    integer_literal         go to state 282
    character_literal       go to state 283
    floating_literal        go to state 284
    string_literal          go to state 285
    boolean_literal         go to state 286
    primary_expression      go to state 287
    id_expression           go to state 288
    unqualified_id          go to state 52
    qualified_id            go to state 53
    nested_name_specifier   go to state 204
    postfix_expression      go to state 290
    unary_expression        go to state 291
    unary_operator          go to state 292
    new_expression          go to state 293
    delete_expression       go to state 294
    cast_expression         go to state 607
    conversion_function_id  go to state 87
    operator_function_id    go to state 88
    template_id             go to state 90


state 439

   92 multiplicative_expression: multiplicative_expression '%' . pm_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name              go to state 104
    template_name           go to state 48
    identifier              go to state 169
    literal                 go to state 281
    integer_literal         go to state 282
    character_literal       go to state 283
    floating_literal        go to state 284
    string_literal          go to state 285
    boolean_literal         go to state 286
    primary_expression      go to state 287
    id_expression           go to state 288
    unqualified_id          go to state 52
    qualified_id            go to state 53
    nested_name_specifier   go to state 204
    postfix_expression      go to state 290
    unary_expression        go to state 291
    unary_operator          go to state 292
    new_expression          go to state 293
    delete_expression       go to state 294
    cast_expression         go to state 295
    pm_expression           go to state 608
    conversion_function_id  go to state 87
    operator_function_id    go to state 88
    template_id             go to state 90


state 440

   90 multiplicative_expression: multiplicative_expression '*' . pm_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name              go to state 104
    template_name           go to state 48
    identifier              go to state 169
    literal                 go to state 281
    integer_literal         go to state 282
    character_literal       go to state 283
    floating_literal        go to state 284
    string_literal          go to state 285
    boolean_literal         go to state 286
    primary_expression      go to state 287
    id_expression           go to state 288
    unqualified_id          go to state 52
    qualified_id            go to state 53
    nested_name_specifier   go to state 204
    postfix_expression      go to state 290
    unary_expression        go to state 291
    unary_operator          go to state 292
    new_expression          go to state 293
    delete_expression       go to state 294
    cast_expression         go to state 295
    pm_expression           go to state 609
    conversion_function_id  go to state 87
    operator_function_id    go to state 88
    template_id             go to state 90


state 441

   91 multiplicative_expression: multiplicative_expression '/' . pm_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name              go to state 104
    template_name           go to state 48
    identifier              go to state 169
    literal                 go to state 281
    integer_literal         go to state 282
    character_literal       go to state 283
    floating_literal        go to state 284
    string_literal          go to state 285
    boolean_literal         go to state 286
    primary_expression      go to state 287
    id_expression           go to state 288
    unqualified_id          go to state 52
    qualified_id            go to state 53
    nested_name_specifier   go to state 204
    postfix_expression      go to state 290
    unary_expression        go to state 291
    unary_operator          go to state 292
    new_expression          go to state 293
    delete_expression       go to state 294
    cast_expression         go to state 295
    pm_expression           go to state 610
    conversion_function_id  go to state 87
    operator_function_id    go to state 88
    template_id             go to state 90


state 442

   94 additive_expression: additive_expression '+' . multiplicative_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name                 go to state 104
    template_name              go to state 48
    identifier                 go to state 169
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 204
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 611
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90


state 443

   95 additive_expression: additive_expression '-' . multiplicative_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name                 go to state 104
    template_name              go to state 48
    identifier                 go to state 169
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 204
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 612
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90


state 444

   97 shift_expression: shift_expression SL . additive_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name                 go to state 104
    template_name              go to state 48
    identifier                 go to state 169
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 204
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 613
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90


state 445

   98 shift_expression: shift_expression SR . additive_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name                 go to state 104
    template_name              go to state 48
    identifier                 go to state 169
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 204
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 614
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90


state 446

  102 relational_expression: relational_expression LTEQ . shift_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name                 go to state 104
    template_name              go to state 48
    identifier                 go to state 169
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 204
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 615
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90


state 447

  103 relational_expression: relational_expression GTEQ . shift_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name                 go to state 104
    template_name              go to state 48
    identifier                 go to state 169
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 204
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 616
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90


state 448

  100 relational_expression: relational_expression '<' . shift_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name                 go to state 104
    template_name              go to state 48
    identifier                 go to state 169
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 204
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 617
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90


state 449

  101 relational_expression: relational_expression '>' . shift_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name                 go to state 104
    template_name              go to state 48
    identifier                 go to state 169
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 204
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 618
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90


state 450

  105 equality_expression: equality_expression EQ . relational_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name                 go to state 104
    template_name              go to state 48
    identifier                 go to state 169
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 204
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 619
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90


state 451

  106 equality_expression: equality_expression NOTEQ . relational_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name                 go to state 104
    template_name              go to state 48
    identifier                 go to state 169
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 204
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 620
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90


state 452

  108 and_expression: and_expression '&' . equality_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name                 go to state 104
    template_name              go to state 48
    identifier                 go to state 169
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 204
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 621
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90


state 453

  110 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name                 go to state 104
    template_name              go to state 48
    identifier                 go to state 169
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 204
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 622
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90


state 454

  112 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name                 go to state 104
    template_name              go to state 48
    identifier                 go to state 169
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 204
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 623
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90


state 455

  114 logical_and_expression: logical_and_expression ANDAND . inclusive_or_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name                 go to state 104
    template_name              go to state 48
    identifier                 go to state 169
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 204
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 624
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90


state 456

  126 assignment_operator: ADDEQ .

    $default  reduce using rule 126 (assignment_operator)


state 457

  127 assignment_operator: SUBEQ .

    $default  reduce using rule 127 (assignment_operator)


state 458

  123 assignment_operator: MULEQ .

    $default  reduce using rule 123 (assignment_operator)


state 459

  124 assignment_operator: DIVEQ .

    $default  reduce using rule 124 (assignment_operator)


state 460

  125 assignment_operator: MODEQ .

    $default  reduce using rule 125 (assignment_operator)


state 461

  131 assignment_operator: XOREQ .

    $default  reduce using rule 131 (assignment_operator)


state 462

  130 assignment_operator: ANDEQ .

    $default  reduce using rule 130 (assignment_operator)


state 463

  132 assignment_operator: OREQ .

    $default  reduce using rule 132 (assignment_operator)


state 464

  128 assignment_operator: SREQ .

    $default  reduce using rule 128 (assignment_operator)


state 465

  129 assignment_operator: SLEQ .

    $default  reduce using rule 129 (assignment_operator)


state 466

  116 logical_or_expression: logical_or_expression OROR . logical_and_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name                 go to state 104
    template_name              go to state 48
    identifier                 go to state 169
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 204
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 625
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90


state 467

  122 assignment_operator: '=' .

    $default  reduce using rule 122 (assignment_operator)


state 468

  118 conditional_expression: logical_or_expression '?' . expression ':' assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name                 go to state 104
    template_name              go to state 48
    identifier                 go to state 169
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 204
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 425
    expression                 go to state 626
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90
    throw_expression           go to state 313


state 469

  120 assignment_expression: logical_or_expression assignment_operator . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name                 go to state 104
    template_name              go to state 48
    identifier                 go to state 169
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 204
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 627
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90
    throw_expression           go to state 313


state 470

  301 direct_abstract_declarator: '(' . abstract_declarator ')'

    CLASS_NAME     shift, and go to state 97
    COLONCOLON     shift, and go to state 233
    '('            shift, and go to state 470
    '&'            shift, and go to state 41
    '*'            shift, and go to state 42
    TEMPLATE_NAME  shift, and go to state 44

    '('       [reduce using rule 485 (direct_abstract_declarator_opt)]
    $default  reduce using rule 485 (direct_abstract_declarator_opt)

    class_name                      go to state 104
    template_name                   go to state 48
    nested_name_specifier           go to state 234
    ptr_operator                    go to state 471
    abstract_declarator             go to state 553
    direct_abstract_declarator      go to state 370
    template_id                     go to state 90
    direct_abstract_declarator_opt  go to state 372


state 471

  294 abstract_declarator: ptr_operator . abstract_declarator_opt

    CLASS_NAME     shift, and go to state 97
    COLONCOLON     shift, and go to state 233
    '('            shift, and go to state 470
    '&'            shift, and go to state 41
    '*'            shift, and go to state 42
    TEMPLATE_NAME  shift, and go to state 44

    '('       [reduce using rule 485 (direct_abstract_declarator_opt)]
    '['       reduce using rule 485 (direct_abstract_declarator_opt)
    $default  reduce using rule 481 (abstract_declarator_opt)

    class_name                      go to state 104
    template_name                   go to state 48
    nested_name_specifier           go to state 234
    ptr_operator                    go to state 471
    abstract_declarator             go to state 369
    direct_abstract_declarator      go to state 370
    template_id                     go to state 90
    abstract_declarator_opt         go to state 555
    direct_abstract_declarator_opt  go to state 372


state 472

  292 type_id: type_specifier_seq abstract_declarator_opt .

    $default  reduce using rule 292 (type_id)


state 473

  437 template_argument_list: template_argument_list ',' . template_argument

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    TYPEDEF_NAME      shift, and go to state 2
    CLASS_NAME        shift, and go to state 97
    ENUM_NAME         shift, and go to state 4
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 8
    CHAR              shift, and go to state 9
    CLASS             shift, and go to state 10
    CONST             shift, and go to state 11
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DOUBLE            shift, and go to state 12
    DYNAMIC_CAST      shift, and go to state 263
    ENUM              shift, and go to state 13
    FALSE             shift, and go to state 264
    FLOAT             shift, and go to state 17
    INT               shift, and go to state 20
    LONG              shift, and go to state 21
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SHORT             shift, and go to state 26
    SIGNED            shift, and go to state 27
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    STRUCT            shift, and go to state 29
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    TYPENAME          shift, and go to state 32
    UNION             shift, and go to state 33
    UNSIGNED          shift, and go to state 34
    VOID              shift, and go to state 37
    VOLATILE          shift, and go to state 38
    WCHAR_T           shift, and go to state 39
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    typedef_name               go to state 45
    class_name                 go to state 46
    enum_name                  go to state 47
    template_name              go to state 280
    identifier                 go to state 49
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 289
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 308
    type_specifier             go to state 156
    simple_type_specifier      go to state 64
    type_name                  go to state 65
    elaborated_type_specifier  go to state 66
    enum_specifier             go to state 67
    cv_qualifier               go to state 81
    type_id                    go to state 309
    type_specifier_seq         go to state 310
    class_specifier            go to state 84
    class_head                 go to state 85
    class_key                  go to state 86
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90
    template_argument          go to state 628
    throw_expression           go to state 313


state 474

  435 template_id: template_name '<' template_argument_list '>' .

    $default  reduce using rule 435 (template_id)


state 475

  263 init_declarator_list: init_declarator_list ',' init_declarator .

    $default  reduce using rule 263 (init_declarator_list)


state 476

  264 init_declarator: declarator . initializer_opt

    '('  shift, and go to state 317
    '='  shift, and go to state 318

    $default  reduce using rule 477 (initializer_opt)

    initializer      go to state 319
    initializer_opt  go to state 321


state 477

   54 expression_list: expression_list . ',' assignment_expression
  319 initializer: '(' expression_list . ')'

    ')'  shift, and go to state 629
    ','  shift, and go to state 630


state 478

   53 expression_list: assignment_expression .

    $default  reduce using rule 53 (expression_list)


state 479

  321 initializer_clause: '{' . initializer_list COMMA_opt '}'
  322                   | '{' . '}'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '{'               shift, and go to state 479
    '}'               shift, and go to state 631
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name                 go to state 104
    template_name              go to state 48
    identifier                 go to state 169
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 204
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 480
    initializer_clause         go to state 632
    initializer_list           go to state 633
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90
    throw_expression           go to state 313


state 480

  320 initializer_clause: assignment_expression .

    $default  reduce using rule 320 (initializer_clause)


state 481

  318 initializer: '=' initializer_clause .

    $default  reduce using rule 318 (initializer)


state 482

  314 function_definition: decl_specifier_seq declarator ctor_initializer_opt function_body .

    $default  reduce using rule 314 (function_definition)


state 483

  444 function_try_block: TRY ctor_initializer_opt function_body . handler_seq

    CATCH  shift, and go to state 634

    handler_seq  go to state 635
    handler      go to state 636


state 484

   32 nested_name_specifier: class_name . COLONCOLON nested_name_specifier
   33                      | class_name . COLONCOLON
  377 mem_initializer_id: COLONCOLON class_name .

    COLONCOLON  shift, and go to state 175

    $default  reduce using rule 377 (mem_initializer_id)


state 485

  376 mem_initializer_id: COLONCOLON nested_name_specifier . class_name

    CLASS_NAME     shift, and go to state 97
    TEMPLATE_NAME  shift, and go to state 44

    class_name     go to state 637
    template_name  go to state 48
    template_id    go to state 90


state 486

  378 mem_initializer_id: nested_name_specifier class_name .

    $default  reduce using rule 378 (mem_initializer_id)


state 487

  374 mem_initializer_list: mem_initializer ',' . mem_initializer_list

    IDENTIFIER     shift, and go to state 1
    CLASS_NAME     shift, and go to state 97
    COLONCOLON     shift, and go to state 324
    TEMPLATE_NAME  shift, and go to state 44

    class_name             go to state 325
    template_name          go to state 48
    identifier             go to state 326
    nested_name_specifier  go to state 327
    mem_initializer_list   go to state 638
    mem_initializer        go to state 329
    mem_initializer_id     go to state 330
    template_id            go to state 90


state 488

  375 mem_initializer: mem_initializer_id '(' . expression_list_opt ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    $default  reduce using rule 459 (expression_list_opt)

    class_name                 go to state 104
    template_name              go to state 48
    identifier                 go to state 169
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 204
    postfix_expression         go to state 290
    expression_list            go to state 600
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 478
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90
    throw_expression           go to state 313
    expression_list_opt        go to state 639


state 489

  161 jump_statement: BREAK . ';'

    ';'  shift, and go to state 640


state 490

  145 labeled_statement: CASE . constant_expression ':' statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name                 go to state 104
    template_name              go to state 48
    identifier                 go to state 169
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 204
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 336
    conditional_expression     go to state 337
    constant_expression        go to state 641
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90


state 491

  162 jump_statement: CONTINUE . ';'

    ';'  shift, and go to state 642


state 492

  146 labeled_statement: DEFAULT . ':' statement

    ':'  shift, and go to state 643


state 493

  157 iteration_statement: DO . statement WHILE '(' expression ')' ';'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    TYPEDEF_NAME      shift, and go to state 2
    CLASS_NAME        shift, and go to state 97
    ENUM_NAME         shift, and go to state 4
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    ASM               shift, and go to state 6
    AUTO              shift, and go to state 7
    BOOL              shift, and go to state 8
    BREAK             shift, and go to state 489
    CASE              shift, and go to state 490
    CHAR              shift, and go to state 9
    CLASS             shift, and go to state 10
    CONST             shift, and go to state 11
    CONST_CAST        shift, and go to state 261
    CONTINUE          shift, and go to state 491
    DEFAULT           shift, and go to state 492
    DELETE            shift, and go to state 262
    DO                shift, and go to state 493
    DOUBLE            shift, and go to state 12
    DYNAMIC_CAST      shift, and go to state 263
    ENUM              shift, and go to state 13
    EXPLICIT          shift, and go to state 14
    EXTERN            shift, and go to state 183
    FALSE             shift, and go to state 264
    FLOAT             shift, and go to state 17
    FOR               shift, and go to state 494
    FRIEND            shift, and go to state 18
    GOTO              shift, and go to state 495
    IF                shift, and go to state 496
    INLINE            shift, and go to state 19
    INT               shift, and go to state 20
    LONG              shift, and go to state 21
    MUTABLE           shift, and go to state 22
    NAMESPACE         shift, and go to state 497
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REGISTER          shift, and go to state 25
    REINTERPRET_CAST  shift, and go to state 266
    RETURN            shift, and go to state 498
    SHORT             shift, and go to state 26
    SIGNED            shift, and go to state 27
    SIZEOF            shift, and go to state 267
    STATIC            shift, and go to state 28
    STATIC_CAST       shift, and go to state 268
    STRUCT            shift, and go to state 29
    SWITCH            shift, and go to state 499
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TRY               shift, and go to state 500
    TYPEDEF           shift, and go to state 31
    TYPEID            shift, and go to state 272
    TYPENAME          shift, and go to state 32
    UNION             shift, and go to state 33
    UNSIGNED          shift, and go to state 34
    USING             shift, and go to state 35
    VIRTUAL           shift, and go to state 36
    VOID              shift, and go to state 37
    VOLATILE          shift, and go to state 38
    WCHAR_T           shift, and go to state 39
    WHILE             shift, and go to state 501
    '('               shift, and go to state 273
    '{'               shift, and go to state 331
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    $default  reduce using rule 469 (expression_opt)

    typedef_name                go to state 45
    class_name                  go to state 46
    enum_name                   go to state 47
    template_name               go to state 48
    identifier                  go to state 502
    literal                     go to state 281
    integer_literal             go to state 282
    character_literal           go to state 283
    floating_literal            go to state 284
    string_literal              go to state 285
    boolean_literal             go to state 286
    primary_expression          go to state 287
    id_expression               go to state 288
    unqualified_id              go to state 52
    qualified_id                go to state 53
    nested_name_specifier       go to state 289
    postfix_expression          go to state 290
    unary_expression            go to state 291
    unary_operator              go to state 292
    new_expression              go to state 293
    delete_expression           go to state 294
    cast_expression             go to state 295
    pm_expression               go to state 296
    multiplicative_expression   go to state 297
    additive_expression         go to state 298
    shift_expression            go to state 299
    relational_expression       go to state 300
    equality_expression         go to state 301
    and_expression              go to state 302
    exclusive_or_expression     go to state 303
    inclusive_or_expression     go to state 304
    logical_and_expression      go to state 305
    logical_or_expression       go to state 306
    conditional_expression      go to state 307
    assignment_expression       go to state 425
    expression                  go to state 503
    statement                   go to state 644
    labeled_statement           go to state 505
    expression_statement        go to state 506
    compound_statement          go to state 507
    selection_statement         go to state 509
    iteration_statement         go to state 510
    jump_statement              go to state 511
    declaration_statement       go to state 512
    block_declaration           go to state 513
    simple_declaration          go to state 58
    decl_specifier              go to state 59
    decl_specifier_seq          go to state 514
    storage_class_specifier     go to state 61
    function_specifier          go to state 62
    type_specifier              go to state 63
    simple_type_specifier       go to state 64
    type_name                   go to state 65
    elaborated_type_specifier   go to state 66
    enum_specifier              go to state 67
    namespace_alias_definition  go to state 73
    using_declaration           go to state 74
    using_directive             go to state 75
    asm_definition              go to state 76
    cv_qualifier                go to state 81
    class_specifier             go to state 84
    class_head                  go to state 85
    class_key                   go to state 86
    conversion_function_id      go to state 87
    operator_function_id        go to state 88
    template_id                 go to state 90
    try_block                   go to state 515
    throw_expression            go to state 313
    expression_opt              go to state 516


state 494

  158 iteration_statement: FOR . '(' for_init_statement condition_opt ';' expression_opt ')' statement

    '('  shift, and go to state 645


state 495

  164 jump_statement: GOTO . identifier ';'

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 646


state 496

  151 selection_statement: IF . '(' condition ')' statement
  152                    | IF . '(' condition ')' statement ELSE statement

    '('  shift, and go to state 647


state 497

  245 namespace_alias_definition: NAMESPACE . identifier '=' qualified_namespace_specifier ';'

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 648


state 498

  163 jump_statement: RETURN . expression_opt ';'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    $default  reduce using rule 469 (expression_opt)

    class_name                 go to state 104
    template_name              go to state 48
    identifier                 go to state 169
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 204
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 425
    expression                 go to state 503
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90
    throw_expression           go to state 313
    expression_opt             go to state 649


state 499

  153 selection_statement: SWITCH . '(' condition ')' statement

    '('  shift, and go to state 650


state 500

  443 try_block: TRY . compound_statement handler_seq

    '{'  shift, and go to state 331

    compound_statement  go to state 651


state 501

  156 iteration_statement: WHILE . '(' condition ')' statement

    '('  shift, and go to state 652


state 502

   27 unqualified_id: identifier .
  144 labeled_statement: identifier . ':' statement
  226 enum_name: identifier .

    ':'  shift, and go to state 653

    IDENTIFIER     reduce using rule 226 (enum_name)
    TYPEDEF_NAME   reduce using rule 226 (enum_name)
    CLASS_NAME     reduce using rule 226 (enum_name)
    ENUM_NAME      reduce using rule 226 (enum_name)
    COLONCOLON     reduce using rule 226 (enum_name)
    AUTO           reduce using rule 226 (enum_name)
    BOOL           reduce using rule 226 (enum_name)
    CHAR           reduce using rule 226 (enum_name)
    CLASS          reduce using rule 226 (enum_name)
    CONST          reduce using rule 226 (enum_name)
    DOUBLE         reduce using rule 226 (enum_name)
    ENUM           reduce using rule 226 (enum_name)
    EXPLICIT       reduce using rule 226 (enum_name)
    EXTERN         reduce using rule 226 (enum_name)
    FLOAT          reduce using rule 226 (enum_name)
    FRIEND         reduce using rule 226 (enum_name)
    INLINE         reduce using rule 226 (enum_name)
    INT            reduce using rule 226 (enum_name)
    LONG           reduce using rule 226 (enum_name)
    MUTABLE        reduce using rule 226 (enum_name)
    OPERATOR       reduce using rule 226 (enum_name)
    REGISTER       reduce using rule 226 (enum_name)
    SHORT          reduce using rule 226 (enum_name)
    SIGNED         reduce using rule 226 (enum_name)
    STATIC         reduce using rule 226 (enum_name)
    STRUCT         reduce using rule 226 (enum_name)
    TYPEDEF        reduce using rule 226 (enum_name)
    TYPENAME       reduce using rule 226 (enum_name)
    UNION          reduce using rule 226 (enum_name)
    UNSIGNED       reduce using rule 226 (enum_name)
    VIRTUAL        reduce using rule 226 (enum_name)
    VOID           reduce using rule 226 (enum_name)
    VOLATILE       reduce using rule 226 (enum_name)
    WCHAR_T        reduce using rule 226 (enum_name)
    ';'            reduce using rule 27 (unqualified_id)
    ';'            [reduce using rule 226 (enum_name)]
    '('            reduce using rule 27 (unqualified_id)
    '('            [reduce using rule 226 (enum_name)]
    '&'            reduce using rule 27 (unqualified_id)
    '&'            [reduce using rule 226 (enum_name)]
    '*'            reduce using rule 27 (unqualified_id)
    '*'            [reduce using rule 226 (enum_name)]
    '~'            reduce using rule 226 (enum_name)
    TEMPLATE_NAME  reduce using rule 226 (enum_name)
    $default       reduce using rule 27 (unqualified_id)


state 503

  134 expression: expression . ',' assignment_expression
  470 expression_opt: expression .

    ','  shift, and go to state 595

    $default  reduce using rule 470 (expression_opt)


state 504

  149 statement_seq: statement .

    $default  reduce using rule 149 (statement_seq)


state 505

  136 statement: labeled_statement .

    $default  reduce using rule 136 (statement)


state 506

  137 statement: expression_statement .

    $default  reduce using rule 137 (statement)


state 507

  138 statement: compound_statement .

    $default  reduce using rule 138 (statement)


state 508

  150 statement_seq: statement_seq . statement
  472 statement_seq_opt: statement_seq .

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    TYPEDEF_NAME      shift, and go to state 2
    CLASS_NAME        shift, and go to state 97
    ENUM_NAME         shift, and go to state 4
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    ASM               shift, and go to state 6
    AUTO              shift, and go to state 7
    BOOL              shift, and go to state 8
    BREAK             shift, and go to state 489
    CASE              shift, and go to state 490
    CHAR              shift, and go to state 9
    CLASS             shift, and go to state 10
    CONST             shift, and go to state 11
    CONST_CAST        shift, and go to state 261
    CONTINUE          shift, and go to state 491
    DEFAULT           shift, and go to state 492
    DELETE            shift, and go to state 262
    DO                shift, and go to state 493
    DOUBLE            shift, and go to state 12
    DYNAMIC_CAST      shift, and go to state 263
    ENUM              shift, and go to state 13
    EXPLICIT          shift, and go to state 14
    EXTERN            shift, and go to state 183
    FALSE             shift, and go to state 264
    FLOAT             shift, and go to state 17
    FOR               shift, and go to state 494
    FRIEND            shift, and go to state 18
    GOTO              shift, and go to state 495
    IF                shift, and go to state 496
    INLINE            shift, and go to state 19
    INT               shift, and go to state 20
    LONG              shift, and go to state 21
    MUTABLE           shift, and go to state 22
    NAMESPACE         shift, and go to state 497
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REGISTER          shift, and go to state 25
    REINTERPRET_CAST  shift, and go to state 266
    RETURN            shift, and go to state 498
    SHORT             shift, and go to state 26
    SIGNED            shift, and go to state 27
    SIZEOF            shift, and go to state 267
    STATIC            shift, and go to state 28
    STATIC_CAST       shift, and go to state 268
    STRUCT            shift, and go to state 29
    SWITCH            shift, and go to state 499
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TRY               shift, and go to state 500
    TYPEDEF           shift, and go to state 31
    TYPEID            shift, and go to state 272
    TYPENAME          shift, and go to state 32
    UNION             shift, and go to state 33
    UNSIGNED          shift, and go to state 34
    USING             shift, and go to state 35
    VIRTUAL           shift, and go to state 36
    VOID              shift, and go to state 37
    VOLATILE          shift, and go to state 38
    WCHAR_T           shift, and go to state 39
    WHILE             shift, and go to state 501
    '('               shift, and go to state 273
    '{'               shift, and go to state 331
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    '}'       reduce using rule 472 (statement_seq_opt)
    $default  reduce using rule 469 (expression_opt)

    typedef_name                go to state 45
    class_name                  go to state 46
    enum_name                   go to state 47
    template_name               go to state 48
    identifier                  go to state 502
    literal                     go to state 281
    integer_literal             go to state 282
    character_literal           go to state 283
    floating_literal            go to state 284
    string_literal              go to state 285
    boolean_literal             go to state 286
    primary_expression          go to state 287
    id_expression               go to state 288
    unqualified_id              go to state 52
    qualified_id                go to state 53
    nested_name_specifier       go to state 289
    postfix_expression          go to state 290
    unary_expression            go to state 291
    unary_operator              go to state 292
    new_expression              go to state 293
    delete_expression           go to state 294
    cast_expression             go to state 295
    pm_expression               go to state 296
    multiplicative_expression   go to state 297
    additive_expression         go to state 298
    shift_expression            go to state 299
    relational_expression       go to state 300
    equality_expression         go to state 301
    and_expression              go to state 302
    exclusive_or_expression     go to state 303
    inclusive_or_expression     go to state 304
    logical_and_expression      go to state 305
    logical_or_expression       go to state 306
    conditional_expression      go to state 307
    assignment_expression       go to state 425
    expression                  go to state 503
    statement                   go to state 654
    labeled_statement           go to state 505
    expression_statement        go to state 506
    compound_statement          go to state 507
    selection_statement         go to state 509
    iteration_statement         go to state 510
    jump_statement              go to state 511
    declaration_statement       go to state 512
    block_declaration           go to state 513
    simple_declaration          go to state 58
    decl_specifier              go to state 59
    decl_specifier_seq          go to state 514
    storage_class_specifier     go to state 61
    function_specifier          go to state 62
    type_specifier              go to state 63
    simple_type_specifier       go to state 64
    type_name                   go to state 65
    elaborated_type_specifier   go to state 66
    enum_specifier              go to state 67
    namespace_alias_definition  go to state 73
    using_declaration           go to state 74
    using_directive             go to state 75
    asm_definition              go to state 76
    cv_qualifier                go to state 81
    class_specifier             go to state 84
    class_head                  go to state 85
    class_key                   go to state 86
    conversion_function_id      go to state 87
    operator_function_id        go to state 88
    template_id                 go to state 90
    try_block                   go to state 515
    throw_expression            go to state 313
    expression_opt              go to state 516


state 509

  139 statement: selection_statement .

    $default  reduce using rule 139 (statement)


state 510

  140 statement: iteration_statement .

    $default  reduce using rule 140 (statement)


state 511

  141 statement: jump_statement .

    $default  reduce using rule 141 (statement)


state 512

  142 statement: declaration_statement .

    $default  reduce using rule 142 (statement)


state 513

  165 declaration_statement: block_declaration .

    $default  reduce using rule 165 (declaration_statement)


state 514

  180 simple_declaration: decl_specifier_seq . init_declarator_list ';'
  181                   | decl_specifier_seq . ';'
  188 decl_specifier_seq: decl_specifier_seq . decl_specifier

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 3
    ENUM_NAME      shift, and go to state 4
    COLONCOLON     shift, and go to state 5
    AUTO           shift, and go to state 7
    BOOL           shift, and go to state 8
    CHAR           shift, and go to state 9
    CLASS          shift, and go to state 10
    CONST          shift, and go to state 11
    DOUBLE         shift, and go to state 12
    ENUM           shift, and go to state 13
    EXPLICIT       shift, and go to state 14
    EXTERN         shift, and go to state 183
    FLOAT          shift, and go to state 17
    FRIEND         shift, and go to state 18
    INLINE         shift, and go to state 19
    INT            shift, and go to state 20
    LONG           shift, and go to state 21
    MUTABLE        shift, and go to state 22
    OPERATOR       shift, and go to state 24
    REGISTER       shift, and go to state 25
    SHORT          shift, and go to state 26
    SIGNED         shift, and go to state 27
    STATIC         shift, and go to state 28
    STRUCT         shift, and go to state 29
    TYPEDEF        shift, and go to state 31
    TYPENAME       shift, and go to state 32
    UNION          shift, and go to state 33
    UNSIGNED       shift, and go to state 34
    VIRTUAL        shift, and go to state 36
    VOID           shift, and go to state 37
    VOLATILE       shift, and go to state 38
    WCHAR_T        shift, and go to state 39
    ';'            shift, and go to state 184
    '('            shift, and go to state 40
    '&'            shift, and go to state 41
    '*'            shift, and go to state 42
    '~'            shift, and go to state 43
    TEMPLATE_NAME  shift, and go to state 44

    typedef_name               go to state 45
    class_name                 go to state 46
    enum_name                  go to state 47
    template_name              go to state 48
    identifier                 go to state 49
    id_expression              go to state 51
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 54
    decl_specifier             go to state 185
    storage_class_specifier    go to state 61
    function_specifier         go to state 62
    type_specifier             go to state 63
    simple_type_specifier      go to state 64
    type_name                  go to state 65
    elaborated_type_specifier  go to state 66
    enum_specifier             go to state 67
    init_declarator_list       go to state 186
    init_declarator            go to state 187
    declarator                 go to state 476
    direct_declarator          go to state 79
    ptr_operator               go to state 80
    cv_qualifier               go to state 81
    declarator_id              go to state 82
    class_specifier            go to state 84
    class_head                 go to state 85
    class_key                  go to state 86
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90


state 515

  143 statement: try_block .

    $default  reduce using rule 143 (statement)


state 516

  147 expression_statement: expression_opt . ';'

    ';'  shift, and go to state 655


state 517

  148 compound_statement: '{' statement_seq_opt . '}'

    '}'  shift, and go to state 656


state 518

  268 direct_declarator: direct_declarator '(' parameter_declaration_clause ')' . cv_qualifier_seq exception_specification
  269                  | direct_declarator '(' parameter_declaration_clause ')' . cv_qualifier_seq
  270                  | direct_declarator '(' parameter_declaration_clause ')' . exception_specification
  271                  | direct_declarator '(' parameter_declaration_clause ')' .

    CONST     shift, and go to state 11
    THROW     shift, and go to state 657
    VOLATILE  shift, and go to state 38

    $default  reduce using rule 271 (direct_declarator)

    cv_qualifier_seq         go to state 658
    cv_qualifier             go to state 173
    exception_specification  go to state 659


state 519

  275 direct_declarator: direct_declarator '[' constant_expression_opt ']' .

    $default  reduce using rule 275 (direct_declarator)


state 520

  348 member_declarator: identifier ':' . constant_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name                 go to state 104
    template_name              go to state 48
    identifier                 go to state 169
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 204
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 336
    conditional_expression     go to state 337
    constant_expression        go to state 660
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90


state 521

  340 member_declaration: qualified_id ';' .

    $default  reduce using rule 340 (member_declaration)


state 522

  336 member_declaration: decl_specifier_seq ';' .

    $default  reduce using rule 336 (member_declaration)


state 523

  314 function_definition: decl_specifier_seq declarator . ctor_initializer_opt function_body
  316                    | decl_specifier_seq declarator . function_try_block
  345 member_declarator: declarator .
  346                  | declarator . pure_specifier
  347                  | declarator . constant_initializer

    TRY  shift, and go to state 189
    '='  shift, and go to state 525
    ':'  shift, and go to state 190

    '{'       reduce using rule 487 (ctor_initializer_opt)
    $default  reduce using rule 345 (member_declarator)

    pure_specifier        go to state 526
    constant_initializer  go to state 527
    ctor_initializer      go to state 191
    function_try_block    go to state 320
    ctor_initializer_opt  go to state 322


state 524

  335 member_declaration: decl_specifier_seq member_declarator_list . ';'
  343 member_declarator_list: member_declarator_list . ',' member_declarator

    ';'  shift, and go to state 661
    ','  shift, and go to state 532


state 525

  349 pure_specifier: '=' . '0'
  350 constant_initializer: '=' . constant_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    '0'               shift, and go to state 662
    TEMPLATE_NAME     shift, and go to state 44

    class_name                 go to state 104
    template_name              go to state 48
    identifier                 go to state 169
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 204
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 336
    conditional_expression     go to state 337
    constant_expression        go to state 663
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90


state 526

  346 member_declarator: declarator pure_specifier .

    $default  reduce using rule 346 (member_declarator)


state 527

  347 member_declarator: declarator constant_initializer .

    $default  reduce using rule 347 (member_declarator)


state 528

  494 SEMICOLON_opt: ';' .

    $default  reduce using rule 494 (SEMICOLON_opt)


state 529

  339 member_declaration: function_definition SEMICOLON_opt .

    $default  reduce using rule 339 (member_declaration)


state 530

  333 member_specification: member_declaration member_specification_opt .

    $default  reduce using rule 333 (member_specification)


state 531

  337 member_declaration: member_declarator_list ';' .

    $default  reduce using rule 337 (member_declaration)


state 532

  343 member_declarator_list: member_declarator_list ',' . member_declarator

    IDENTIFIER     shift, and go to state 1
    CLASS_NAME     shift, and go to state 3
    COLONCOLON     shift, and go to state 168
    OPERATOR       shift, and go to state 24
    '('            shift, and go to state 40
    '&'            shift, and go to state 41
    '*'            shift, and go to state 42
    '~'            shift, and go to state 43
    TEMPLATE_NAME  shift, and go to state 44

    $default  reduce using rule 344 (member_declarator)

    class_name              go to state 104
    template_name           go to state 48
    identifier              go to state 664
    id_expression           go to state 51
    unqualified_id          go to state 52
    qualified_id            go to state 53
    nested_name_specifier   go to state 170
    declarator              go to state 665
    direct_declarator       go to state 79
    ptr_operator            go to state 80
    declarator_id           go to state 82
    member_declarator       go to state 666
    conversion_function_id  go to state 87
    operator_function_id    go to state 88
    template_id             go to state 90


state 533

  334 member_specification: access_specifier ':' . member_specification_opt

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 3
    ENUM_NAME      shift, and go to state 4
    COLONCOLON     shift, and go to state 5
    AUTO           shift, and go to state 7
    BOOL           shift, and go to state 8
    CHAR           shift, and go to state 9
    CLASS          shift, and go to state 10
    CONST          shift, and go to state 11
    DOUBLE         shift, and go to state 12
    ENUM           shift, and go to state 13
    EXPLICIT       shift, and go to state 14
    EXTERN         shift, and go to state 183
    FLOAT          shift, and go to state 17
    FRIEND         shift, and go to state 18
    INLINE         shift, and go to state 19
    INT            shift, and go to state 20
    LONG           shift, and go to state 21
    MUTABLE        shift, and go to state 22
    OPERATOR       shift, and go to state 24
    PRIVATE        shift, and go to state 340
    PROTECTED      shift, and go to state 341
    PUBLIC         shift, and go to state 342
    REGISTER       shift, and go to state 25
    SHORT          shift, and go to state 26
    SIGNED         shift, and go to state 27
    STATIC         shift, and go to state 28
    STRUCT         shift, and go to state 29
    TYPEDEF        shift, and go to state 31
    TYPENAME       shift, and go to state 32
    UNION          shift, and go to state 33
    UNSIGNED       shift, and go to state 34
    USING          shift, and go to state 343
    VIRTUAL        shift, and go to state 36
    VOID           shift, and go to state 37
    VOLATILE       shift, and go to state 38
    WCHAR_T        shift, and go to state 39
    ';'            shift, and go to state 344
    '('            shift, and go to state 40
    '&'            shift, and go to state 41
    '*'            shift, and go to state 42
    '~'            shift, and go to state 43
    TEMPLATE_NAME  shift, and go to state 44

    ';'       [reduce using rule 344 (member_declarator)]
    '}'       reduce using rule 491 (member_specification_opt)
    $default  reduce using rule 344 (member_declarator)

    typedef_name               go to state 45
    class_name                 go to state 46
    enum_name                  go to state 47
    template_name              go to state 48
    identifier                 go to state 345
    id_expression              go to state 51
    unqualified_id             go to state 52
    qualified_id               go to state 346
    nested_name_specifier      go to state 54
    decl_specifier             go to state 59
    decl_specifier_seq         go to state 347
    storage_class_specifier    go to state 61
    function_specifier         go to state 62
    type_specifier             go to state 63
    simple_type_specifier      go to state 64
    type_name                  go to state 65
    elaborated_type_specifier  go to state 66
    enum_specifier             go to state 67
    using_declaration          go to state 348
    declarator                 go to state 349
    direct_declarator          go to state 79
    ptr_operator               go to state 80
    cv_qualifier               go to state 81
    declarator_id              go to state 82
    function_definition        go to state 350
    class_specifier            go to state 84
    class_head                 go to state 85
    class_key                  go to state 86
    member_specification       go to state 351
    member_declaration         go to state 352
    member_declarator_list     go to state 353
    member_declarator          go to state 354
    access_specifier           go to state 355
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90
    member_specification_opt   go to state 667


state 534

  325 class_specifier: class_head '{' member_specification_opt '}' .

    $default  reduce using rule 325 (class_specifier)


state 535

  219 elaborated_type_specifier: class_key COLONCOLON nested_name_specifier identifier .

    $default  reduce using rule 219 (elaborated_type_specifier)


state 536

  354 base_specifier: COLONCOLON . nested_name_specifier class_name
  355               | COLONCOLON . class_name

    CLASS_NAME     shift, and go to state 97
    TEMPLATE_NAME  shift, and go to state 44

    class_name             go to state 668
    template_name          go to state 48
    nested_name_specifier  go to state 669
    template_id            go to state 90


state 537

  358 base_specifier: VIRTUAL . access_specifier COLONCOLON nested_name_specifier_opt class_name
  359               | VIRTUAL . access_specifier nested_name_specifier_opt class_name
  360               | VIRTUAL . COLONCOLON nested_name_specifier_opt class_name
  361               | VIRTUAL . nested_name_specifier_opt class_name

    CLASS_NAME     shift, and go to state 97
    COLONCOLON     shift, and go to state 670
    PRIVATE        shift, and go to state 340
    PROTECTED      shift, and go to state 341
    PUBLIC         shift, and go to state 342
    TEMPLATE_NAME  shift, and go to state 44

    CLASS_NAME     [reduce using rule 457 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 457 (nested_name_specifier_opt)]

    class_name                 go to state 104
    template_name              go to state 48
    nested_name_specifier      go to state 226
    access_specifier           go to state 671
    template_id                go to state 90
    nested_name_specifier_opt  go to state 672


state 538

   32 nested_name_specifier: class_name . COLONCOLON nested_name_specifier
   33                      | class_name . COLONCOLON
  357 base_specifier: class_name .

    COLONCOLON  shift, and go to state 175

    $default  reduce using rule 357 (base_specifier)


state 539

  356 base_specifier: nested_name_specifier . class_name

    CLASS_NAME     shift, and go to state 97
    TEMPLATE_NAME  shift, and go to state 44

    class_name     go to state 673
    template_name  go to state 48
    template_id    go to state 90


state 540

  351 base_clause: ':' base_specifier_list .
  353 base_specifier_list: base_specifier_list . ',' base_specifier

    ','  shift, and go to state 674

    $default  reduce using rule 351 (base_clause)


state 541

  352 base_specifier_list: base_specifier .

    $default  reduce using rule 352 (base_specifier_list)


state 542

  362 base_specifier: access_specifier . VIRTUAL COLONCOLON nested_name_specifier_opt class_name
  363               | access_specifier . VIRTUAL nested_name_specifier_opt class_name
  364               | access_specifier . COLONCOLON nested_name_specifier_opt class_name
  365               | access_specifier . nested_name_specifier_opt class_name

    CLASS_NAME     shift, and go to state 97
    COLONCOLON     shift, and go to state 675
    VIRTUAL        shift, and go to state 676
    TEMPLATE_NAME  shift, and go to state 44

    CLASS_NAME     [reduce using rule 457 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 457 (nested_name_specifier_opt)]

    class_name                 go to state 104
    template_name              go to state 48
    nested_name_specifier      go to state 226
    template_id                go to state 90
    nested_name_specifier_opt  go to state 677


state 543

  329 class_head: class_key nested_name_specifier identifier base_clause .

    $default  reduce using rule 329 (class_head)


state 544

  330 class_key: CLASS .
  429 type_parameter: CLASS . identifier
  430               | CLASS . identifier '=' type_id

    IDENTIFIER  shift, and go to state 1

    IDENTIFIER  [reduce using rule 330 (class_key)]
    $default    reduce using rule 330 (class_key)

    identifier  go to state 678


state 545

  433 type_parameter: TEMPLATE . '<' template_parameter_list '>' CLASS identifier
  434               | TEMPLATE . '<' template_parameter_list '>' CLASS identifier '=' template_name

    '<'  shift, and go to state 679


state 546

  224 elaborated_type_specifier: TYPENAME . COLONCOLON_opt nested_name_specifier identifier
  225                          | TYPENAME . COLONCOLON_opt nested_name_specifier identifier '<' template_argument_list '>'
  431 type_parameter: TYPENAME . identifier
  432               | TYPENAME . identifier '=' type_id

    IDENTIFIER  shift, and go to state 1
    COLONCOLON  shift, and go to state 162

    $default  reduce using rule 461 (COLONCOLON_opt)

    identifier      go to state 680
    COLONCOLON_opt  go to state 163


state 547

  428 template_parameter: parameter_declaration .

    $default  reduce using rule 428 (template_parameter)


state 548

  424 template_declaration: EXPORT_opt TEMPLATE '<' template_parameter_list . '>' declaration
  426 template_parameter_list: template_parameter_list . ',' template_parameter

    ','  shift, and go to state 681
    '>'  shift, and go to state 682


state 549

  425 template_parameter_list: template_parameter .

    $default  reduce using rule 425 (template_parameter_list)


state 550

  427 template_parameter: type_parameter .

    $default  reduce using rule 427 (template_parameter)


state 551

  274 direct_declarator: CLASS_NAME COLONCOLON CLASS_NAME '(' parameter_declaration_clause . ')'

    ')'  shift, and go to state 683


state 552

  273 direct_declarator: CLASS_NAME COLONCOLON declarator_id '(' parameter_declaration_clause . ')'

    ')'  shift, and go to state 684


state 553

  301 direct_abstract_declarator: '(' abstract_declarator . ')'

    ')'  shift, and go to state 685


state 554

  310 parameter_declaration: decl_specifier_seq declarator '=' . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name                 go to state 104
    template_name              go to state 48
    identifier                 go to state 169
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 204
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 686
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90
    throw_expression           go to state 313


state 555

  294 abstract_declarator: ptr_operator abstract_declarator_opt .

    $default  reduce using rule 294 (abstract_declarator)


state 556

  312 parameter_declaration: decl_specifier_seq abstract_declarator_opt '=' . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name                 go to state 104
    template_name              go to state 48
    identifier                 go to state 169
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 204
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 687
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90
    throw_expression           go to state 313


state 557

  296 direct_abstract_declarator: direct_abstract_declarator_opt '(' . parameter_declaration_clause ')' cv_qualifier_seq exception_specification
  297                           | direct_abstract_declarator_opt '(' . parameter_declaration_clause ')' cv_qualifier_seq
  298                           | direct_abstract_declarator_opt '(' . parameter_declaration_clause ')' exception_specification
  299                           | direct_abstract_declarator_opt '(' . parameter_declaration_clause ')'

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 97
    ENUM_NAME      shift, and go to state 4
    ELLIPSIS       shift, and go to state 206
    COLONCOLON     shift, and go to state 113
    AUTO           shift, and go to state 7
    BOOL           shift, and go to state 8
    CHAR           shift, and go to state 9
    CLASS          shift, and go to state 10
    CONST          shift, and go to state 11
    DOUBLE         shift, and go to state 12
    ENUM           shift, and go to state 13
    EXPLICIT       shift, and go to state 14
    EXTERN         shift, and go to state 183
    FLOAT          shift, and go to state 17
    FRIEND         shift, and go to state 18
    INLINE         shift, and go to state 19
    INT            shift, and go to state 20
    LONG           shift, and go to state 21
    MUTABLE        shift, and go to state 22
    REGISTER       shift, and go to state 25
    SHORT          shift, and go to state 26
    SIGNED         shift, and go to state 27
    STATIC         shift, and go to state 28
    STRUCT         shift, and go to state 29
    TYPEDEF        shift, and go to state 31
    TYPENAME       shift, and go to state 32
    UNION          shift, and go to state 33
    UNSIGNED       shift, and go to state 34
    VIRTUAL        shift, and go to state 36
    VOID           shift, and go to state 37
    VOLATILE       shift, and go to state 38
    WCHAR_T        shift, and go to state 39
    TEMPLATE_NAME  shift, and go to state 44

    $default  reduce using rule 305 (parameter_declaration_clause)

    typedef_name                  go to state 45
    class_name                    go to state 46
    enum_name                     go to state 47
    template_name                 go to state 48
    identifier                    go to state 154
    nested_name_specifier         go to state 155
    decl_specifier                go to state 59
    decl_specifier_seq            go to state 207
    storage_class_specifier       go to state 61
    function_specifier            go to state 62
    type_specifier                go to state 63
    simple_type_specifier         go to state 64
    type_name                     go to state 65
    elaborated_type_specifier     go to state 66
    enum_specifier                go to state 67
    cv_qualifier                  go to state 81
    parameter_declaration_clause  go to state 688
    parameter_declaration_list    go to state 209
    parameter_declaration         go to state 210
    class_specifier               go to state 84
    class_head                    go to state 85
    class_key                     go to state 86
    template_id                   go to state 90


state 558

  300 direct_abstract_declarator: direct_abstract_declarator_opt '[' . constant_expression_opt ']'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    $default  reduce using rule 479 (constant_expression_opt)

    class_name                 go to state 104
    template_name              go to state 48
    identifier                 go to state 169
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 204
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 336
    conditional_expression     go to state 337
    constant_expression        go to state 338
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90
    constant_expression_opt    go to state 689


state 559

  306 parameter_declaration_clause: parameter_declaration_list ',' ELLIPSIS .

    $default  reduce using rule 306 (parameter_declaration_clause)


state 560

  308 parameter_declaration_list: parameter_declaration_list ',' parameter_declaration .

    $default  reduce using rule 308 (parameter_declaration_list)


state 561

  259 asm_definition: ASM '(' string_literal ')' ';' .

    $default  reduce using rule 259 (asm_definition)


state 562

  229 enumerator_list: enumerator_list ',' . enumerator_definition

    IDENTIFIER  shift, and go to state 1

    identifier             go to state 379
    enumerator_definition  go to state 690
    enumerator             go to state 382


state 563

  231 enumerator_definition: enumerator '=' . constant_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name                 go to state 104
    template_name              go to state 48
    identifier                 go to state 169
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 204
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 336
    conditional_expression     go to state 337
    constant_expression        go to state 691
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90


state 564

  227 enum_specifier: ENUM identifier '{' enumerator_list_opt '}' .

    $default  reduce using rule 227 (enum_specifier)


state 565

  260 linkage_specification: EXTERN string_literal '{' declaration_seq_opt '}' .

    $default  reduce using rule 260 (linkage_specification)


state 566

  241 extension_namespace_definition: NAMESPACE original_namespace_name '{' namespace_body '}' .

    $default  reduce using rule 241 (extension_namespace_definition)


state 567

  240 original_namespace_definition: NAMESPACE identifier '{' namespace_body '}' .

    $default  reduce using rule 240 (original_namespace_definition)


state 568

  247 qualified_namespace_specifier: COLONCOLON namespace_name .

    $default  reduce using rule 247 (qualified_namespace_specifier)


state 569

  246 qualified_namespace_specifier: COLONCOLON nested_name_specifier . namespace_name

    IDENTIFIER      shift, and go to state 1
    NAMESPACE_NAME  shift, and go to state 110

    namespace_name           go to state 692
    original_namespace_name  go to state 244
    identifier               go to state 245
    namespace_alias          go to state 247


state 570

  248 qualified_namespace_specifier: nested_name_specifier namespace_name .

    $default  reduce using rule 248 (qualified_namespace_specifier)


state 571

  245 namespace_alias_definition: NAMESPACE identifier '=' qualified_namespace_specifier ';' .

    $default  reduce using rule 245 (namespace_alias_definition)


state 572

  225 elaborated_type_specifier: TYPENAME COLONCOLON_opt nested_name_specifier identifier '<' . template_argument_list '>'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    TYPEDEF_NAME      shift, and go to state 2
    CLASS_NAME        shift, and go to state 97
    ENUM_NAME         shift, and go to state 4
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 8
    CHAR              shift, and go to state 9
    CLASS             shift, and go to state 10
    CONST             shift, and go to state 11
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DOUBLE            shift, and go to state 12
    DYNAMIC_CAST      shift, and go to state 263
    ENUM              shift, and go to state 13
    FALSE             shift, and go to state 264
    FLOAT             shift, and go to state 17
    INT               shift, and go to state 20
    LONG              shift, and go to state 21
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SHORT             shift, and go to state 26
    SIGNED            shift, and go to state 27
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    STRUCT            shift, and go to state 29
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    TYPENAME          shift, and go to state 32
    UNION             shift, and go to state 33
    UNSIGNED          shift, and go to state 34
    VOID              shift, and go to state 37
    VOLATILE          shift, and go to state 38
    WCHAR_T           shift, and go to state 39
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    typedef_name               go to state 45
    class_name                 go to state 46
    enum_name                  go to state 47
    template_name              go to state 280
    identifier                 go to state 49
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 289
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 308
    type_specifier             go to state 156
    simple_type_specifier      go to state 64
    type_name                  go to state 65
    elaborated_type_specifier  go to state 66
    enum_specifier             go to state 67
    cv_qualifier               go to state 81
    type_id                    go to state 309
    type_specifier_seq         go to state 310
    class_specifier            go to state 84
    class_head                 go to state 85
    class_key                  go to state 86
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90
    template_argument_list     go to state 693
    template_argument          go to state 312
    throw_expression           go to state 313


state 573

  252 using_declaration: USING COLONCOLON nested_name_specifier unqualified_id ';' .

    $default  reduce using rule 252 (using_declaration)


state 574

  256 using_directive: USING NAMESPACE COLONCOLON namespace_name ';' .

    $default  reduce using rule 256 (using_directive)


state 575

  255 using_directive: USING NAMESPACE COLONCOLON nested_name_specifier namespace_name . ';'

    ';'  shift, and go to state 694


state 576

  257 using_directive: USING NAMESPACE nested_name_specifier namespace_name ';' .

    $default  reduce using rule 257 (using_directive)


state 577

  250 using_declaration: USING TYPENAME COLONCOLON nested_name_specifier unqualified_id . ';'

    ';'  shift, and go to state 695


state 578

  251 using_declaration: USING TYPENAME nested_name_specifier unqualified_id ';' .

    $default  reduce using rule 251 (using_declaration)


state 579

   83 delete_expression: COLONCOLON DELETE '[' . ']' cast_expression

    ']'  shift, and go to state 696


state 580

   81 delete_expression: COLONCOLON DELETE cast_expression .

    $default  reduce using rule 81 (delete_expression)


state 581

   70 new_expression: COLONCOLON NEW new_placement_opt . new_type_id new_initializer_opt
   72               | COLONCOLON NEW new_placement_opt . '(' type_id ')' new_initializer_opt

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 97
    ENUM_NAME      shift, and go to state 4
    COLONCOLON     shift, and go to state 113
    BOOL           shift, and go to state 8
    CHAR           shift, and go to state 9
    CLASS          shift, and go to state 10
    CONST          shift, and go to state 11
    DOUBLE         shift, and go to state 12
    ENUM           shift, and go to state 13
    FLOAT          shift, and go to state 17
    INT            shift, and go to state 20
    LONG           shift, and go to state 21
    SHORT          shift, and go to state 26
    SIGNED         shift, and go to state 27
    STRUCT         shift, and go to state 29
    TYPENAME       shift, and go to state 32
    UNION          shift, and go to state 33
    UNSIGNED       shift, and go to state 34
    VOID           shift, and go to state 37
    VOLATILE       shift, and go to state 38
    WCHAR_T        shift, and go to state 39
    '('            shift, and go to state 697
    TEMPLATE_NAME  shift, and go to state 44

    typedef_name               go to state 45
    class_name                 go to state 46
    enum_name                  go to state 47
    template_name              go to state 48
    identifier                 go to state 154
    nested_name_specifier      go to state 155
    new_type_id                go to state 698
    type_specifier             go to state 156
    simple_type_specifier      go to state 64
    type_name                  go to state 65
    elaborated_type_specifier  go to state 66
    enum_specifier             go to state 67
    cv_qualifier               go to state 81
    type_specifier_seq         go to state 588
    class_specifier            go to state 84
    class_head                 go to state 85
    class_key                  go to state 86
    template_id                go to state 90


state 582

   50 postfix_expression: CONST_CAST '<' type_id . '>' '(' expression ')'

    '>'  shift, and go to state 699


state 583

   82 delete_expression: DELETE '[' ']' . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name              go to state 104
    template_name           go to state 48
    identifier              go to state 169
    literal                 go to state 281
    integer_literal         go to state 282
    character_literal       go to state 283
    floating_literal        go to state 284
    string_literal          go to state 285
    boolean_literal         go to state 286
    primary_expression      go to state 287
    id_expression           go to state 288
    unqualified_id          go to state 52
    qualified_id            go to state 53
    nested_name_specifier   go to state 204
    postfix_expression      go to state 290
    unary_expression        go to state 291
    unary_operator          go to state 292
    new_expression          go to state 293
    delete_expression       go to state 294
    cast_expression         go to state 700
    conversion_function_id  go to state 87
    operator_function_id    go to state 88
    template_id             go to state 90


state 584

   47 postfix_expression: DYNAMIC_CAST '<' type_id . '>' '(' expression ')'

    '>'  shift, and go to state 701


state 585

   54 expression_list: expression_list . ',' assignment_expression
   73 new_placement: '(' expression_list . ')'

    ')'  shift, and go to state 702
    ','  shift, and go to state 630


state 586

   71 new_expression: NEW new_placement_opt '(' . type_id ')' new_initializer_opt

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 97
    ENUM_NAME      shift, and go to state 4
    COLONCOLON     shift, and go to state 113
    BOOL           shift, and go to state 8
    CHAR           shift, and go to state 9
    CLASS          shift, and go to state 10
    CONST          shift, and go to state 11
    DOUBLE         shift, and go to state 12
    ENUM           shift, and go to state 13
    FLOAT          shift, and go to state 17
    INT            shift, and go to state 20
    LONG           shift, and go to state 21
    SHORT          shift, and go to state 26
    SIGNED         shift, and go to state 27
    STRUCT         shift, and go to state 29
    TYPENAME       shift, and go to state 32
    UNION          shift, and go to state 33
    UNSIGNED       shift, and go to state 34
    VOID           shift, and go to state 37
    VOLATILE       shift, and go to state 38
    WCHAR_T        shift, and go to state 39
    TEMPLATE_NAME  shift, and go to state 44

    typedef_name               go to state 45
    class_name                 go to state 46
    enum_name                  go to state 47
    template_name              go to state 48
    identifier                 go to state 154
    nested_name_specifier      go to state 155
    type_specifier             go to state 156
    simple_type_specifier      go to state 64
    type_name                  go to state 65
    elaborated_type_specifier  go to state 66
    enum_specifier             go to state 67
    cv_qualifier               go to state 81
    type_id                    go to state 703
    type_specifier_seq         go to state 310
    class_specifier            go to state 84
    class_head                 go to state 85
    class_key                  go to state 86
    template_id                go to state 90


state 587

   69 new_expression: NEW new_placement_opt new_type_id . new_initializer_opt

    '('  shift, and go to state 704

    $default  reduce using rule 465 (new_initializer_opt)

    new_initializer      go to state 705
    new_initializer_opt  go to state 706


state 588

   74 new_type_id: type_specifier_seq . new_declarator_opt

    CLASS_NAME     shift, and go to state 97
    COLONCOLON     shift, and go to state 233
    '['            shift, and go to state 707
    '&'            shift, and go to state 41
    '*'            shift, and go to state 42
    TEMPLATE_NAME  shift, and go to state 44

    '&'       [reduce using rule 467 (new_declarator_opt)]
    '*'       [reduce using rule 467 (new_declarator_opt)]
    $default  reduce using rule 467 (new_declarator_opt)

    class_name             go to state 104
    template_name          go to state 48
    nested_name_specifier  go to state 234
    new_declarator         go to state 708
    direct_new_declarator  go to state 709
    ptr_operator           go to state 710
    template_id            go to state 90
    new_declarator_opt     go to state 711


state 589

   49 postfix_expression: REINTERPRET_CAST '<' type_id . '>' '(' expression ')'

    '>'  shift, and go to state 712


state 590

   62 unary_expression: SIZEOF '(' type_id . ')'

    ')'  shift, and go to state 713


state 591

   48 postfix_expression: STATIC_CAST '<' type_id . '>' '(' expression ')'

    '>'  shift, and go to state 714


state 592

   51 postfix_expression: TYPEID '(' expression . ')'
  134 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 715
    ','  shift, and go to state 595


state 593

   52 postfix_expression: TYPEID '(' type_id . ')'

    ')'  shift, and go to state 716


state 594

   23 primary_expression: '(' expression ')' .

    $default  reduce using rule 23 (primary_expression)


state 595

  134 expression: expression ',' . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name                 go to state 104
    template_name              go to state 48
    identifier                 go to state 169
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 204
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 717
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90
    throw_expression           go to state 313


state 596

   85 cast_expression: '(' type_id ')' . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name              go to state 104
    template_name           go to state 48
    identifier              go to state 169
    literal                 go to state 281
    integer_literal         go to state 282
    character_literal       go to state 283
    floating_literal        go to state 284
    string_literal          go to state 285
    boolean_literal         go to state 286
    primary_expression      go to state 287
    id_expression           go to state 288
    unqualified_id          go to state 52
    qualified_id            go to state 53
    nested_name_specifier   go to state 204
    postfix_expression      go to state 290
    unary_expression        go to state 291
    unary_operator          go to state 292
    new_expression          go to state 293
    delete_expression       go to state 294
    cast_expression         go to state 718
    conversion_function_id  go to state 87
    operator_function_id    go to state 88
    template_id             go to state 90


state 597

   43 postfix_expression: postfix_expression ARROW COLONCOLON . id_expression

    IDENTIFIER     shift, and go to state 1
    CLASS_NAME     shift, and go to state 97
    OPERATOR       shift, and go to state 24
    '~'            shift, and go to state 43
    TEMPLATE_NAME  shift, and go to state 44

    class_name              go to state 104
    template_name           go to state 48
    identifier              go to state 169
    id_expression           go to state 719
    unqualified_id          go to state 52
    qualified_id            go to state 53
    nested_name_specifier   go to state 204
    conversion_function_id  go to state 87
    operator_function_id    go to state 88
    template_id             go to state 90


state 598

   41 postfix_expression: postfix_expression ARROW TEMPLATE . COLONCOLON id_expression
   42                   | postfix_expression ARROW TEMPLATE . id_expression

    IDENTIFIER     shift, and go to state 1
    CLASS_NAME     shift, and go to state 97
    COLONCOLON     shift, and go to state 720
    OPERATOR       shift, and go to state 24
    '~'            shift, and go to state 43
    TEMPLATE_NAME  shift, and go to state 44

    class_name              go to state 104
    template_name           go to state 48
    identifier              go to state 169
    id_expression           go to state 721
    unqualified_id          go to state 52
    qualified_id            go to state 53
    nested_name_specifier   go to state 204
    conversion_function_id  go to state 87
    operator_function_id    go to state 88
    template_id             go to state 90


state 599

   44 postfix_expression: postfix_expression ARROW id_expression .

    $default  reduce using rule 44 (postfix_expression)


state 600

   54 expression_list: expression_list . ',' assignment_expression
  460 expression_list_opt: expression_list .

    ','  shift, and go to state 630

    $default  reduce using rule 460 (expression_list_opt)


state 601

   36 postfix_expression: postfix_expression '(' expression_list_opt . ')'

    ')'  shift, and go to state 722


state 602

   35 postfix_expression: postfix_expression '[' expression . ']'
  134 expression: expression . ',' assignment_expression

    ','  shift, and go to state 595
    ']'  shift, and go to state 723


state 603

   39 postfix_expression: postfix_expression '.' COLONCOLON . id_expression

    IDENTIFIER     shift, and go to state 1
    CLASS_NAME     shift, and go to state 97
    OPERATOR       shift, and go to state 24
    '~'            shift, and go to state 43
    TEMPLATE_NAME  shift, and go to state 44

    class_name              go to state 104
    template_name           go to state 48
    identifier              go to state 169
    id_expression           go to state 724
    unqualified_id          go to state 52
    qualified_id            go to state 53
    nested_name_specifier   go to state 204
    conversion_function_id  go to state 87
    operator_function_id    go to state 88
    template_id             go to state 90


state 604

   37 postfix_expression: postfix_expression '.' TEMPLATE . COLONCOLON id_expression
   38                   | postfix_expression '.' TEMPLATE . id_expression

    IDENTIFIER     shift, and go to state 1
    CLASS_NAME     shift, and go to state 97
    COLONCOLON     shift, and go to state 725
    OPERATOR       shift, and go to state 24
    '~'            shift, and go to state 43
    TEMPLATE_NAME  shift, and go to state 44

    class_name              go to state 104
    template_name           go to state 48
    identifier              go to state 169
    id_expression           go to state 726
    unqualified_id          go to state 52
    qualified_id            go to state 53
    nested_name_specifier   go to state 204
    conversion_function_id  go to state 87
    operator_function_id    go to state 88
    template_id             go to state 90


state 605

   40 postfix_expression: postfix_expression '.' id_expression .

    $default  reduce using rule 40 (postfix_expression)


state 606

   87 pm_expression: pm_expression DOTSTAR cast_expression .

    $default  reduce using rule 87 (pm_expression)


state 607

   88 pm_expression: pm_expression ARROWSTAR cast_expression .

    $default  reduce using rule 88 (pm_expression)


state 608

   87 pm_expression: pm_expression . DOTSTAR cast_expression
   88              | pm_expression . ARROWSTAR cast_expression
   92 multiplicative_expression: multiplicative_expression '%' pm_expression .

    DOTSTAR    shift, and go to state 437
    ARROWSTAR  shift, and go to state 438

    $default  reduce using rule 92 (multiplicative_expression)


state 609

   87 pm_expression: pm_expression . DOTSTAR cast_expression
   88              | pm_expression . ARROWSTAR cast_expression
   90 multiplicative_expression: multiplicative_expression '*' pm_expression .

    DOTSTAR    shift, and go to state 437
    ARROWSTAR  shift, and go to state 438

    $default  reduce using rule 90 (multiplicative_expression)


state 610

   87 pm_expression: pm_expression . DOTSTAR cast_expression
   88              | pm_expression . ARROWSTAR cast_expression
   91 multiplicative_expression: multiplicative_expression '/' pm_expression .

    DOTSTAR    shift, and go to state 437
    ARROWSTAR  shift, and go to state 438

    $default  reduce using rule 91 (multiplicative_expression)


state 611

   90 multiplicative_expression: multiplicative_expression . '*' pm_expression
   91                          | multiplicative_expression . '/' pm_expression
   92                          | multiplicative_expression . '%' pm_expression
   94 additive_expression: additive_expression '+' multiplicative_expression .

    '%'  shift, and go to state 439
    '*'  shift, and go to state 440
    '/'  shift, and go to state 441

    $default  reduce using rule 94 (additive_expression)


state 612

   90 multiplicative_expression: multiplicative_expression . '*' pm_expression
   91                          | multiplicative_expression . '/' pm_expression
   92                          | multiplicative_expression . '%' pm_expression
   95 additive_expression: additive_expression '-' multiplicative_expression .

    '%'  shift, and go to state 439
    '*'  shift, and go to state 440
    '/'  shift, and go to state 441

    $default  reduce using rule 95 (additive_expression)


state 613

   94 additive_expression: additive_expression . '+' multiplicative_expression
   95                    | additive_expression . '-' multiplicative_expression
   97 shift_expression: shift_expression SL additive_expression .

    '+'  shift, and go to state 442
    '-'  shift, and go to state 443

    $default  reduce using rule 97 (shift_expression)


state 614

   94 additive_expression: additive_expression . '+' multiplicative_expression
   95                    | additive_expression . '-' multiplicative_expression
   98 shift_expression: shift_expression SR additive_expression .

    '+'  shift, and go to state 442
    '-'  shift, and go to state 443

    $default  reduce using rule 98 (shift_expression)


state 615

   97 shift_expression: shift_expression . SL additive_expression
   98                 | shift_expression . SR additive_expression
  102 relational_expression: relational_expression LTEQ shift_expression .

    SL  shift, and go to state 444
    SR  shift, and go to state 445

    $default  reduce using rule 102 (relational_expression)


state 616

   97 shift_expression: shift_expression . SL additive_expression
   98                 | shift_expression . SR additive_expression
  103 relational_expression: relational_expression GTEQ shift_expression .

    SL  shift, and go to state 444
    SR  shift, and go to state 445

    $default  reduce using rule 103 (relational_expression)


state 617

   97 shift_expression: shift_expression . SL additive_expression
   98                 | shift_expression . SR additive_expression
  100 relational_expression: relational_expression '<' shift_expression .

    SL  shift, and go to state 444
    SR  shift, and go to state 445

    $default  reduce using rule 100 (relational_expression)


state 618

   97 shift_expression: shift_expression . SL additive_expression
   98                 | shift_expression . SR additive_expression
  101 relational_expression: relational_expression '>' shift_expression .

    SL  shift, and go to state 444
    SR  shift, and go to state 445

    $default  reduce using rule 101 (relational_expression)


state 619

  100 relational_expression: relational_expression . '<' shift_expression
  101                      | relational_expression . '>' shift_expression
  102                      | relational_expression . LTEQ shift_expression
  103                      | relational_expression . GTEQ shift_expression
  105 equality_expression: equality_expression EQ relational_expression .

    LTEQ  shift, and go to state 446
    GTEQ  shift, and go to state 447
    '<'   shift, and go to state 448
    '>'   shift, and go to state 449

    '>'       [reduce using rule 105 (equality_expression)]
    $default  reduce using rule 105 (equality_expression)


state 620

  100 relational_expression: relational_expression . '<' shift_expression
  101                      | relational_expression . '>' shift_expression
  102                      | relational_expression . LTEQ shift_expression
  103                      | relational_expression . GTEQ shift_expression
  106 equality_expression: equality_expression NOTEQ relational_expression .

    LTEQ  shift, and go to state 446
    GTEQ  shift, and go to state 447
    '<'   shift, and go to state 448
    '>'   shift, and go to state 449

    '>'       [reduce using rule 106 (equality_expression)]
    $default  reduce using rule 106 (equality_expression)


state 621

  105 equality_expression: equality_expression . EQ relational_expression
  106                    | equality_expression . NOTEQ relational_expression
  108 and_expression: and_expression '&' equality_expression .

    EQ     shift, and go to state 450
    NOTEQ  shift, and go to state 451

    $default  reduce using rule 108 (and_expression)


state 622

  108 and_expression: and_expression . '&' equality_expression
  110 exclusive_or_expression: exclusive_or_expression '^' and_expression .

    '&'  shift, and go to state 452

    $default  reduce using rule 110 (exclusive_or_expression)


state 623

  110 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  112 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .

    '^'  shift, and go to state 453

    $default  reduce using rule 112 (inclusive_or_expression)


state 624

  112 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  114 logical_and_expression: logical_and_expression ANDAND inclusive_or_expression .

    '|'  shift, and go to state 454

    $default  reduce using rule 114 (logical_and_expression)


state 625

  114 logical_and_expression: logical_and_expression . ANDAND inclusive_or_expression
  116 logical_or_expression: logical_or_expression OROR logical_and_expression .

    ANDAND  shift, and go to state 455

    $default  reduce using rule 116 (logical_or_expression)


state 626

  118 conditional_expression: logical_or_expression '?' expression . ':' assignment_expression
  134 expression: expression . ',' assignment_expression

    ','  shift, and go to state 595
    ':'  shift, and go to state 727


state 627

  120 assignment_expression: logical_or_expression assignment_operator assignment_expression .

    $default  reduce using rule 120 (assignment_expression)


state 628

  437 template_argument_list: template_argument_list ',' template_argument .

    $default  reduce using rule 437 (template_argument_list)


state 629

  319 initializer: '(' expression_list ')' .

    $default  reduce using rule 319 (initializer)


state 630

   54 expression_list: expression_list ',' . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name                 go to state 104
    template_name              go to state 48
    identifier                 go to state 169
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 204
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 728
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90
    throw_expression           go to state 313


state 631

  322 initializer_clause: '{' '}' .

    $default  reduce using rule 322 (initializer_clause)


state 632

  323 initializer_list: initializer_clause .

    $default  reduce using rule 323 (initializer_list)


state 633

  321 initializer_clause: '{' initializer_list . COMMA_opt '}'
  324 initializer_list: initializer_list . ',' initializer_clause

    ','  shift, and go to state 729

    $default  reduce using rule 489 (COMMA_opt)

    COMMA_opt  go to state 730


state 634

  446 handler: CATCH . '(' exception_declaration ')' compound_statement

    '('  shift, and go to state 731


state 635

  444 function_try_block: TRY ctor_initializer_opt function_body handler_seq .

    $default  reduce using rule 444 (function_try_block)


state 636

  445 handler_seq: handler . handler_seq_opt

    CATCH  shift, and go to state 634

    $default  reduce using rule 499 (handler_seq_opt)

    handler_seq      go to state 732
    handler          go to state 636
    handler_seq_opt  go to state 733


state 637

  376 mem_initializer_id: COLONCOLON nested_name_specifier class_name .

    $default  reduce using rule 376 (mem_initializer_id)


state 638

  374 mem_initializer_list: mem_initializer ',' mem_initializer_list .

    $default  reduce using rule 374 (mem_initializer_list)


state 639

  375 mem_initializer: mem_initializer_id '(' expression_list_opt . ')'

    ')'  shift, and go to state 734


state 640

  161 jump_statement: BREAK ';' .

    $default  reduce using rule 161 (jump_statement)


state 641

  145 labeled_statement: CASE constant_expression . ':' statement

    ':'  shift, and go to state 735


state 642

  162 jump_statement: CONTINUE ';' .

    $default  reduce using rule 162 (jump_statement)


state 643

  146 labeled_statement: DEFAULT ':' . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    TYPEDEF_NAME      shift, and go to state 2
    CLASS_NAME        shift, and go to state 97
    ENUM_NAME         shift, and go to state 4
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    ASM               shift, and go to state 6
    AUTO              shift, and go to state 7
    BOOL              shift, and go to state 8
    BREAK             shift, and go to state 489
    CASE              shift, and go to state 490
    CHAR              shift, and go to state 9
    CLASS             shift, and go to state 10
    CONST             shift, and go to state 11
    CONST_CAST        shift, and go to state 261
    CONTINUE          shift, and go to state 491
    DEFAULT           shift, and go to state 492
    DELETE            shift, and go to state 262
    DO                shift, and go to state 493
    DOUBLE            shift, and go to state 12
    DYNAMIC_CAST      shift, and go to state 263
    ENUM              shift, and go to state 13
    EXPLICIT          shift, and go to state 14
    EXTERN            shift, and go to state 183
    FALSE             shift, and go to state 264
    FLOAT             shift, and go to state 17
    FOR               shift, and go to state 494
    FRIEND            shift, and go to state 18
    GOTO              shift, and go to state 495
    IF                shift, and go to state 496
    INLINE            shift, and go to state 19
    INT               shift, and go to state 20
    LONG              shift, and go to state 21
    MUTABLE           shift, and go to state 22
    NAMESPACE         shift, and go to state 497
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REGISTER          shift, and go to state 25
    REINTERPRET_CAST  shift, and go to state 266
    RETURN            shift, and go to state 498
    SHORT             shift, and go to state 26
    SIGNED            shift, and go to state 27
    SIZEOF            shift, and go to state 267
    STATIC            shift, and go to state 28
    STATIC_CAST       shift, and go to state 268
    STRUCT            shift, and go to state 29
    SWITCH            shift, and go to state 499
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TRY               shift, and go to state 500
    TYPEDEF           shift, and go to state 31
    TYPEID            shift, and go to state 272
    TYPENAME          shift, and go to state 32
    UNION             shift, and go to state 33
    UNSIGNED          shift, and go to state 34
    USING             shift, and go to state 35
    VIRTUAL           shift, and go to state 36
    VOID              shift, and go to state 37
    VOLATILE          shift, and go to state 38
    WCHAR_T           shift, and go to state 39
    WHILE             shift, and go to state 501
    '('               shift, and go to state 273
    '{'               shift, and go to state 331
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    $default  reduce using rule 469 (expression_opt)

    typedef_name                go to state 45
    class_name                  go to state 46
    enum_name                   go to state 47
    template_name               go to state 48
    identifier                  go to state 502
    literal                     go to state 281
    integer_literal             go to state 282
    character_literal           go to state 283
    floating_literal            go to state 284
    string_literal              go to state 285
    boolean_literal             go to state 286
    primary_expression          go to state 287
    id_expression               go to state 288
    unqualified_id              go to state 52
    qualified_id                go to state 53
    nested_name_specifier       go to state 289
    postfix_expression          go to state 290
    unary_expression            go to state 291
    unary_operator              go to state 292
    new_expression              go to state 293
    delete_expression           go to state 294
    cast_expression             go to state 295
    pm_expression               go to state 296
    multiplicative_expression   go to state 297
    additive_expression         go to state 298
    shift_expression            go to state 299
    relational_expression       go to state 300
    equality_expression         go to state 301
    and_expression              go to state 302
    exclusive_or_expression     go to state 303
    inclusive_or_expression     go to state 304
    logical_and_expression      go to state 305
    logical_or_expression       go to state 306
    conditional_expression      go to state 307
    assignment_expression       go to state 425
    expression                  go to state 503
    statement                   go to state 736
    labeled_statement           go to state 505
    expression_statement        go to state 506
    compound_statement          go to state 507
    selection_statement         go to state 509
    iteration_statement         go to state 510
    jump_statement              go to state 511
    declaration_statement       go to state 512
    block_declaration           go to state 513
    simple_declaration          go to state 58
    decl_specifier              go to state 59
    decl_specifier_seq          go to state 514
    storage_class_specifier     go to state 61
    function_specifier          go to state 62
    type_specifier              go to state 63
    simple_type_specifier       go to state 64
    type_name                   go to state 65
    elaborated_type_specifier   go to state 66
    enum_specifier              go to state 67
    namespace_alias_definition  go to state 73
    using_declaration           go to state 74
    using_directive             go to state 75
    asm_definition              go to state 76
    cv_qualifier                go to state 81
    class_specifier             go to state 84
    class_head                  go to state 85
    class_key                   go to state 86
    conversion_function_id      go to state 87
    operator_function_id        go to state 88
    template_id                 go to state 90
    try_block                   go to state 515
    throw_expression            go to state 313
    expression_opt              go to state 516


state 644

  157 iteration_statement: DO statement . WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 737


state 645

  158 iteration_statement: FOR '(' . for_init_statement condition_opt ';' expression_opt ')' statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    TYPEDEF_NAME      shift, and go to state 2
    CLASS_NAME        shift, and go to state 97
    ENUM_NAME         shift, and go to state 4
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    AUTO              shift, and go to state 7
    BOOL              shift, and go to state 8
    CHAR              shift, and go to state 9
    CLASS             shift, and go to state 10
    CONST             shift, and go to state 11
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DOUBLE            shift, and go to state 12
    DYNAMIC_CAST      shift, and go to state 263
    ENUM              shift, and go to state 13
    EXPLICIT          shift, and go to state 14
    EXTERN            shift, and go to state 183
    FALSE             shift, and go to state 264
    FLOAT             shift, and go to state 17
    FRIEND            shift, and go to state 18
    INLINE            shift, and go to state 19
    INT               shift, and go to state 20
    LONG              shift, and go to state 21
    MUTABLE           shift, and go to state 22
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REGISTER          shift, and go to state 25
    REINTERPRET_CAST  shift, and go to state 266
    SHORT             shift, and go to state 26
    SIGNED            shift, and go to state 27
    SIZEOF            shift, and go to state 267
    STATIC            shift, and go to state 28
    STATIC_CAST       shift, and go to state 268
    STRUCT            shift, and go to state 29
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEDEF           shift, and go to state 31
    TYPEID            shift, and go to state 272
    TYPENAME          shift, and go to state 32
    UNION             shift, and go to state 33
    UNSIGNED          shift, and go to state 34
    VIRTUAL           shift, and go to state 36
    VOID              shift, and go to state 37
    VOLATILE          shift, and go to state 38
    WCHAR_T           shift, and go to state 39
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    $default  reduce using rule 469 (expression_opt)

    typedef_name               go to state 45
    class_name                 go to state 46
    enum_name                  go to state 47
    template_name              go to state 48
    identifier                 go to state 49
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 289
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 425
    expression                 go to state 503
    expression_statement       go to state 738
    for_init_statement         go to state 739
    simple_declaration         go to state 740
    decl_specifier             go to state 59
    decl_specifier_seq         go to state 514
    storage_class_specifier    go to state 61
    function_specifier         go to state 62
    type_specifier             go to state 63
    simple_type_specifier      go to state 64
    type_name                  go to state 65
    elaborated_type_specifier  go to state 66
    enum_specifier             go to state 67
    cv_qualifier               go to state 81
    class_specifier            go to state 84
    class_head                 go to state 85
    class_key                  go to state 86
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90
    throw_expression           go to state 313
    expression_opt             go to state 516


state 646

  164 jump_statement: GOTO identifier . ';'

    ';'  shift, and go to state 741


state 647

  151 selection_statement: IF '(' . condition ')' statement
  152                    | IF '(' . condition ')' statement ELSE statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    TYPEDEF_NAME      shift, and go to state 2
    CLASS_NAME        shift, and go to state 97
    ENUM_NAME         shift, and go to state 4
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 8
    CHAR              shift, and go to state 9
    CLASS             shift, and go to state 10
    CONST             shift, and go to state 11
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DOUBLE            shift, and go to state 12
    DYNAMIC_CAST      shift, and go to state 263
    ENUM              shift, and go to state 13
    FALSE             shift, and go to state 264
    FLOAT             shift, and go to state 17
    INT               shift, and go to state 20
    LONG              shift, and go to state 21
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SHORT             shift, and go to state 26
    SIGNED            shift, and go to state 27
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    STRUCT            shift, and go to state 29
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    TYPENAME          shift, and go to state 32
    UNION             shift, and go to state 33
    UNSIGNED          shift, and go to state 34
    VOID              shift, and go to state 37
    VOLATILE          shift, and go to state 38
    WCHAR_T           shift, and go to state 39
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    typedef_name               go to state 45
    class_name                 go to state 46
    enum_name                  go to state 47
    template_name              go to state 48
    identifier                 go to state 49
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 289
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 425
    expression                 go to state 742
    condition                  go to state 743
    type_specifier             go to state 156
    simple_type_specifier      go to state 64
    type_name                  go to state 65
    elaborated_type_specifier  go to state 66
    enum_specifier             go to state 67
    cv_qualifier               go to state 81
    type_specifier_seq         go to state 744
    class_specifier            go to state 84
    class_head                 go to state 85
    class_key                  go to state 86
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90
    throw_expression           go to state 313


state 648

  245 namespace_alias_definition: NAMESPACE identifier . '=' qualified_namespace_specifier ';'

    '='  shift, and go to state 225


state 649

  163 jump_statement: RETURN expression_opt . ';'

    ';'  shift, and go to state 745


state 650

  153 selection_statement: SWITCH '(' . condition ')' statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    TYPEDEF_NAME      shift, and go to state 2
    CLASS_NAME        shift, and go to state 97
    ENUM_NAME         shift, and go to state 4
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 8
    CHAR              shift, and go to state 9
    CLASS             shift, and go to state 10
    CONST             shift, and go to state 11
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DOUBLE            shift, and go to state 12
    DYNAMIC_CAST      shift, and go to state 263
    ENUM              shift, and go to state 13
    FALSE             shift, and go to state 264
    FLOAT             shift, and go to state 17
    INT               shift, and go to state 20
    LONG              shift, and go to state 21
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SHORT             shift, and go to state 26
    SIGNED            shift, and go to state 27
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    STRUCT            shift, and go to state 29
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    TYPENAME          shift, and go to state 32
    UNION             shift, and go to state 33
    UNSIGNED          shift, and go to state 34
    VOID              shift, and go to state 37
    VOLATILE          shift, and go to state 38
    WCHAR_T           shift, and go to state 39
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    typedef_name               go to state 45
    class_name                 go to state 46
    enum_name                  go to state 47
    template_name              go to state 48
    identifier                 go to state 49
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 289
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 425
    expression                 go to state 742
    condition                  go to state 746
    type_specifier             go to state 156
    simple_type_specifier      go to state 64
    type_name                  go to state 65
    elaborated_type_specifier  go to state 66
    enum_specifier             go to state 67
    cv_qualifier               go to state 81
    type_specifier_seq         go to state 744
    class_specifier            go to state 84
    class_head                 go to state 85
    class_key                  go to state 86
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90
    throw_expression           go to state 313


state 651

  443 try_block: TRY compound_statement . handler_seq

    CATCH  shift, and go to state 634

    handler_seq  go to state 747
    handler      go to state 636


state 652

  156 iteration_statement: WHILE '(' . condition ')' statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    TYPEDEF_NAME      shift, and go to state 2
    CLASS_NAME        shift, and go to state 97
    ENUM_NAME         shift, and go to state 4
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 8
    CHAR              shift, and go to state 9
    CLASS             shift, and go to state 10
    CONST             shift, and go to state 11
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DOUBLE            shift, and go to state 12
    DYNAMIC_CAST      shift, and go to state 263
    ENUM              shift, and go to state 13
    FALSE             shift, and go to state 264
    FLOAT             shift, and go to state 17
    INT               shift, and go to state 20
    LONG              shift, and go to state 21
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SHORT             shift, and go to state 26
    SIGNED            shift, and go to state 27
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    STRUCT            shift, and go to state 29
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    TYPENAME          shift, and go to state 32
    UNION             shift, and go to state 33
    UNSIGNED          shift, and go to state 34
    VOID              shift, and go to state 37
    VOLATILE          shift, and go to state 38
    WCHAR_T           shift, and go to state 39
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    typedef_name               go to state 45
    class_name                 go to state 46
    enum_name                  go to state 47
    template_name              go to state 48
    identifier                 go to state 49
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 289
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 425
    expression                 go to state 742
    condition                  go to state 748
    type_specifier             go to state 156
    simple_type_specifier      go to state 64
    type_name                  go to state 65
    elaborated_type_specifier  go to state 66
    enum_specifier             go to state 67
    cv_qualifier               go to state 81
    type_specifier_seq         go to state 744
    class_specifier            go to state 84
    class_head                 go to state 85
    class_key                  go to state 86
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90
    throw_expression           go to state 313


state 653

  144 labeled_statement: identifier ':' . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    TYPEDEF_NAME      shift, and go to state 2
    CLASS_NAME        shift, and go to state 97
    ENUM_NAME         shift, and go to state 4
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    ASM               shift, and go to state 6
    AUTO              shift, and go to state 7
    BOOL              shift, and go to state 8
    BREAK             shift, and go to state 489
    CASE              shift, and go to state 490
    CHAR              shift, and go to state 9
    CLASS             shift, and go to state 10
    CONST             shift, and go to state 11
    CONST_CAST        shift, and go to state 261
    CONTINUE          shift, and go to state 491
    DEFAULT           shift, and go to state 492
    DELETE            shift, and go to state 262
    DO                shift, and go to state 493
    DOUBLE            shift, and go to state 12
    DYNAMIC_CAST      shift, and go to state 263
    ENUM              shift, and go to state 13
    EXPLICIT          shift, and go to state 14
    EXTERN            shift, and go to state 183
    FALSE             shift, and go to state 264
    FLOAT             shift, and go to state 17
    FOR               shift, and go to state 494
    FRIEND            shift, and go to state 18
    GOTO              shift, and go to state 495
    IF                shift, and go to state 496
    INLINE            shift, and go to state 19
    INT               shift, and go to state 20
    LONG              shift, and go to state 21
    MUTABLE           shift, and go to state 22
    NAMESPACE         shift, and go to state 497
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REGISTER          shift, and go to state 25
    REINTERPRET_CAST  shift, and go to state 266
    RETURN            shift, and go to state 498
    SHORT             shift, and go to state 26
    SIGNED            shift, and go to state 27
    SIZEOF            shift, and go to state 267
    STATIC            shift, and go to state 28
    STATIC_CAST       shift, and go to state 268
    STRUCT            shift, and go to state 29
    SWITCH            shift, and go to state 499
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TRY               shift, and go to state 500
    TYPEDEF           shift, and go to state 31
    TYPEID            shift, and go to state 272
    TYPENAME          shift, and go to state 32
    UNION             shift, and go to state 33
    UNSIGNED          shift, and go to state 34
    USING             shift, and go to state 35
    VIRTUAL           shift, and go to state 36
    VOID              shift, and go to state 37
    VOLATILE          shift, and go to state 38
    WCHAR_T           shift, and go to state 39
    WHILE             shift, and go to state 501
    '('               shift, and go to state 273
    '{'               shift, and go to state 331
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    $default  reduce using rule 469 (expression_opt)

    typedef_name                go to state 45
    class_name                  go to state 46
    enum_name                   go to state 47
    template_name               go to state 48
    identifier                  go to state 502
    literal                     go to state 281
    integer_literal             go to state 282
    character_literal           go to state 283
    floating_literal            go to state 284
    string_literal              go to state 285
    boolean_literal             go to state 286
    primary_expression          go to state 287
    id_expression               go to state 288
    unqualified_id              go to state 52
    qualified_id                go to state 53
    nested_name_specifier       go to state 289
    postfix_expression          go to state 290
    unary_expression            go to state 291
    unary_operator              go to state 292
    new_expression              go to state 293
    delete_expression           go to state 294
    cast_expression             go to state 295
    pm_expression               go to state 296
    multiplicative_expression   go to state 297
    additive_expression         go to state 298
    shift_expression            go to state 299
    relational_expression       go to state 300
    equality_expression         go to state 301
    and_expression              go to state 302
    exclusive_or_expression     go to state 303
    inclusive_or_expression     go to state 304
    logical_and_expression      go to state 305
    logical_or_expression       go to state 306
    conditional_expression      go to state 307
    assignment_expression       go to state 425
    expression                  go to state 503
    statement                   go to state 749
    labeled_statement           go to state 505
    expression_statement        go to state 506
    compound_statement          go to state 507
    selection_statement         go to state 509
    iteration_statement         go to state 510
    jump_statement              go to state 511
    declaration_statement       go to state 512
    block_declaration           go to state 513
    simple_declaration          go to state 58
    decl_specifier              go to state 59
    decl_specifier_seq          go to state 514
    storage_class_specifier     go to state 61
    function_specifier          go to state 62
    type_specifier              go to state 63
    simple_type_specifier       go to state 64
    type_name                   go to state 65
    elaborated_type_specifier   go to state 66
    enum_specifier              go to state 67
    namespace_alias_definition  go to state 73
    using_declaration           go to state 74
    using_directive             go to state 75
    asm_definition              go to state 76
    cv_qualifier                go to state 81
    class_specifier             go to state 84
    class_head                  go to state 85
    class_key                   go to state 86
    conversion_function_id      go to state 87
    operator_function_id        go to state 88
    template_id                 go to state 90
    try_block                   go to state 515
    throw_expression            go to state 313
    expression_opt              go to state 516


state 654

  150 statement_seq: statement_seq statement .

    $default  reduce using rule 150 (statement_seq)


state 655

  147 expression_statement: expression_opt ';' .

    $default  reduce using rule 147 (expression_statement)


state 656

  148 compound_statement: '{' statement_seq_opt '}' .

    $default  reduce using rule 148 (compound_statement)


state 657

  452 exception_specification: THROW . '(' type_id_list_opt ')'

    '('  shift, and go to state 750


state 658

  268 direct_declarator: direct_declarator '(' parameter_declaration_clause ')' cv_qualifier_seq . exception_specification
  269                  | direct_declarator '(' parameter_declaration_clause ')' cv_qualifier_seq .

    THROW  shift, and go to state 657

    $default  reduce using rule 269 (direct_declarator)

    exception_specification  go to state 751


state 659

  270 direct_declarator: direct_declarator '(' parameter_declaration_clause ')' exception_specification .

    $default  reduce using rule 270 (direct_declarator)


state 660

  348 member_declarator: identifier ':' constant_expression .

    $default  reduce using rule 348 (member_declarator)


state 661

  335 member_declaration: decl_specifier_seq member_declarator_list ';' .

    $default  reduce using rule 335 (member_declaration)


state 662

  349 pure_specifier: '=' '0' .

    $default  reduce using rule 349 (pure_specifier)


state 663

  350 constant_initializer: '=' constant_expression .

    $default  reduce using rule 350 (constant_initializer)


state 664

   27 unqualified_id: identifier .
  348 member_declarator: identifier . ':' constant_expression

    ':'  shift, and go to state 520

    $default  reduce using rule 27 (unqualified_id)


state 665

  345 member_declarator: declarator .
  346                  | declarator . pure_specifier
  347                  | declarator . constant_initializer

    '='  shift, and go to state 525

    $default  reduce using rule 345 (member_declarator)

    pure_specifier        go to state 526
    constant_initializer  go to state 527


state 666

  343 member_declarator_list: member_declarator_list ',' member_declarator .

    $default  reduce using rule 343 (member_declarator_list)


state 667

  334 member_specification: access_specifier ':' member_specification_opt .

    $default  reduce using rule 334 (member_specification)


state 668

   32 nested_name_specifier: class_name . COLONCOLON nested_name_specifier
   33                      | class_name . COLONCOLON
  355 base_specifier: COLONCOLON class_name .

    COLONCOLON  shift, and go to state 175

    $default  reduce using rule 355 (base_specifier)


state 669

  354 base_specifier: COLONCOLON nested_name_specifier . class_name

    CLASS_NAME     shift, and go to state 97
    TEMPLATE_NAME  shift, and go to state 44

    class_name     go to state 752
    template_name  go to state 48
    template_id    go to state 90


state 670

  360 base_specifier: VIRTUAL COLONCOLON . nested_name_specifier_opt class_name

    CLASS_NAME     shift, and go to state 97
    TEMPLATE_NAME  shift, and go to state 44

    CLASS_NAME     [reduce using rule 457 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 457 (nested_name_specifier_opt)]

    class_name                 go to state 104
    template_name              go to state 48
    nested_name_specifier      go to state 226
    template_id                go to state 90
    nested_name_specifier_opt  go to state 753


state 671

  358 base_specifier: VIRTUAL access_specifier . COLONCOLON nested_name_specifier_opt class_name
  359               | VIRTUAL access_specifier . nested_name_specifier_opt class_name

    CLASS_NAME     shift, and go to state 97
    COLONCOLON     shift, and go to state 754
    TEMPLATE_NAME  shift, and go to state 44

    CLASS_NAME     [reduce using rule 457 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 457 (nested_name_specifier_opt)]

    class_name                 go to state 104
    template_name              go to state 48
    nested_name_specifier      go to state 226
    template_id                go to state 90
    nested_name_specifier_opt  go to state 755


state 672

  361 base_specifier: VIRTUAL nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 97
    TEMPLATE_NAME  shift, and go to state 44

    class_name     go to state 756
    template_name  go to state 48
    template_id    go to state 90


state 673

  356 base_specifier: nested_name_specifier class_name .

    $default  reduce using rule 356 (base_specifier)


state 674

  353 base_specifier_list: base_specifier_list ',' . base_specifier

    CLASS_NAME     shift, and go to state 97
    COLONCOLON     shift, and go to state 536
    PRIVATE        shift, and go to state 340
    PROTECTED      shift, and go to state 341
    PUBLIC         shift, and go to state 342
    VIRTUAL        shift, and go to state 537
    TEMPLATE_NAME  shift, and go to state 44

    class_name             go to state 538
    template_name          go to state 48
    nested_name_specifier  go to state 539
    base_specifier         go to state 757
    access_specifier       go to state 542
    template_id            go to state 90


state 675

  364 base_specifier: access_specifier COLONCOLON . nested_name_specifier_opt class_name

    CLASS_NAME     shift, and go to state 97
    TEMPLATE_NAME  shift, and go to state 44

    CLASS_NAME     [reduce using rule 457 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 457 (nested_name_specifier_opt)]

    class_name                 go to state 104
    template_name              go to state 48
    nested_name_specifier      go to state 226
    template_id                go to state 90
    nested_name_specifier_opt  go to state 758


state 676

  362 base_specifier: access_specifier VIRTUAL . COLONCOLON nested_name_specifier_opt class_name
  363               | access_specifier VIRTUAL . nested_name_specifier_opt class_name

    CLASS_NAME     shift, and go to state 97
    COLONCOLON     shift, and go to state 759
    TEMPLATE_NAME  shift, and go to state 44

    CLASS_NAME     [reduce using rule 457 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 457 (nested_name_specifier_opt)]

    class_name                 go to state 104
    template_name              go to state 48
    nested_name_specifier      go to state 226
    template_id                go to state 90
    nested_name_specifier_opt  go to state 760


state 677

  365 base_specifier: access_specifier nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 97
    TEMPLATE_NAME  shift, and go to state 44

    class_name     go to state 761
    template_name  go to state 48
    template_id    go to state 90


state 678

  429 type_parameter: CLASS identifier .
  430               | CLASS identifier . '=' type_id

    '='  shift, and go to state 762

    $default  reduce using rule 429 (type_parameter)


state 679

  433 type_parameter: TEMPLATE '<' . template_parameter_list '>' CLASS identifier
  434               | TEMPLATE '<' . template_parameter_list '>' CLASS identifier '=' template_name

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 97
    ENUM_NAME      shift, and go to state 4
    COLONCOLON     shift, and go to state 113
    AUTO           shift, and go to state 7
    BOOL           shift, and go to state 8
    CHAR           shift, and go to state 9
    CLASS          shift, and go to state 544
    CONST          shift, and go to state 11
    DOUBLE         shift, and go to state 12
    ENUM           shift, and go to state 13
    EXPLICIT       shift, and go to state 14
    EXTERN         shift, and go to state 183
    FLOAT          shift, and go to state 17
    FRIEND         shift, and go to state 18
    INLINE         shift, and go to state 19
    INT            shift, and go to state 20
    LONG           shift, and go to state 21
    MUTABLE        shift, and go to state 22
    REGISTER       shift, and go to state 25
    SHORT          shift, and go to state 26
    SIGNED         shift, and go to state 27
    STATIC         shift, and go to state 28
    STRUCT         shift, and go to state 29
    TEMPLATE       shift, and go to state 545
    TYPEDEF        shift, and go to state 31
    TYPENAME       shift, and go to state 546
    UNION          shift, and go to state 33
    UNSIGNED       shift, and go to state 34
    VIRTUAL        shift, and go to state 36
    VOID           shift, and go to state 37
    VOLATILE       shift, and go to state 38
    WCHAR_T        shift, and go to state 39
    TEMPLATE_NAME  shift, and go to state 44

    typedef_name               go to state 45
    class_name                 go to state 46
    enum_name                  go to state 47
    template_name              go to state 48
    identifier                 go to state 154
    nested_name_specifier      go to state 155
    decl_specifier             go to state 59
    decl_specifier_seq         go to state 207
    storage_class_specifier    go to state 61
    function_specifier         go to state 62
    type_specifier             go to state 63
    simple_type_specifier      go to state 64
    type_name                  go to state 65
    elaborated_type_specifier  go to state 66
    enum_specifier             go to state 67
    cv_qualifier               go to state 81
    parameter_declaration      go to state 547
    class_specifier            go to state 84
    class_head                 go to state 85
    class_key                  go to state 86
    template_parameter_list    go to state 763
    template_parameter         go to state 549
    type_parameter             go to state 550
    template_id                go to state 90


state 680

  431 type_parameter: TYPENAME identifier .
  432               | TYPENAME identifier . '=' type_id

    '='  shift, and go to state 764

    $default  reduce using rule 431 (type_parameter)


state 681

  426 template_parameter_list: template_parameter_list ',' . template_parameter

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 97
    ENUM_NAME      shift, and go to state 4
    COLONCOLON     shift, and go to state 113
    AUTO           shift, and go to state 7
    BOOL           shift, and go to state 8
    CHAR           shift, and go to state 9
    CLASS          shift, and go to state 544
    CONST          shift, and go to state 11
    DOUBLE         shift, and go to state 12
    ENUM           shift, and go to state 13
    EXPLICIT       shift, and go to state 14
    EXTERN         shift, and go to state 183
    FLOAT          shift, and go to state 17
    FRIEND         shift, and go to state 18
    INLINE         shift, and go to state 19
    INT            shift, and go to state 20
    LONG           shift, and go to state 21
    MUTABLE        shift, and go to state 22
    REGISTER       shift, and go to state 25
    SHORT          shift, and go to state 26
    SIGNED         shift, and go to state 27
    STATIC         shift, and go to state 28
    STRUCT         shift, and go to state 29
    TEMPLATE       shift, and go to state 545
    TYPEDEF        shift, and go to state 31
    TYPENAME       shift, and go to state 546
    UNION          shift, and go to state 33
    UNSIGNED       shift, and go to state 34
    VIRTUAL        shift, and go to state 36
    VOID           shift, and go to state 37
    VOLATILE       shift, and go to state 38
    WCHAR_T        shift, and go to state 39
    TEMPLATE_NAME  shift, and go to state 44

    typedef_name               go to state 45
    class_name                 go to state 46
    enum_name                  go to state 47
    template_name              go to state 48
    identifier                 go to state 154
    nested_name_specifier      go to state 155
    decl_specifier             go to state 59
    decl_specifier_seq         go to state 207
    storage_class_specifier    go to state 61
    function_specifier         go to state 62
    type_specifier             go to state 63
    simple_type_specifier      go to state 64
    type_name                  go to state 65
    elaborated_type_specifier  go to state 66
    enum_specifier             go to state 67
    cv_qualifier               go to state 81
    parameter_declaration      go to state 547
    class_specifier            go to state 84
    class_head                 go to state 85
    class_key                  go to state 86
    template_parameter         go to state 765
    type_parameter             go to state 550
    template_id                go to state 90


state 682

  424 template_declaration: EXPORT_opt TEMPLATE '<' template_parameter_list '>' . declaration

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 3
    ENUM_NAME      shift, and go to state 4
    COLONCOLON     shift, and go to state 5
    ASM            shift, and go to state 6
    AUTO           shift, and go to state 7
    BOOL           shift, and go to state 8
    CHAR           shift, and go to state 9
    CLASS          shift, and go to state 10
    CONST          shift, and go to state 11
    DOUBLE         shift, and go to state 12
    ENUM           shift, and go to state 13
    EXPLICIT       shift, and go to state 14
    EXPORT         shift, and go to state 15
    EXTERN         shift, and go to state 16
    FLOAT          shift, and go to state 17
    FRIEND         shift, and go to state 18
    INLINE         shift, and go to state 19
    INT            shift, and go to state 20
    LONG           shift, and go to state 21
    MUTABLE        shift, and go to state 22
    NAMESPACE      shift, and go to state 23
    OPERATOR       shift, and go to state 24
    REGISTER       shift, and go to state 25
    SHORT          shift, and go to state 26
    SIGNED         shift, and go to state 27
    STATIC         shift, and go to state 28
    STRUCT         shift, and go to state 29
    TEMPLATE       shift, and go to state 30
    TYPEDEF        shift, and go to state 31
    TYPENAME       shift, and go to state 32
    UNION          shift, and go to state 33
    UNSIGNED       shift, and go to state 34
    USING          shift, and go to state 35
    VIRTUAL        shift, and go to state 36
    VOID           shift, and go to state 37
    VOLATILE       shift, and go to state 38
    WCHAR_T        shift, and go to state 39
    '('            shift, and go to state 40
    '&'            shift, and go to state 41
    '*'            shift, and go to state 42
    '~'            shift, and go to state 43
    TEMPLATE_NAME  shift, and go to state 44

    TEMPLATE  [reduce using rule 497 (EXPORT_opt)]

    typedef_name                    go to state 45
    class_name                      go to state 46
    enum_name                       go to state 47
    template_name                   go to state 48
    identifier                      go to state 49
    id_expression                   go to state 51
    unqualified_id                  go to state 52
    qualified_id                    go to state 53
    nested_name_specifier           go to state 54
    declaration                     go to state 766
    block_declaration               go to state 57
    simple_declaration              go to state 58
    decl_specifier                  go to state 59
    decl_specifier_seq              go to state 60
    storage_class_specifier         go to state 61
    function_specifier              go to state 62
    type_specifier                  go to state 63
    simple_type_specifier           go to state 64
    type_name                       go to state 65
    elaborated_type_specifier       go to state 66
    enum_specifier                  go to state 67
    namespace_definition            go to state 68
    named_namespace_definition      go to state 69
    original_namespace_definition   go to state 70
    extension_namespace_definition  go to state 71
    unnamed_namespace_definition    go to state 72
    namespace_alias_definition      go to state 73
    using_declaration               go to state 74
    using_directive                 go to state 75
    asm_definition                  go to state 76
    linkage_specification           go to state 77
    declarator                      go to state 78
    direct_declarator               go to state 79
    ptr_operator                    go to state 80
    cv_qualifier                    go to state 81
    declarator_id                   go to state 82
    function_definition             go to state 83
    class_specifier                 go to state 84
    class_head                      go to state 85
    class_key                       go to state 86
    conversion_function_id          go to state 87
    operator_function_id            go to state 88
    template_declaration            go to state 89
    template_id                     go to state 90
    explicit_instantiation          go to state 91
    explicit_specialization         go to state 92
    EXPORT_opt                      go to state 94


state 683

  274 direct_declarator: CLASS_NAME COLONCOLON CLASS_NAME '(' parameter_declaration_clause ')' .

    $default  reduce using rule 274 (direct_declarator)


state 684

  273 direct_declarator: CLASS_NAME COLONCOLON declarator_id '(' parameter_declaration_clause ')' .

    $default  reduce using rule 273 (direct_declarator)


state 685

  301 direct_abstract_declarator: '(' abstract_declarator ')' .

    $default  reduce using rule 301 (direct_abstract_declarator)


state 686

  310 parameter_declaration: decl_specifier_seq declarator '=' assignment_expression .

    $default  reduce using rule 310 (parameter_declaration)


state 687

  312 parameter_declaration: decl_specifier_seq abstract_declarator_opt '=' assignment_expression .

    $default  reduce using rule 312 (parameter_declaration)


state 688

  296 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause . ')' cv_qualifier_seq exception_specification
  297                           | direct_abstract_declarator_opt '(' parameter_declaration_clause . ')' cv_qualifier_seq
  298                           | direct_abstract_declarator_opt '(' parameter_declaration_clause . ')' exception_specification
  299                           | direct_abstract_declarator_opt '(' parameter_declaration_clause . ')'

    ')'  shift, and go to state 767


state 689

  300 direct_abstract_declarator: direct_abstract_declarator_opt '[' constant_expression_opt . ']'

    ']'  shift, and go to state 768


state 690

  229 enumerator_list: enumerator_list ',' enumerator_definition .

    $default  reduce using rule 229 (enumerator_list)


state 691

  231 enumerator_definition: enumerator '=' constant_expression .

    $default  reduce using rule 231 (enumerator_definition)


state 692

  246 qualified_namespace_specifier: COLONCOLON nested_name_specifier namespace_name .

    $default  reduce using rule 246 (qualified_namespace_specifier)


state 693

  225 elaborated_type_specifier: TYPENAME COLONCOLON_opt nested_name_specifier identifier '<' template_argument_list . '>'
  437 template_argument_list: template_argument_list . ',' template_argument

    ','  shift, and go to state 473
    '>'  shift, and go to state 769


state 694

  255 using_directive: USING NAMESPACE COLONCOLON nested_name_specifier namespace_name ';' .

    $default  reduce using rule 255 (using_directive)


state 695

  250 using_declaration: USING TYPENAME COLONCOLON nested_name_specifier unqualified_id ';' .

    $default  reduce using rule 250 (using_declaration)


state 696

   83 delete_expression: COLONCOLON DELETE '[' ']' . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name              go to state 104
    template_name           go to state 48
    identifier              go to state 169
    literal                 go to state 281
    integer_literal         go to state 282
    character_literal       go to state 283
    floating_literal        go to state 284
    string_literal          go to state 285
    boolean_literal         go to state 286
    primary_expression      go to state 287
    id_expression           go to state 288
    unqualified_id          go to state 52
    qualified_id            go to state 53
    nested_name_specifier   go to state 204
    postfix_expression      go to state 290
    unary_expression        go to state 291
    unary_operator          go to state 292
    new_expression          go to state 293
    delete_expression       go to state 294
    cast_expression         go to state 770
    conversion_function_id  go to state 87
    operator_function_id    go to state 88
    template_id             go to state 90


state 697

   72 new_expression: COLONCOLON NEW new_placement_opt '(' . type_id ')' new_initializer_opt

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 97
    ENUM_NAME      shift, and go to state 4
    COLONCOLON     shift, and go to state 113
    BOOL           shift, and go to state 8
    CHAR           shift, and go to state 9
    CLASS          shift, and go to state 10
    CONST          shift, and go to state 11
    DOUBLE         shift, and go to state 12
    ENUM           shift, and go to state 13
    FLOAT          shift, and go to state 17
    INT            shift, and go to state 20
    LONG           shift, and go to state 21
    SHORT          shift, and go to state 26
    SIGNED         shift, and go to state 27
    STRUCT         shift, and go to state 29
    TYPENAME       shift, and go to state 32
    UNION          shift, and go to state 33
    UNSIGNED       shift, and go to state 34
    VOID           shift, and go to state 37
    VOLATILE       shift, and go to state 38
    WCHAR_T        shift, and go to state 39
    TEMPLATE_NAME  shift, and go to state 44

    typedef_name               go to state 45
    class_name                 go to state 46
    enum_name                  go to state 47
    template_name              go to state 48
    identifier                 go to state 154
    nested_name_specifier      go to state 155
    type_specifier             go to state 156
    simple_type_specifier      go to state 64
    type_name                  go to state 65
    elaborated_type_specifier  go to state 66
    enum_specifier             go to state 67
    cv_qualifier               go to state 81
    type_id                    go to state 771
    type_specifier_seq         go to state 310
    class_specifier            go to state 84
    class_head                 go to state 85
    class_key                  go to state 86
    template_id                go to state 90


state 698

   70 new_expression: COLONCOLON NEW new_placement_opt new_type_id . new_initializer_opt

    '('  shift, and go to state 704

    $default  reduce using rule 465 (new_initializer_opt)

    new_initializer      go to state 705
    new_initializer_opt  go to state 772


state 699

   50 postfix_expression: CONST_CAST '<' type_id '>' . '(' expression ')'

    '('  shift, and go to state 773


state 700

   82 delete_expression: DELETE '[' ']' cast_expression .

    $default  reduce using rule 82 (delete_expression)


state 701

   47 postfix_expression: DYNAMIC_CAST '<' type_id '>' . '(' expression ')'

    '('  shift, and go to state 774


state 702

   73 new_placement: '(' expression_list ')' .

    $default  reduce using rule 73 (new_placement)


state 703

   71 new_expression: NEW new_placement_opt '(' type_id . ')' new_initializer_opt

    ')'  shift, and go to state 775


state 704

   79 new_initializer: '(' . expression_list_opt ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    $default  reduce using rule 459 (expression_list_opt)

    class_name                 go to state 104
    template_name              go to state 48
    identifier                 go to state 169
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 204
    postfix_expression         go to state 290
    expression_list            go to state 600
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 478
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90
    throw_expression           go to state 313
    expression_list_opt        go to state 776


state 705

  466 new_initializer_opt: new_initializer .

    $default  reduce using rule 466 (new_initializer_opt)


state 706

   69 new_expression: NEW new_placement_opt new_type_id new_initializer_opt .

    $default  reduce using rule 69 (new_expression)


state 707

   77 direct_new_declarator: '[' . expression ']'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name                 go to state 104
    template_name              go to state 48
    identifier                 go to state 169
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 204
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 425
    expression                 go to state 777
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90
    throw_expression           go to state 313


state 708

  468 new_declarator_opt: new_declarator .

    $default  reduce using rule 468 (new_declarator_opt)


state 709

   76 new_declarator: direct_new_declarator .
   78 direct_new_declarator: direct_new_declarator . '[' constant_expression ']'

    '['  shift, and go to state 778

    $default  reduce using rule 76 (new_declarator)


state 710

   75 new_declarator: ptr_operator . new_declarator_opt

    CLASS_NAME     shift, and go to state 97
    COLONCOLON     shift, and go to state 233
    '['            shift, and go to state 707
    '&'            shift, and go to state 41
    '*'            shift, and go to state 42
    TEMPLATE_NAME  shift, and go to state 44

    '&'       [reduce using rule 467 (new_declarator_opt)]
    '*'       [reduce using rule 467 (new_declarator_opt)]
    $default  reduce using rule 467 (new_declarator_opt)

    class_name             go to state 104
    template_name          go to state 48
    nested_name_specifier  go to state 234
    new_declarator         go to state 708
    direct_new_declarator  go to state 709
    ptr_operator           go to state 710
    template_id            go to state 90
    new_declarator_opt     go to state 779


state 711

   74 new_type_id: type_specifier_seq new_declarator_opt .

    $default  reduce using rule 74 (new_type_id)


state 712

   49 postfix_expression: REINTERPRET_CAST '<' type_id '>' . '(' expression ')'

    '('  shift, and go to state 780


state 713

   62 unary_expression: SIZEOF '(' type_id ')' .

    $default  reduce using rule 62 (unary_expression)


state 714

   48 postfix_expression: STATIC_CAST '<' type_id '>' . '(' expression ')'

    '('  shift, and go to state 781


state 715

   51 postfix_expression: TYPEID '(' expression ')' .

    $default  reduce using rule 51 (postfix_expression)


state 716

   52 postfix_expression: TYPEID '(' type_id ')' .

    $default  reduce using rule 52 (postfix_expression)


state 717

  134 expression: expression ',' assignment_expression .

    $default  reduce using rule 134 (expression)


state 718

   85 cast_expression: '(' type_id ')' cast_expression .

    $default  reduce using rule 85 (cast_expression)


state 719

   43 postfix_expression: postfix_expression ARROW COLONCOLON id_expression .

    $default  reduce using rule 43 (postfix_expression)


state 720

   41 postfix_expression: postfix_expression ARROW TEMPLATE COLONCOLON . id_expression

    IDENTIFIER     shift, and go to state 1
    CLASS_NAME     shift, and go to state 97
    OPERATOR       shift, and go to state 24
    '~'            shift, and go to state 43
    TEMPLATE_NAME  shift, and go to state 44

    class_name              go to state 104
    template_name           go to state 48
    identifier              go to state 169
    id_expression           go to state 782
    unqualified_id          go to state 52
    qualified_id            go to state 53
    nested_name_specifier   go to state 204
    conversion_function_id  go to state 87
    operator_function_id    go to state 88
    template_id             go to state 90


state 721

   42 postfix_expression: postfix_expression ARROW TEMPLATE id_expression .

    $default  reduce using rule 42 (postfix_expression)


state 722

   36 postfix_expression: postfix_expression '(' expression_list_opt ')' .

    $default  reduce using rule 36 (postfix_expression)


state 723

   35 postfix_expression: postfix_expression '[' expression ']' .

    $default  reduce using rule 35 (postfix_expression)


state 724

   39 postfix_expression: postfix_expression '.' COLONCOLON id_expression .

    $default  reduce using rule 39 (postfix_expression)


state 725

   37 postfix_expression: postfix_expression '.' TEMPLATE COLONCOLON . id_expression

    IDENTIFIER     shift, and go to state 1
    CLASS_NAME     shift, and go to state 97
    OPERATOR       shift, and go to state 24
    '~'            shift, and go to state 43
    TEMPLATE_NAME  shift, and go to state 44

    class_name              go to state 104
    template_name           go to state 48
    identifier              go to state 169
    id_expression           go to state 783
    unqualified_id          go to state 52
    qualified_id            go to state 53
    nested_name_specifier   go to state 204
    conversion_function_id  go to state 87
    operator_function_id    go to state 88
    template_id             go to state 90


state 726

   38 postfix_expression: postfix_expression '.' TEMPLATE id_expression .

    $default  reduce using rule 38 (postfix_expression)


state 727

  118 conditional_expression: logical_or_expression '?' expression ':' . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name                 go to state 104
    template_name              go to state 48
    identifier                 go to state 169
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 204
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 784
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90
    throw_expression           go to state 313


state 728

   54 expression_list: expression_list ',' assignment_expression .

    $default  reduce using rule 54 (expression_list)


state 729

  324 initializer_list: initializer_list ',' . initializer_clause
  490 COMMA_opt: ',' .

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '{'               shift, and go to state 479
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    $default  reduce using rule 490 (COMMA_opt)

    class_name                 go to state 104
    template_name              go to state 48
    identifier                 go to state 169
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 204
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 480
    initializer_clause         go to state 785
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90
    throw_expression           go to state 313


state 730

  321 initializer_clause: '{' initializer_list COMMA_opt . '}'

    '}'  shift, and go to state 786


state 731

  446 handler: CATCH '(' . exception_declaration ')' compound_statement

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 97
    ENUM_NAME      shift, and go to state 4
    ELLIPSIS       shift, and go to state 787
    COLONCOLON     shift, and go to state 113
    BOOL           shift, and go to state 8
    CHAR           shift, and go to state 9
    CLASS          shift, and go to state 10
    CONST          shift, and go to state 11
    DOUBLE         shift, and go to state 12
    ENUM           shift, and go to state 13
    FLOAT          shift, and go to state 17
    INT            shift, and go to state 20
    LONG           shift, and go to state 21
    SHORT          shift, and go to state 26
    SIGNED         shift, and go to state 27
    STRUCT         shift, and go to state 29
    TYPENAME       shift, and go to state 32
    UNION          shift, and go to state 33
    UNSIGNED       shift, and go to state 34
    VOID           shift, and go to state 37
    VOLATILE       shift, and go to state 38
    WCHAR_T        shift, and go to state 39
    TEMPLATE_NAME  shift, and go to state 44

    typedef_name               go to state 45
    class_name                 go to state 46
    enum_name                  go to state 47
    template_name              go to state 48
    identifier                 go to state 154
    nested_name_specifier      go to state 155
    type_specifier             go to state 156
    simple_type_specifier      go to state 64
    type_name                  go to state 65
    elaborated_type_specifier  go to state 66
    enum_specifier             go to state 67
    cv_qualifier               go to state 81
    type_specifier_seq         go to state 788
    class_specifier            go to state 84
    class_head                 go to state 85
    class_key                  go to state 86
    template_id                go to state 90
    exception_declaration      go to state 789


state 732

  500 handler_seq_opt: handler_seq .

    $default  reduce using rule 500 (handler_seq_opt)


state 733

  445 handler_seq: handler handler_seq_opt .

    $default  reduce using rule 445 (handler_seq)


state 734

  375 mem_initializer: mem_initializer_id '(' expression_list_opt ')' .

    $default  reduce using rule 375 (mem_initializer)


state 735

  145 labeled_statement: CASE constant_expression ':' . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    TYPEDEF_NAME      shift, and go to state 2
    CLASS_NAME        shift, and go to state 97
    ENUM_NAME         shift, and go to state 4
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    ASM               shift, and go to state 6
    AUTO              shift, and go to state 7
    BOOL              shift, and go to state 8
    BREAK             shift, and go to state 489
    CASE              shift, and go to state 490
    CHAR              shift, and go to state 9
    CLASS             shift, and go to state 10
    CONST             shift, and go to state 11
    CONST_CAST        shift, and go to state 261
    CONTINUE          shift, and go to state 491
    DEFAULT           shift, and go to state 492
    DELETE            shift, and go to state 262
    DO                shift, and go to state 493
    DOUBLE            shift, and go to state 12
    DYNAMIC_CAST      shift, and go to state 263
    ENUM              shift, and go to state 13
    EXPLICIT          shift, and go to state 14
    EXTERN            shift, and go to state 183
    FALSE             shift, and go to state 264
    FLOAT             shift, and go to state 17
    FOR               shift, and go to state 494
    FRIEND            shift, and go to state 18
    GOTO              shift, and go to state 495
    IF                shift, and go to state 496
    INLINE            shift, and go to state 19
    INT               shift, and go to state 20
    LONG              shift, and go to state 21
    MUTABLE           shift, and go to state 22
    NAMESPACE         shift, and go to state 497
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REGISTER          shift, and go to state 25
    REINTERPRET_CAST  shift, and go to state 266
    RETURN            shift, and go to state 498
    SHORT             shift, and go to state 26
    SIGNED            shift, and go to state 27
    SIZEOF            shift, and go to state 267
    STATIC            shift, and go to state 28
    STATIC_CAST       shift, and go to state 268
    STRUCT            shift, and go to state 29
    SWITCH            shift, and go to state 499
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TRY               shift, and go to state 500
    TYPEDEF           shift, and go to state 31
    TYPEID            shift, and go to state 272
    TYPENAME          shift, and go to state 32
    UNION             shift, and go to state 33
    UNSIGNED          shift, and go to state 34
    USING             shift, and go to state 35
    VIRTUAL           shift, and go to state 36
    VOID              shift, and go to state 37
    VOLATILE          shift, and go to state 38
    WCHAR_T           shift, and go to state 39
    WHILE             shift, and go to state 501
    '('               shift, and go to state 273
    '{'               shift, and go to state 331
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    $default  reduce using rule 469 (expression_opt)

    typedef_name                go to state 45
    class_name                  go to state 46
    enum_name                   go to state 47
    template_name               go to state 48
    identifier                  go to state 502
    literal                     go to state 281
    integer_literal             go to state 282
    character_literal           go to state 283
    floating_literal            go to state 284
    string_literal              go to state 285
    boolean_literal             go to state 286
    primary_expression          go to state 287
    id_expression               go to state 288
    unqualified_id              go to state 52
    qualified_id                go to state 53
    nested_name_specifier       go to state 289
    postfix_expression          go to state 290
    unary_expression            go to state 291
    unary_operator              go to state 292
    new_expression              go to state 293
    delete_expression           go to state 294
    cast_expression             go to state 295
    pm_expression               go to state 296
    multiplicative_expression   go to state 297
    additive_expression         go to state 298
    shift_expression            go to state 299
    relational_expression       go to state 300
    equality_expression         go to state 301
    and_expression              go to state 302
    exclusive_or_expression     go to state 303
    inclusive_or_expression     go to state 304
    logical_and_expression      go to state 305
    logical_or_expression       go to state 306
    conditional_expression      go to state 307
    assignment_expression       go to state 425
    expression                  go to state 503
    statement                   go to state 790
    labeled_statement           go to state 505
    expression_statement        go to state 506
    compound_statement          go to state 507
    selection_statement         go to state 509
    iteration_statement         go to state 510
    jump_statement              go to state 511
    declaration_statement       go to state 512
    block_declaration           go to state 513
    simple_declaration          go to state 58
    decl_specifier              go to state 59
    decl_specifier_seq          go to state 514
    storage_class_specifier     go to state 61
    function_specifier          go to state 62
    type_specifier              go to state 63
    simple_type_specifier       go to state 64
    type_name                   go to state 65
    elaborated_type_specifier   go to state 66
    enum_specifier              go to state 67
    namespace_alias_definition  go to state 73
    using_declaration           go to state 74
    using_directive             go to state 75
    asm_definition              go to state 76
    cv_qualifier                go to state 81
    class_specifier             go to state 84
    class_head                  go to state 85
    class_key                   go to state 86
    conversion_function_id      go to state 87
    operator_function_id        go to state 88
    template_id                 go to state 90
    try_block                   go to state 515
    throw_expression            go to state 313
    expression_opt              go to state 516


state 736

  146 labeled_statement: DEFAULT ':' statement .

    $default  reduce using rule 146 (labeled_statement)


state 737

  157 iteration_statement: DO statement WHILE . '(' expression ')' ';'

    '('  shift, and go to state 791


state 738

  159 for_init_statement: expression_statement .

    $default  reduce using rule 159 (for_init_statement)


state 739

  158 iteration_statement: FOR '(' for_init_statement . condition_opt ';' expression_opt ')' statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    TYPEDEF_NAME      shift, and go to state 2
    CLASS_NAME        shift, and go to state 97
    ENUM_NAME         shift, and go to state 4
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 8
    CHAR              shift, and go to state 9
    CLASS             shift, and go to state 10
    CONST             shift, and go to state 11
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DOUBLE            shift, and go to state 12
    DYNAMIC_CAST      shift, and go to state 263
    ENUM              shift, and go to state 13
    FALSE             shift, and go to state 264
    FLOAT             shift, and go to state 17
    INT               shift, and go to state 20
    LONG              shift, and go to state 21
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SHORT             shift, and go to state 26
    SIGNED            shift, and go to state 27
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    STRUCT            shift, and go to state 29
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    TYPENAME          shift, and go to state 32
    UNION             shift, and go to state 33
    UNSIGNED          shift, and go to state 34
    VOID              shift, and go to state 37
    VOLATILE          shift, and go to state 38
    WCHAR_T           shift, and go to state 39
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    $default  reduce using rule 473 (condition_opt)

    typedef_name               go to state 45
    class_name                 go to state 46
    enum_name                  go to state 47
    template_name              go to state 48
    identifier                 go to state 49
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 289
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 425
    expression                 go to state 742
    condition                  go to state 792
    type_specifier             go to state 156
    simple_type_specifier      go to state 64
    type_name                  go to state 65
    elaborated_type_specifier  go to state 66
    enum_specifier             go to state 67
    cv_qualifier               go to state 81
    type_specifier_seq         go to state 744
    class_specifier            go to state 84
    class_head                 go to state 85
    class_key                  go to state 86
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90
    throw_expression           go to state 313
    condition_opt              go to state 793


state 740

  160 for_init_statement: simple_declaration .

    $default  reduce using rule 160 (for_init_statement)


state 741

  164 jump_statement: GOTO identifier ';' .

    $default  reduce using rule 164 (jump_statement)


state 742

  134 expression: expression . ',' assignment_expression
  154 condition: expression .

    ','  shift, and go to state 595

    $default  reduce using rule 154 (condition)


state 743

  151 selection_statement: IF '(' condition . ')' statement
  152                    | IF '(' condition . ')' statement ELSE statement

    ')'  shift, and go to state 794


state 744

  155 condition: type_specifier_seq . declarator '=' assignment_expression

    IDENTIFIER     shift, and go to state 1
    CLASS_NAME     shift, and go to state 3
    COLONCOLON     shift, and go to state 168
    OPERATOR       shift, and go to state 24
    '('            shift, and go to state 40
    '&'            shift, and go to state 41
    '*'            shift, and go to state 42
    '~'            shift, and go to state 43
    TEMPLATE_NAME  shift, and go to state 44

    class_name              go to state 104
    template_name           go to state 48
    identifier              go to state 169
    id_expression           go to state 51
    unqualified_id          go to state 52
    qualified_id            go to state 53
    nested_name_specifier   go to state 170
    declarator              go to state 795
    direct_declarator       go to state 79
    ptr_operator            go to state 80
    declarator_id           go to state 82
    conversion_function_id  go to state 87
    operator_function_id    go to state 88
    template_id             go to state 90


state 745

  163 jump_statement: RETURN expression_opt ';' .

    $default  reduce using rule 163 (jump_statement)


state 746

  153 selection_statement: SWITCH '(' condition . ')' statement

    ')'  shift, and go to state 796


state 747

  443 try_block: TRY compound_statement handler_seq .

    $default  reduce using rule 443 (try_block)


state 748

  156 iteration_statement: WHILE '(' condition . ')' statement

    ')'  shift, and go to state 797


state 749

  144 labeled_statement: identifier ':' statement .

    $default  reduce using rule 144 (labeled_statement)


state 750

  452 exception_specification: THROW '(' . type_id_list_opt ')'

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 97
    ENUM_NAME      shift, and go to state 4
    COLONCOLON     shift, and go to state 113
    BOOL           shift, and go to state 8
    CHAR           shift, and go to state 9
    CLASS          shift, and go to state 10
    CONST          shift, and go to state 11
    DOUBLE         shift, and go to state 12
    ENUM           shift, and go to state 13
    FLOAT          shift, and go to state 17
    INT            shift, and go to state 20
    LONG           shift, and go to state 21
    SHORT          shift, and go to state 26
    SIGNED         shift, and go to state 27
    STRUCT         shift, and go to state 29
    TYPENAME       shift, and go to state 32
    UNION          shift, and go to state 33
    UNSIGNED       shift, and go to state 34
    VOID           shift, and go to state 37
    VOLATILE       shift, and go to state 38
    WCHAR_T        shift, and go to state 39
    TEMPLATE_NAME  shift, and go to state 44

    $default  reduce using rule 503 (type_id_list_opt)

    typedef_name               go to state 45
    class_name                 go to state 46
    enum_name                  go to state 47
    template_name              go to state 48
    identifier                 go to state 154
    nested_name_specifier      go to state 155
    type_specifier             go to state 156
    simple_type_specifier      go to state 64
    type_name                  go to state 65
    elaborated_type_specifier  go to state 66
    enum_specifier             go to state 67
    cv_qualifier               go to state 81
    type_id                    go to state 798
    type_specifier_seq         go to state 310
    class_specifier            go to state 84
    class_head                 go to state 85
    class_key                  go to state 86
    template_id                go to state 90
    type_id_list               go to state 799
    type_id_list_opt           go to state 800


state 751

  268 direct_declarator: direct_declarator '(' parameter_declaration_clause ')' cv_qualifier_seq exception_specification .

    $default  reduce using rule 268 (direct_declarator)


state 752

  354 base_specifier: COLONCOLON nested_name_specifier class_name .

    $default  reduce using rule 354 (base_specifier)


state 753

  360 base_specifier: VIRTUAL COLONCOLON nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 97
    TEMPLATE_NAME  shift, and go to state 44

    class_name     go to state 801
    template_name  go to state 48
    template_id    go to state 90


state 754

  358 base_specifier: VIRTUAL access_specifier COLONCOLON . nested_name_specifier_opt class_name

    CLASS_NAME     shift, and go to state 97
    TEMPLATE_NAME  shift, and go to state 44

    CLASS_NAME     [reduce using rule 457 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 457 (nested_name_specifier_opt)]

    class_name                 go to state 104
    template_name              go to state 48
    nested_name_specifier      go to state 226
    template_id                go to state 90
    nested_name_specifier_opt  go to state 802


state 755

  359 base_specifier: VIRTUAL access_specifier nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 97
    TEMPLATE_NAME  shift, and go to state 44

    class_name     go to state 803
    template_name  go to state 48
    template_id    go to state 90


state 756

  361 base_specifier: VIRTUAL nested_name_specifier_opt class_name .

    $default  reduce using rule 361 (base_specifier)


state 757

  353 base_specifier_list: base_specifier_list ',' base_specifier .

    $default  reduce using rule 353 (base_specifier_list)


state 758

  364 base_specifier: access_specifier COLONCOLON nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 97
    TEMPLATE_NAME  shift, and go to state 44

    class_name     go to state 804
    template_name  go to state 48
    template_id    go to state 90


state 759

  362 base_specifier: access_specifier VIRTUAL COLONCOLON . nested_name_specifier_opt class_name

    CLASS_NAME     shift, and go to state 97
    TEMPLATE_NAME  shift, and go to state 44

    CLASS_NAME     [reduce using rule 457 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 457 (nested_name_specifier_opt)]

    class_name                 go to state 104
    template_name              go to state 48
    nested_name_specifier      go to state 226
    template_id                go to state 90
    nested_name_specifier_opt  go to state 805


state 760

  363 base_specifier: access_specifier VIRTUAL nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 97
    TEMPLATE_NAME  shift, and go to state 44

    class_name     go to state 806
    template_name  go to state 48
    template_id    go to state 90


state 761

  365 base_specifier: access_specifier nested_name_specifier_opt class_name .

    $default  reduce using rule 365 (base_specifier)


state 762

  430 type_parameter: CLASS identifier '=' . type_id

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 97
    ENUM_NAME      shift, and go to state 4
    COLONCOLON     shift, and go to state 113
    BOOL           shift, and go to state 8
    CHAR           shift, and go to state 9
    CLASS          shift, and go to state 10
    CONST          shift, and go to state 11
    DOUBLE         shift, and go to state 12
    ENUM           shift, and go to state 13
    FLOAT          shift, and go to state 17
    INT            shift, and go to state 20
    LONG           shift, and go to state 21
    SHORT          shift, and go to state 26
    SIGNED         shift, and go to state 27
    STRUCT         shift, and go to state 29
    TYPENAME       shift, and go to state 32
    UNION          shift, and go to state 33
    UNSIGNED       shift, and go to state 34
    VOID           shift, and go to state 37
    VOLATILE       shift, and go to state 38
    WCHAR_T        shift, and go to state 39
    TEMPLATE_NAME  shift, and go to state 44

    typedef_name               go to state 45
    class_name                 go to state 46
    enum_name                  go to state 47
    template_name              go to state 48
    identifier                 go to state 154
    nested_name_specifier      go to state 155
    type_specifier             go to state 156
    simple_type_specifier      go to state 64
    type_name                  go to state 65
    elaborated_type_specifier  go to state 66
    enum_specifier             go to state 67
    cv_qualifier               go to state 81
    type_id                    go to state 807
    type_specifier_seq         go to state 310
    class_specifier            go to state 84
    class_head                 go to state 85
    class_key                  go to state 86
    template_id                go to state 90


state 763

  426 template_parameter_list: template_parameter_list . ',' template_parameter
  433 type_parameter: TEMPLATE '<' template_parameter_list . '>' CLASS identifier
  434               | TEMPLATE '<' template_parameter_list . '>' CLASS identifier '=' template_name

    ','  shift, and go to state 681
    '>'  shift, and go to state 808


state 764

  432 type_parameter: TYPENAME identifier '=' . type_id

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 97
    ENUM_NAME      shift, and go to state 4
    COLONCOLON     shift, and go to state 113
    BOOL           shift, and go to state 8
    CHAR           shift, and go to state 9
    CLASS          shift, and go to state 10
    CONST          shift, and go to state 11
    DOUBLE         shift, and go to state 12
    ENUM           shift, and go to state 13
    FLOAT          shift, and go to state 17
    INT            shift, and go to state 20
    LONG           shift, and go to state 21
    SHORT          shift, and go to state 26
    SIGNED         shift, and go to state 27
    STRUCT         shift, and go to state 29
    TYPENAME       shift, and go to state 32
    UNION          shift, and go to state 33
    UNSIGNED       shift, and go to state 34
    VOID           shift, and go to state 37
    VOLATILE       shift, and go to state 38
    WCHAR_T        shift, and go to state 39
    TEMPLATE_NAME  shift, and go to state 44

    typedef_name               go to state 45
    class_name                 go to state 46
    enum_name                  go to state 47
    template_name              go to state 48
    identifier                 go to state 154
    nested_name_specifier      go to state 155
    type_specifier             go to state 156
    simple_type_specifier      go to state 64
    type_name                  go to state 65
    elaborated_type_specifier  go to state 66
    enum_specifier             go to state 67
    cv_qualifier               go to state 81
    type_id                    go to state 809
    type_specifier_seq         go to state 310
    class_specifier            go to state 84
    class_head                 go to state 85
    class_key                  go to state 86
    template_id                go to state 90


state 765

  426 template_parameter_list: template_parameter_list ',' template_parameter .

    $default  reduce using rule 426 (template_parameter_list)


state 766

  424 template_declaration: EXPORT_opt TEMPLATE '<' template_parameter_list '>' declaration .

    $default  reduce using rule 424 (template_declaration)


state 767

  296 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause ')' . cv_qualifier_seq exception_specification
  297                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')' . cv_qualifier_seq
  298                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')' . exception_specification
  299                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')' .

    CONST     shift, and go to state 11
    THROW     shift, and go to state 657
    VOLATILE  shift, and go to state 38

    $default  reduce using rule 299 (direct_abstract_declarator)

    cv_qualifier_seq         go to state 810
    cv_qualifier             go to state 173
    exception_specification  go to state 811


state 768

  300 direct_abstract_declarator: direct_abstract_declarator_opt '[' constant_expression_opt ']' .

    $default  reduce using rule 300 (direct_abstract_declarator)


state 769

  225 elaborated_type_specifier: TYPENAME COLONCOLON_opt nested_name_specifier identifier '<' template_argument_list '>' .

    $default  reduce using rule 225 (elaborated_type_specifier)


state 770

   83 delete_expression: COLONCOLON DELETE '[' ']' cast_expression .

    $default  reduce using rule 83 (delete_expression)


state 771

   72 new_expression: COLONCOLON NEW new_placement_opt '(' type_id . ')' new_initializer_opt

    ')'  shift, and go to state 812


state 772

   70 new_expression: COLONCOLON NEW new_placement_opt new_type_id new_initializer_opt .

    $default  reduce using rule 70 (new_expression)


state 773

   50 postfix_expression: CONST_CAST '<' type_id '>' '(' . expression ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name                 go to state 104
    template_name              go to state 48
    identifier                 go to state 169
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 204
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 425
    expression                 go to state 813
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90
    throw_expression           go to state 313


state 774

   47 postfix_expression: DYNAMIC_CAST '<' type_id '>' '(' . expression ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name                 go to state 104
    template_name              go to state 48
    identifier                 go to state 169
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 204
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 425
    expression                 go to state 814
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90
    throw_expression           go to state 313


state 775

   71 new_expression: NEW new_placement_opt '(' type_id ')' . new_initializer_opt

    '('  shift, and go to state 704

    $default  reduce using rule 465 (new_initializer_opt)

    new_initializer      go to state 705
    new_initializer_opt  go to state 815


state 776

   79 new_initializer: '(' expression_list_opt . ')'

    ')'  shift, and go to state 816


state 777

   77 direct_new_declarator: '[' expression . ']'
  134 expression: expression . ',' assignment_expression

    ','  shift, and go to state 595
    ']'  shift, and go to state 817


state 778

   78 direct_new_declarator: direct_new_declarator '[' . constant_expression ']'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name                 go to state 104
    template_name              go to state 48
    identifier                 go to state 169
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 204
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 336
    conditional_expression     go to state 337
    constant_expression        go to state 818
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90


state 779

   75 new_declarator: ptr_operator new_declarator_opt .

    $default  reduce using rule 75 (new_declarator)


state 780

   49 postfix_expression: REINTERPRET_CAST '<' type_id '>' '(' . expression ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name                 go to state 104
    template_name              go to state 48
    identifier                 go to state 169
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 204
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 425
    expression                 go to state 819
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90
    throw_expression           go to state 313


state 781

   48 postfix_expression: STATIC_CAST '<' type_id '>' '(' . expression ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name                 go to state 104
    template_name              go to state 48
    identifier                 go to state 169
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 204
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 425
    expression                 go to state 820
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90
    throw_expression           go to state 313


state 782

   41 postfix_expression: postfix_expression ARROW TEMPLATE COLONCOLON id_expression .

    $default  reduce using rule 41 (postfix_expression)


state 783

   37 postfix_expression: postfix_expression '.' TEMPLATE COLONCOLON id_expression .

    $default  reduce using rule 37 (postfix_expression)


state 784

  118 conditional_expression: logical_or_expression '?' expression ':' assignment_expression .

    $default  reduce using rule 118 (conditional_expression)


state 785

  324 initializer_list: initializer_list ',' initializer_clause .

    $default  reduce using rule 324 (initializer_list)


state 786

  321 initializer_clause: '{' initializer_list COMMA_opt '}' .

    $default  reduce using rule 321 (initializer_clause)


state 787

  450 exception_declaration: ELLIPSIS .

    $default  reduce using rule 450 (exception_declaration)


state 788

  447 exception_declaration: type_specifier_seq . declarator
  448                      | type_specifier_seq . abstract_declarator
  449                      | type_specifier_seq .

    IDENTIFIER     shift, and go to state 1
    CLASS_NAME     shift, and go to state 3
    COLONCOLON     shift, and go to state 168
    OPERATOR       shift, and go to state 24
    '('            shift, and go to state 366
    '&'            shift, and go to state 41
    '*'            shift, and go to state 42
    '~'            shift, and go to state 43
    TEMPLATE_NAME  shift, and go to state 44

    '('       [reduce using rule 485 (direct_abstract_declarator_opt)]
    '['       reduce using rule 485 (direct_abstract_declarator_opt)
    $default  reduce using rule 449 (exception_declaration)

    class_name                      go to state 104
    template_name                   go to state 48
    identifier                      go to state 169
    id_expression                   go to state 51
    unqualified_id                  go to state 52
    qualified_id                    go to state 53
    nested_name_specifier           go to state 170
    declarator                      go to state 821
    direct_declarator               go to state 79
    ptr_operator                    go to state 368
    declarator_id                   go to state 82
    abstract_declarator             go to state 822
    direct_abstract_declarator      go to state 370
    conversion_function_id          go to state 87
    operator_function_id            go to state 88
    template_id                     go to state 90
    direct_abstract_declarator_opt  go to state 372


state 789

  446 handler: CATCH '(' exception_declaration . ')' compound_statement

    ')'  shift, and go to state 823


state 790

  145 labeled_statement: CASE constant_expression ':' statement .

    $default  reduce using rule 145 (labeled_statement)


state 791

  157 iteration_statement: DO statement WHILE '(' . expression ')' ';'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name                 go to state 104
    template_name              go to state 48
    identifier                 go to state 169
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 204
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 425
    expression                 go to state 824
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90
    throw_expression           go to state 313


state 792

  474 condition_opt: condition .

    $default  reduce using rule 474 (condition_opt)


state 793

  158 iteration_statement: FOR '(' for_init_statement condition_opt . ';' expression_opt ')' statement

    ';'  shift, and go to state 825


state 794

  151 selection_statement: IF '(' condition ')' . statement
  152                    | IF '(' condition ')' . statement ELSE statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    TYPEDEF_NAME      shift, and go to state 2
    CLASS_NAME        shift, and go to state 97
    ENUM_NAME         shift, and go to state 4
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    ASM               shift, and go to state 6
    AUTO              shift, and go to state 7
    BOOL              shift, and go to state 8
    BREAK             shift, and go to state 489
    CASE              shift, and go to state 490
    CHAR              shift, and go to state 9
    CLASS             shift, and go to state 10
    CONST             shift, and go to state 11
    CONST_CAST        shift, and go to state 261
    CONTINUE          shift, and go to state 491
    DEFAULT           shift, and go to state 492
    DELETE            shift, and go to state 262
    DO                shift, and go to state 493
    DOUBLE            shift, and go to state 12
    DYNAMIC_CAST      shift, and go to state 263
    ENUM              shift, and go to state 13
    EXPLICIT          shift, and go to state 14
    EXTERN            shift, and go to state 183
    FALSE             shift, and go to state 264
    FLOAT             shift, and go to state 17
    FOR               shift, and go to state 494
    FRIEND            shift, and go to state 18
    GOTO              shift, and go to state 495
    IF                shift, and go to state 496
    INLINE            shift, and go to state 19
    INT               shift, and go to state 20
    LONG              shift, and go to state 21
    MUTABLE           shift, and go to state 22
    NAMESPACE         shift, and go to state 497
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REGISTER          shift, and go to state 25
    REINTERPRET_CAST  shift, and go to state 266
    RETURN            shift, and go to state 498
    SHORT             shift, and go to state 26
    SIGNED            shift, and go to state 27
    SIZEOF            shift, and go to state 267
    STATIC            shift, and go to state 28
    STATIC_CAST       shift, and go to state 268
    STRUCT            shift, and go to state 29
    SWITCH            shift, and go to state 499
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TRY               shift, and go to state 500
    TYPEDEF           shift, and go to state 31
    TYPEID            shift, and go to state 272
    TYPENAME          shift, and go to state 32
    UNION             shift, and go to state 33
    UNSIGNED          shift, and go to state 34
    USING             shift, and go to state 35
    VIRTUAL           shift, and go to state 36
    VOID              shift, and go to state 37
    VOLATILE          shift, and go to state 38
    WCHAR_T           shift, and go to state 39
    WHILE             shift, and go to state 501
    '('               shift, and go to state 273
    '{'               shift, and go to state 331
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    $default  reduce using rule 469 (expression_opt)

    typedef_name                go to state 45
    class_name                  go to state 46
    enum_name                   go to state 47
    template_name               go to state 48
    identifier                  go to state 502
    literal                     go to state 281
    integer_literal             go to state 282
    character_literal           go to state 283
    floating_literal            go to state 284
    string_literal              go to state 285
    boolean_literal             go to state 286
    primary_expression          go to state 287
    id_expression               go to state 288
    unqualified_id              go to state 52
    qualified_id                go to state 53
    nested_name_specifier       go to state 289
    postfix_expression          go to state 290
    unary_expression            go to state 291
    unary_operator              go to state 292
    new_expression              go to state 293
    delete_expression           go to state 294
    cast_expression             go to state 295
    pm_expression               go to state 296
    multiplicative_expression   go to state 297
    additive_expression         go to state 298
    shift_expression            go to state 299
    relational_expression       go to state 300
    equality_expression         go to state 301
    and_expression              go to state 302
    exclusive_or_expression     go to state 303
    inclusive_or_expression     go to state 304
    logical_and_expression      go to state 305
    logical_or_expression       go to state 306
    conditional_expression      go to state 307
    assignment_expression       go to state 425
    expression                  go to state 503
    statement                   go to state 826
    labeled_statement           go to state 505
    expression_statement        go to state 506
    compound_statement          go to state 507
    selection_statement         go to state 509
    iteration_statement         go to state 510
    jump_statement              go to state 511
    declaration_statement       go to state 512
    block_declaration           go to state 513
    simple_declaration          go to state 58
    decl_specifier              go to state 59
    decl_specifier_seq          go to state 514
    storage_class_specifier     go to state 61
    function_specifier          go to state 62
    type_specifier              go to state 63
    simple_type_specifier       go to state 64
    type_name                   go to state 65
    elaborated_type_specifier   go to state 66
    enum_specifier              go to state 67
    namespace_alias_definition  go to state 73
    using_declaration           go to state 74
    using_directive             go to state 75
    asm_definition              go to state 76
    cv_qualifier                go to state 81
    class_specifier             go to state 84
    class_head                  go to state 85
    class_key                   go to state 86
    conversion_function_id      go to state 87
    operator_function_id        go to state 88
    template_id                 go to state 90
    try_block                   go to state 515
    throw_expression            go to state 313
    expression_opt              go to state 516


state 795

  155 condition: type_specifier_seq declarator . '=' assignment_expression

    '='  shift, and go to state 827


state 796

  153 selection_statement: SWITCH '(' condition ')' . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    TYPEDEF_NAME      shift, and go to state 2
    CLASS_NAME        shift, and go to state 97
    ENUM_NAME         shift, and go to state 4
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    ASM               shift, and go to state 6
    AUTO              shift, and go to state 7
    BOOL              shift, and go to state 8
    BREAK             shift, and go to state 489
    CASE              shift, and go to state 490
    CHAR              shift, and go to state 9
    CLASS             shift, and go to state 10
    CONST             shift, and go to state 11
    CONST_CAST        shift, and go to state 261
    CONTINUE          shift, and go to state 491
    DEFAULT           shift, and go to state 492
    DELETE            shift, and go to state 262
    DO                shift, and go to state 493
    DOUBLE            shift, and go to state 12
    DYNAMIC_CAST      shift, and go to state 263
    ENUM              shift, and go to state 13
    EXPLICIT          shift, and go to state 14
    EXTERN            shift, and go to state 183
    FALSE             shift, and go to state 264
    FLOAT             shift, and go to state 17
    FOR               shift, and go to state 494
    FRIEND            shift, and go to state 18
    GOTO              shift, and go to state 495
    IF                shift, and go to state 496
    INLINE            shift, and go to state 19
    INT               shift, and go to state 20
    LONG              shift, and go to state 21
    MUTABLE           shift, and go to state 22
    NAMESPACE         shift, and go to state 497
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REGISTER          shift, and go to state 25
    REINTERPRET_CAST  shift, and go to state 266
    RETURN            shift, and go to state 498
    SHORT             shift, and go to state 26
    SIGNED            shift, and go to state 27
    SIZEOF            shift, and go to state 267
    STATIC            shift, and go to state 28
    STATIC_CAST       shift, and go to state 268
    STRUCT            shift, and go to state 29
    SWITCH            shift, and go to state 499
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TRY               shift, and go to state 500
    TYPEDEF           shift, and go to state 31
    TYPEID            shift, and go to state 272
    TYPENAME          shift, and go to state 32
    UNION             shift, and go to state 33
    UNSIGNED          shift, and go to state 34
    USING             shift, and go to state 35
    VIRTUAL           shift, and go to state 36
    VOID              shift, and go to state 37
    VOLATILE          shift, and go to state 38
    WCHAR_T           shift, and go to state 39
    WHILE             shift, and go to state 501
    '('               shift, and go to state 273
    '{'               shift, and go to state 331
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    $default  reduce using rule 469 (expression_opt)

    typedef_name                go to state 45
    class_name                  go to state 46
    enum_name                   go to state 47
    template_name               go to state 48
    identifier                  go to state 502
    literal                     go to state 281
    integer_literal             go to state 282
    character_literal           go to state 283
    floating_literal            go to state 284
    string_literal              go to state 285
    boolean_literal             go to state 286
    primary_expression          go to state 287
    id_expression               go to state 288
    unqualified_id              go to state 52
    qualified_id                go to state 53
    nested_name_specifier       go to state 289
    postfix_expression          go to state 290
    unary_expression            go to state 291
    unary_operator              go to state 292
    new_expression              go to state 293
    delete_expression           go to state 294
    cast_expression             go to state 295
    pm_expression               go to state 296
    multiplicative_expression   go to state 297
    additive_expression         go to state 298
    shift_expression            go to state 299
    relational_expression       go to state 300
    equality_expression         go to state 301
    and_expression              go to state 302
    exclusive_or_expression     go to state 303
    inclusive_or_expression     go to state 304
    logical_and_expression      go to state 305
    logical_or_expression       go to state 306
    conditional_expression      go to state 307
    assignment_expression       go to state 425
    expression                  go to state 503
    statement                   go to state 828
    labeled_statement           go to state 505
    expression_statement        go to state 506
    compound_statement          go to state 507
    selection_statement         go to state 509
    iteration_statement         go to state 510
    jump_statement              go to state 511
    declaration_statement       go to state 512
    block_declaration           go to state 513
    simple_declaration          go to state 58
    decl_specifier              go to state 59
    decl_specifier_seq          go to state 514
    storage_class_specifier     go to state 61
    function_specifier          go to state 62
    type_specifier              go to state 63
    simple_type_specifier       go to state 64
    type_name                   go to state 65
    elaborated_type_specifier   go to state 66
    enum_specifier              go to state 67
    namespace_alias_definition  go to state 73
    using_declaration           go to state 74
    using_directive             go to state 75
    asm_definition              go to state 76
    cv_qualifier                go to state 81
    class_specifier             go to state 84
    class_head                  go to state 85
    class_key                   go to state 86
    conversion_function_id      go to state 87
    operator_function_id        go to state 88
    template_id                 go to state 90
    try_block                   go to state 515
    throw_expression            go to state 313
    expression_opt              go to state 516


state 797

  156 iteration_statement: WHILE '(' condition ')' . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    TYPEDEF_NAME      shift, and go to state 2
    CLASS_NAME        shift, and go to state 97
    ENUM_NAME         shift, and go to state 4
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    ASM               shift, and go to state 6
    AUTO              shift, and go to state 7
    BOOL              shift, and go to state 8
    BREAK             shift, and go to state 489
    CASE              shift, and go to state 490
    CHAR              shift, and go to state 9
    CLASS             shift, and go to state 10
    CONST             shift, and go to state 11
    CONST_CAST        shift, and go to state 261
    CONTINUE          shift, and go to state 491
    DEFAULT           shift, and go to state 492
    DELETE            shift, and go to state 262
    DO                shift, and go to state 493
    DOUBLE            shift, and go to state 12
    DYNAMIC_CAST      shift, and go to state 263
    ENUM              shift, and go to state 13
    EXPLICIT          shift, and go to state 14
    EXTERN            shift, and go to state 183
    FALSE             shift, and go to state 264
    FLOAT             shift, and go to state 17
    FOR               shift, and go to state 494
    FRIEND            shift, and go to state 18
    GOTO              shift, and go to state 495
    IF                shift, and go to state 496
    INLINE            shift, and go to state 19
    INT               shift, and go to state 20
    LONG              shift, and go to state 21
    MUTABLE           shift, and go to state 22
    NAMESPACE         shift, and go to state 497
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REGISTER          shift, and go to state 25
    REINTERPRET_CAST  shift, and go to state 266
    RETURN            shift, and go to state 498
    SHORT             shift, and go to state 26
    SIGNED            shift, and go to state 27
    SIZEOF            shift, and go to state 267
    STATIC            shift, and go to state 28
    STATIC_CAST       shift, and go to state 268
    STRUCT            shift, and go to state 29
    SWITCH            shift, and go to state 499
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TRY               shift, and go to state 500
    TYPEDEF           shift, and go to state 31
    TYPEID            shift, and go to state 272
    TYPENAME          shift, and go to state 32
    UNION             shift, and go to state 33
    UNSIGNED          shift, and go to state 34
    USING             shift, and go to state 35
    VIRTUAL           shift, and go to state 36
    VOID              shift, and go to state 37
    VOLATILE          shift, and go to state 38
    WCHAR_T           shift, and go to state 39
    WHILE             shift, and go to state 501
    '('               shift, and go to state 273
    '{'               shift, and go to state 331
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    $default  reduce using rule 469 (expression_opt)

    typedef_name                go to state 45
    class_name                  go to state 46
    enum_name                   go to state 47
    template_name               go to state 48
    identifier                  go to state 502
    literal                     go to state 281
    integer_literal             go to state 282
    character_literal           go to state 283
    floating_literal            go to state 284
    string_literal              go to state 285
    boolean_literal             go to state 286
    primary_expression          go to state 287
    id_expression               go to state 288
    unqualified_id              go to state 52
    qualified_id                go to state 53
    nested_name_specifier       go to state 289
    postfix_expression          go to state 290
    unary_expression            go to state 291
    unary_operator              go to state 292
    new_expression              go to state 293
    delete_expression           go to state 294
    cast_expression             go to state 295
    pm_expression               go to state 296
    multiplicative_expression   go to state 297
    additive_expression         go to state 298
    shift_expression            go to state 299
    relational_expression       go to state 300
    equality_expression         go to state 301
    and_expression              go to state 302
    exclusive_or_expression     go to state 303
    inclusive_or_expression     go to state 304
    logical_and_expression      go to state 305
    logical_or_expression       go to state 306
    conditional_expression      go to state 307
    assignment_expression       go to state 425
    expression                  go to state 503
    statement                   go to state 829
    labeled_statement           go to state 505
    expression_statement        go to state 506
    compound_statement          go to state 507
    selection_statement         go to state 509
    iteration_statement         go to state 510
    jump_statement              go to state 511
    declaration_statement       go to state 512
    block_declaration           go to state 513
    simple_declaration          go to state 58
    decl_specifier              go to state 59
    decl_specifier_seq          go to state 514
    storage_class_specifier     go to state 61
    function_specifier          go to state 62
    type_specifier              go to state 63
    simple_type_specifier       go to state 64
    type_name                   go to state 65
    elaborated_type_specifier   go to state 66
    enum_specifier              go to state 67
    namespace_alias_definition  go to state 73
    using_declaration           go to state 74
    using_directive             go to state 75
    asm_definition              go to state 76
    cv_qualifier                go to state 81
    class_specifier             go to state 84
    class_head                  go to state 85
    class_key                   go to state 86
    conversion_function_id      go to state 87
    operator_function_id        go to state 88
    template_id                 go to state 90
    try_block                   go to state 515
    throw_expression            go to state 313
    expression_opt              go to state 516


state 798

  453 type_id_list: type_id .

    $default  reduce using rule 453 (type_id_list)


state 799

  454 type_id_list: type_id_list . ',' type_id
  504 type_id_list_opt: type_id_list .

    ','  shift, and go to state 830

    $default  reduce using rule 504 (type_id_list_opt)


state 800

  452 exception_specification: THROW '(' type_id_list_opt . ')'

    ')'  shift, and go to state 831


state 801

  360 base_specifier: VIRTUAL COLONCOLON nested_name_specifier_opt class_name .

    $default  reduce using rule 360 (base_specifier)


state 802

  358 base_specifier: VIRTUAL access_specifier COLONCOLON nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 97
    TEMPLATE_NAME  shift, and go to state 44

    class_name     go to state 832
    template_name  go to state 48
    template_id    go to state 90


state 803

  359 base_specifier: VIRTUAL access_specifier nested_name_specifier_opt class_name .

    $default  reduce using rule 359 (base_specifier)


state 804

  364 base_specifier: access_specifier COLONCOLON nested_name_specifier_opt class_name .

    $default  reduce using rule 364 (base_specifier)


state 805

  362 base_specifier: access_specifier VIRTUAL COLONCOLON nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 97
    TEMPLATE_NAME  shift, and go to state 44

    class_name     go to state 833
    template_name  go to state 48
    template_id    go to state 90


state 806

  363 base_specifier: access_specifier VIRTUAL nested_name_specifier_opt class_name .

    $default  reduce using rule 363 (base_specifier)


state 807

  430 type_parameter: CLASS identifier '=' type_id .

    $default  reduce using rule 430 (type_parameter)


state 808

  433 type_parameter: TEMPLATE '<' template_parameter_list '>' . CLASS identifier
  434               | TEMPLATE '<' template_parameter_list '>' . CLASS identifier '=' template_name

    CLASS  shift, and go to state 834


state 809

  432 type_parameter: TYPENAME identifier '=' type_id .

    $default  reduce using rule 432 (type_parameter)


state 810

  296 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause ')' cv_qualifier_seq . exception_specification
  297                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')' cv_qualifier_seq .

    THROW  shift, and go to state 657

    $default  reduce using rule 297 (direct_abstract_declarator)

    exception_specification  go to state 835


state 811

  298 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause ')' exception_specification .

    $default  reduce using rule 298 (direct_abstract_declarator)


state 812

   72 new_expression: COLONCOLON NEW new_placement_opt '(' type_id ')' . new_initializer_opt

    '('  shift, and go to state 704

    $default  reduce using rule 465 (new_initializer_opt)

    new_initializer      go to state 705
    new_initializer_opt  go to state 836


state 813

   50 postfix_expression: CONST_CAST '<' type_id '>' '(' expression . ')'
  134 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 837
    ','  shift, and go to state 595


state 814

   47 postfix_expression: DYNAMIC_CAST '<' type_id '>' '(' expression . ')'
  134 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 838
    ','  shift, and go to state 595


state 815

   71 new_expression: NEW new_placement_opt '(' type_id ')' new_initializer_opt .

    $default  reduce using rule 71 (new_expression)


state 816

   79 new_initializer: '(' expression_list_opt ')' .

    $default  reduce using rule 79 (new_initializer)


state 817

   77 direct_new_declarator: '[' expression ']' .

    $default  reduce using rule 77 (direct_new_declarator)


state 818

   78 direct_new_declarator: direct_new_declarator '[' constant_expression . ']'

    ']'  shift, and go to state 839


state 819

   49 postfix_expression: REINTERPRET_CAST '<' type_id '>' '(' expression . ')'
  134 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 840
    ','  shift, and go to state 595


state 820

   48 postfix_expression: STATIC_CAST '<' type_id '>' '(' expression . ')'
  134 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 841
    ','  shift, and go to state 595


state 821

  447 exception_declaration: type_specifier_seq declarator .

    $default  reduce using rule 447 (exception_declaration)


state 822

  448 exception_declaration: type_specifier_seq abstract_declarator .

    $default  reduce using rule 448 (exception_declaration)


state 823

  446 handler: CATCH '(' exception_declaration ')' . compound_statement

    '{'  shift, and go to state 331

    compound_statement  go to state 842


state 824

  134 expression: expression . ',' assignment_expression
  157 iteration_statement: DO statement WHILE '(' expression . ')' ';'

    ')'  shift, and go to state 843
    ','  shift, and go to state 595


state 825

  158 iteration_statement: FOR '(' for_init_statement condition_opt ';' . expression_opt ')' statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    $default  reduce using rule 469 (expression_opt)

    class_name                 go to state 104
    template_name              go to state 48
    identifier                 go to state 169
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 204
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 425
    expression                 go to state 503
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90
    throw_expression           go to state 313
    expression_opt             go to state 844


state 826

  151 selection_statement: IF '(' condition ')' statement .
  152                    | IF '(' condition ')' statement . ELSE statement

    ELSE  shift, and go to state 845

    ELSE      [reduce using rule 151 (selection_statement)]
    $default  reduce using rule 151 (selection_statement)


state 827

  155 condition: type_specifier_seq declarator '=' . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    CLASS_NAME        shift, and go to state 97
    COLONCOLON        shift, and go to state 335
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    class_name                 go to state 104
    template_name              go to state 48
    identifier                 go to state 169
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 52
    qualified_id               go to state 53
    nested_name_specifier      go to state 204
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 846
    conversion_function_id     go to state 87
    operator_function_id       go to state 88
    template_id                go to state 90
    throw_expression           go to state 313


state 828

  153 selection_statement: SWITCH '(' condition ')' statement .

    $default  reduce using rule 153 (selection_statement)


state 829

  156 iteration_statement: WHILE '(' condition ')' statement .

    $default  reduce using rule 156 (iteration_statement)


state 830

  454 type_id_list: type_id_list ',' . type_id

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 97
    ENUM_NAME      shift, and go to state 4
    COLONCOLON     shift, and go to state 113
    BOOL           shift, and go to state 8
    CHAR           shift, and go to state 9
    CLASS          shift, and go to state 10
    CONST          shift, and go to state 11
    DOUBLE         shift, and go to state 12
    ENUM           shift, and go to state 13
    FLOAT          shift, and go to state 17
    INT            shift, and go to state 20
    LONG           shift, and go to state 21
    SHORT          shift, and go to state 26
    SIGNED         shift, and go to state 27
    STRUCT         shift, and go to state 29
    TYPENAME       shift, and go to state 32
    UNION          shift, and go to state 33
    UNSIGNED       shift, and go to state 34
    VOID           shift, and go to state 37
    VOLATILE       shift, and go to state 38
    WCHAR_T        shift, and go to state 39
    TEMPLATE_NAME  shift, and go to state 44

    typedef_name               go to state 45
    class_name                 go to state 46
    enum_name                  go to state 47
    template_name              go to state 48
    identifier                 go to state 154
    nested_name_specifier      go to state 155
    type_specifier             go to state 156
    simple_type_specifier      go to state 64
    type_name                  go to state 65
    elaborated_type_specifier  go to state 66
    enum_specifier             go to state 67
    cv_qualifier               go to state 81
    type_id                    go to state 847
    type_specifier_seq         go to state 310
    class_specifier            go to state 84
    class_head                 go to state 85
    class_key                  go to state 86
    template_id                go to state 90


state 831

  452 exception_specification: THROW '(' type_id_list_opt ')' .

    $default  reduce using rule 452 (exception_specification)


state 832

  358 base_specifier: VIRTUAL access_specifier COLONCOLON nested_name_specifier_opt class_name .

    $default  reduce using rule 358 (base_specifier)


state 833

  362 base_specifier: access_specifier VIRTUAL COLONCOLON nested_name_specifier_opt class_name .

    $default  reduce using rule 362 (base_specifier)


state 834

  433 type_parameter: TEMPLATE '<' template_parameter_list '>' CLASS . identifier
  434               | TEMPLATE '<' template_parameter_list '>' CLASS . identifier '=' template_name

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 848


state 835

  296 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause ')' cv_qualifier_seq exception_specification .

    $default  reduce using rule 296 (direct_abstract_declarator)


state 836

   72 new_expression: COLONCOLON NEW new_placement_opt '(' type_id ')' new_initializer_opt .

    $default  reduce using rule 72 (new_expression)


state 837

   50 postfix_expression: CONST_CAST '<' type_id '>' '(' expression ')' .

    $default  reduce using rule 50 (postfix_expression)


state 838

   47 postfix_expression: DYNAMIC_CAST '<' type_id '>' '(' expression ')' .

    $default  reduce using rule 47 (postfix_expression)


state 839

   78 direct_new_declarator: direct_new_declarator '[' constant_expression ']' .

    $default  reduce using rule 78 (direct_new_declarator)


state 840

   49 postfix_expression: REINTERPRET_CAST '<' type_id '>' '(' expression ')' .

    $default  reduce using rule 49 (postfix_expression)


state 841

   48 postfix_expression: STATIC_CAST '<' type_id '>' '(' expression ')' .

    $default  reduce using rule 48 (postfix_expression)


state 842

  446 handler: CATCH '(' exception_declaration ')' compound_statement .

    $default  reduce using rule 446 (handler)


state 843

  157 iteration_statement: DO statement WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 849


state 844

  158 iteration_statement: FOR '(' for_init_statement condition_opt ';' expression_opt . ')' statement

    ')'  shift, and go to state 850


state 845

  152 selection_statement: IF '(' condition ')' statement ELSE . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    TYPEDEF_NAME      shift, and go to state 2
    CLASS_NAME        shift, and go to state 97
    ENUM_NAME         shift, and go to state 4
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    ASM               shift, and go to state 6
    AUTO              shift, and go to state 7
    BOOL              shift, and go to state 8
    BREAK             shift, and go to state 489
    CASE              shift, and go to state 490
    CHAR              shift, and go to state 9
    CLASS             shift, and go to state 10
    CONST             shift, and go to state 11
    CONST_CAST        shift, and go to state 261
    CONTINUE          shift, and go to state 491
    DEFAULT           shift, and go to state 492
    DELETE            shift, and go to state 262
    DO                shift, and go to state 493
    DOUBLE            shift, and go to state 12
    DYNAMIC_CAST      shift, and go to state 263
    ENUM              shift, and go to state 13
    EXPLICIT          shift, and go to state 14
    EXTERN            shift, and go to state 183
    FALSE             shift, and go to state 264
    FLOAT             shift, and go to state 17
    FOR               shift, and go to state 494
    FRIEND            shift, and go to state 18
    GOTO              shift, and go to state 495
    IF                shift, and go to state 496
    INLINE            shift, and go to state 19
    INT               shift, and go to state 20
    LONG              shift, and go to state 21
    MUTABLE           shift, and go to state 22
    NAMESPACE         shift, and go to state 497
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REGISTER          shift, and go to state 25
    REINTERPRET_CAST  shift, and go to state 266
    RETURN            shift, and go to state 498
    SHORT             shift, and go to state 26
    SIGNED            shift, and go to state 27
    SIZEOF            shift, and go to state 267
    STATIC            shift, and go to state 28
    STATIC_CAST       shift, and go to state 268
    STRUCT            shift, and go to state 29
    SWITCH            shift, and go to state 499
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TRY               shift, and go to state 500
    TYPEDEF           shift, and go to state 31
    TYPEID            shift, and go to state 272
    TYPENAME          shift, and go to state 32
    UNION             shift, and go to state 33
    UNSIGNED          shift, and go to state 34
    USING             shift, and go to state 35
    VIRTUAL           shift, and go to state 36
    VOID              shift, and go to state 37
    VOLATILE          shift, and go to state 38
    WCHAR_T           shift, and go to state 39
    WHILE             shift, and go to state 501
    '('               shift, and go to state 273
    '{'               shift, and go to state 331
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    $default  reduce using rule 469 (expression_opt)

    typedef_name                go to state 45
    class_name                  go to state 46
    enum_name                   go to state 47
    template_name               go to state 48
    identifier                  go to state 502
    literal                     go to state 281
    integer_literal             go to state 282
    character_literal           go to state 283
    floating_literal            go to state 284
    string_literal              go to state 285
    boolean_literal             go to state 286
    primary_expression          go to state 287
    id_expression               go to state 288
    unqualified_id              go to state 52
    qualified_id                go to state 53
    nested_name_specifier       go to state 289
    postfix_expression          go to state 290
    unary_expression            go to state 291
    unary_operator              go to state 292
    new_expression              go to state 293
    delete_expression           go to state 294
    cast_expression             go to state 295
    pm_expression               go to state 296
    multiplicative_expression   go to state 297
    additive_expression         go to state 298
    shift_expression            go to state 299
    relational_expression       go to state 300
    equality_expression         go to state 301
    and_expression              go to state 302
    exclusive_or_expression     go to state 303
    inclusive_or_expression     go to state 304
    logical_and_expression      go to state 305
    logical_or_expression       go to state 306
    conditional_expression      go to state 307
    assignment_expression       go to state 425
    expression                  go to state 503
    statement                   go to state 851
    labeled_statement           go to state 505
    expression_statement        go to state 506
    compound_statement          go to state 507
    selection_statement         go to state 509
    iteration_statement         go to state 510
    jump_statement              go to state 511
    declaration_statement       go to state 512
    block_declaration           go to state 513
    simple_declaration          go to state 58
    decl_specifier              go to state 59
    decl_specifier_seq          go to state 514
    storage_class_specifier     go to state 61
    function_specifier          go to state 62
    type_specifier              go to state 63
    simple_type_specifier       go to state 64
    type_name                   go to state 65
    elaborated_type_specifier   go to state 66
    enum_specifier              go to state 67
    namespace_alias_definition  go to state 73
    using_declaration           go to state 74
    using_directive             go to state 75
    asm_definition              go to state 76
    cv_qualifier                go to state 81
    class_specifier             go to state 84
    class_head                  go to state 85
    class_key                   go to state 86
    conversion_function_id      go to state 87
    operator_function_id        go to state 88
    template_id                 go to state 90
    try_block                   go to state 515
    throw_expression            go to state 313
    expression_opt              go to state 516


state 846

  155 condition: type_specifier_seq declarator '=' assignment_expression .

    $default  reduce using rule 155 (condition)


state 847

  454 type_id_list: type_id_list ',' type_id .

    $default  reduce using rule 454 (type_id_list)


state 848

  433 type_parameter: TEMPLATE '<' template_parameter_list '>' CLASS identifier .
  434               | TEMPLATE '<' template_parameter_list '>' CLASS identifier . '=' template_name

    '='  shift, and go to state 852

    $default  reduce using rule 433 (type_parameter)


state 849

  157 iteration_statement: DO statement WHILE '(' expression ')' ';' .

    $default  reduce using rule 157 (iteration_statement)


state 850

  158 iteration_statement: FOR '(' for_init_statement condition_opt ';' expression_opt ')' . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 107
    TYPEDEF_NAME      shift, and go to state 2
    CLASS_NAME        shift, and go to state 97
    ENUM_NAME         shift, and go to state 4
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    ASM               shift, and go to state 6
    AUTO              shift, and go to state 7
    BOOL              shift, and go to state 8
    BREAK             shift, and go to state 489
    CASE              shift, and go to state 490
    CHAR              shift, and go to state 9
    CLASS             shift, and go to state 10
    CONST             shift, and go to state 11
    CONST_CAST        shift, and go to state 261
    CONTINUE          shift, and go to state 491
    DEFAULT           shift, and go to state 492
    DELETE            shift, and go to state 262
    DO                shift, and go to state 493
    DOUBLE            shift, and go to state 12
    DYNAMIC_CAST      shift, and go to state 263
    ENUM              shift, and go to state 13
    EXPLICIT          shift, and go to state 14
    EXTERN            shift, and go to state 183
    FALSE             shift, and go to state 264
    FLOAT             shift, and go to state 17
    FOR               shift, and go to state 494
    FRIEND            shift, and go to state 18
    GOTO              shift, and go to state 495
    IF                shift, and go to state 496
    INLINE            shift, and go to state 19
    INT               shift, and go to state 20
    LONG              shift, and go to state 21
    MUTABLE           shift, and go to state 22
    NAMESPACE         shift, and go to state 497
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REGISTER          shift, and go to state 25
    REINTERPRET_CAST  shift, and go to state 266
    RETURN            shift, and go to state 498
    SHORT             shift, and go to state 26
    SIGNED            shift, and go to state 27
    SIZEOF            shift, and go to state 267
    STATIC            shift, and go to state 28
    STATIC_CAST       shift, and go to state 268
    STRUCT            shift, and go to state 29
    SWITCH            shift, and go to state 499
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TRY               shift, and go to state 500
    TYPEDEF           shift, and go to state 31
    TYPEID            shift, and go to state 272
    TYPENAME          shift, and go to state 32
    UNION             shift, and go to state 33
    UNSIGNED          shift, and go to state 34
    USING             shift, and go to state 35
    VIRTUAL           shift, and go to state 36
    VOID              shift, and go to state 37
    VOLATILE          shift, and go to state 38
    WCHAR_T           shift, and go to state 39
    WHILE             shift, and go to state 501
    '('               shift, and go to state 273
    '{'               shift, and go to state 331
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    TEMPLATE_NAME     shift, and go to state 44

    $default  reduce using rule 469 (expression_opt)

    typedef_name                go to state 45
    class_name                  go to state 46
    enum_name                   go to state 47
    template_name               go to state 48
    identifier                  go to state 502
    literal                     go to state 281
    integer_literal             go to state 282
    character_literal           go to state 283
    floating_literal            go to state 284
    string_literal              go to state 285
    boolean_literal             go to state 286
    primary_expression          go to state 287
    id_expression               go to state 288
    unqualified_id              go to state 52
    qualified_id                go to state 53
    nested_name_specifier       go to state 289
    postfix_expression          go to state 290
    unary_expression            go to state 291
    unary_operator              go to state 292
    new_expression              go to state 293
    delete_expression           go to state 294
    cast_expression             go to state 295
    pm_expression               go to state 296
    multiplicative_expression   go to state 297
    additive_expression         go to state 298
    shift_expression            go to state 299
    relational_expression       go to state 300
    equality_expression         go to state 301
    and_expression              go to state 302
    exclusive_or_expression     go to state 303
    inclusive_or_expression     go to state 304
    logical_and_expression      go to state 305
    logical_or_expression       go to state 306
    conditional_expression      go to state 307
    assignment_expression       go to state 425
    expression                  go to state 503
    statement                   go to state 853
    labeled_statement           go to state 505
    expression_statement        go to state 506
    compound_statement          go to state 507
    selection_statement         go to state 509
    iteration_statement         go to state 510
    jump_statement              go to state 511
    declaration_statement       go to state 512
    block_declaration           go to state 513
    simple_declaration          go to state 58
    decl_specifier              go to state 59
    decl_specifier_seq          go to state 514
    storage_class_specifier     go to state 61
    function_specifier          go to state 62
    type_specifier              go to state 63
    simple_type_specifier       go to state 64
    type_name                   go to state 65
    elaborated_type_specifier   go to state 66
    enum_specifier              go to state 67
    namespace_alias_definition  go to state 73
    using_declaration           go to state 74
    using_directive             go to state 75
    asm_definition              go to state 76
    cv_qualifier                go to state 81
    class_specifier             go to state 84
    class_head                  go to state 85
    class_key                   go to state 86
    conversion_function_id      go to state 87
    operator_function_id        go to state 88
    template_id                 go to state 90
    try_block                   go to state 515
    throw_expression            go to state 313
    expression_opt              go to state 516


state 851

  152 selection_statement: IF '(' condition ')' statement ELSE statement .

    $default  reduce using rule 152 (selection_statement)


state 852

  434 type_parameter: TEMPLATE '<' template_parameter_list '>' CLASS identifier '=' . template_name

    TEMPLATE_NAME  shift, and go to state 44

    template_name  go to state 854


state 853

  158 iteration_statement: FOR '(' for_init_statement condition_opt ';' expression_opt ')' statement .

    $default  reduce using rule 158 (iteration_statement)


state 854

  434 type_parameter: TEMPLATE '<' template_parameter_list '>' CLASS identifier '=' template_name .

    $default  reduce using rule 434 (type_parameter)
