Rules useless in parser due to conflicts

  495 EXPORT_opt: %empty


State 0 conflicts: 1 shift/reduce
State 3 conflicts: 2 shift/reduce
State 5 conflicts: 4 shift/reduce
State 30 conflicts: 1 shift/reduce
State 49 conflicts: 1 shift/reduce
State 58 conflicts: 1 shift/reduce
State 82 conflicts: 1 shift/reduce
State 102 conflicts: 4 shift/reduce
State 111 conflicts: 1 shift/reduce
State 112 conflicts: 1 shift/reduce
State 115 conflicts: 2 shift/reduce
State 138 conflicts: 1 shift/reduce
State 139 conflicts: 1 shift/reduce
State 157 conflicts: 4 shift/reduce
State 158 conflicts: 2 shift/reduce
State 176 conflicts: 3 shift/reduce
State 199 conflicts: 1 shift/reduce
State 209 conflicts: 1 shift/reduce
State 221 conflicts: 1 shift/reduce
State 225 conflicts: 1 shift/reduce
State 226 conflicts: 1 shift/reduce
State 237 conflicts: 2 shift/reduce
State 240 conflicts: 1 shift/reduce
State 258 conflicts: 2 shift/reduce
State 265 conflicts: 1 shift/reduce
State 279 conflicts: 2 shift/reduce
State 300 conflicts: 1 shift/reduce
State 310 conflicts: 1 shift/reduce
State 346 conflicts: 1 shift/reduce
State 347 conflicts: 1 shift/reduce
State 348 conflicts: 1 shift/reduce
State 351 conflicts: 1 shift/reduce
State 353 conflicts: 1 shift/reduce
State 367 conflicts: 1 shift/reduce
State 369 conflicts: 1 shift/reduce
State 398 conflicts: 1 shift/reduce
State 409 conflicts: 1 shift/reduce
State 471 conflicts: 1 shift/reduce
State 472 conflicts: 1 shift/reduce
State 534 conflicts: 1 shift/reduce
State 538 conflicts: 2 shift/reduce
State 543 conflicts: 2 shift/reduce
State 545 conflicts: 1 shift/reduce
State 589 conflicts: 2 shift/reduce
State 620 conflicts: 1 shift/reduce
State 621 conflicts: 1 shift/reduce
State 670 conflicts: 2 shift/reduce
State 671 conflicts: 2 shift/reduce
State 675 conflicts: 2 shift/reduce
State 676 conflicts: 2 shift/reduce
State 682 conflicts: 1 shift/reduce
State 710 conflicts: 2 shift/reduce
State 754 conflicts: 2 shift/reduce
State 759 conflicts: 2 shift/reduce
State 788 conflicts: 1 shift/reduce
State 826 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 typedef_name: TYPEDEF_NAME

    2 namespace_name: original_namespace_name

    3 original_namespace_name: NAMESPACE_NAME

    4 class_name: CLASS_NAME
    5           | template_id

    6 enum_name: ENUM_NAME

    7 template_name: TEMPLATE_NAME

    8 identifier: IDENTIFIER

    9 literal: integer_literal
   10        | character_literal
   11        | floating_literal
   12        | string_literal
   13        | boolean_literal

   14 integer_literal: INTEGER

   15 character_literal: CHARACTER

   16 floating_literal: FLOATING

   17 string_literal: STRING

   18 boolean_literal: TRUE
   19                | FALSE

   20 translation_unit: declaration_seq_opt

   21 primary_expression: literal
   22                   | THIS
   23                   | '(' expression ')'
   24                   | id_expression

   25 id_expression: unqualified_id
   26              | qualified_id

   27 unqualified_id: identifier
   28               | operator_function_id
   29               | conversion_function_id
   30               | '~' class_name

   31 qualified_id: nested_name_specifier unqualified_id
   32             | nested_name_specifier TEMPLATE unqualified_id

   33 nested_name_specifier: class_name COLONCOLON nested_name_specifier
   34                      | namespace_name COLONCOLON nested_name_specifier
   35                      | class_name COLONCOLON

   36 postfix_expression: primary_expression
   37                   | postfix_expression '[' expression ']'
   38                   | postfix_expression '(' expression_list_opt ')'
   39                   | postfix_expression '.' TEMPLATE COLONCOLON id_expression
   40                   | postfix_expression '.' TEMPLATE id_expression
   41                   | postfix_expression '.' COLONCOLON id_expression
   42                   | postfix_expression '.' id_expression
   43                   | postfix_expression ARROW TEMPLATE COLONCOLON id_expression
   44                   | postfix_expression ARROW TEMPLATE id_expression
   45                   | postfix_expression ARROW COLONCOLON id_expression
   46                   | postfix_expression ARROW id_expression
   47                   | postfix_expression PLUSPLUS
   48                   | postfix_expression MINUSMINUS
   49                   | DYNAMIC_CAST '<' type_id '>' '(' expression ')'
   50                   | STATIC_CAST '<' type_id '>' '(' expression ')'
   51                   | REINTERPRET_CAST '<' type_id '>' '(' expression ')'
   52                   | CONST_CAST '<' type_id '>' '(' expression ')'
   53                   | TYPEID '(' expression ')'
   54                   | TYPEID '(' type_id ')'

   55 expression_list: assignment_expression
   56                | expression_list ',' assignment_expression

   57 unary_expression: postfix_expression
   58                 | PLUSPLUS cast_expression
   59                 | MINUSMINUS cast_expression
   60                 | '*' cast_expression
   61                 | '&' cast_expression
   62                 | unary_operator cast_expression
   63                 | SIZEOF unary_expression
   64                 | SIZEOF '(' type_id ')'
   65                 | new_expression
   66                 | delete_expression

   67 unary_operator: '+'
   68               | '-'
   69               | '!'
   70               | '~'

   71 new_expression: NEW new_placement_opt new_type_id new_initializer_opt
   72               | COLONCOLON NEW new_placement_opt new_type_id new_initializer_opt
   73               | NEW new_placement_opt '(' type_id ')' new_initializer_opt
   74               | COLONCOLON NEW new_placement_opt '(' type_id ')' new_initializer_opt

   75 new_placement: '(' expression_list ')'

   76 new_type_id: type_specifier_seq new_declarator_opt

   77 new_declarator: ptr_operator new_declarator_opt
   78               | direct_new_declarator

   79 direct_new_declarator: '[' expression ']'
   80                      | direct_new_declarator '[' constant_expression ']'

   81 new_initializer: '(' expression_list_opt ')'

   82 delete_expression: DELETE cast_expression
   83                  | COLONCOLON DELETE cast_expression
   84                  | DELETE '[' ']' cast_expression
   85                  | COLONCOLON DELETE '[' ']' cast_expression

   86 cast_expression: unary_expression
   87                | '(' type_id ')' cast_expression

   88 pm_expression: cast_expression
   89              | pm_expression DOTSTAR cast_expression
   90              | pm_expression ARROWSTAR cast_expression

   91 multiplicative_expression: pm_expression
   92                          | multiplicative_expression '*' pm_expression
   93                          | multiplicative_expression '/' pm_expression
   94                          | multiplicative_expression '%' pm_expression

   95 additive_expression: multiplicative_expression
   96                    | additive_expression '+' multiplicative_expression
   97                    | additive_expression '-' multiplicative_expression

   98 shift_expression: additive_expression
   99                 | shift_expression SL additive_expression
  100                 | shift_expression SR additive_expression

  101 relational_expression: shift_expression
  102                      | relational_expression '<' shift_expression
  103                      | relational_expression '>' shift_expression
  104                      | relational_expression LTEQ shift_expression
  105                      | relational_expression GTEQ shift_expression

  106 equality_expression: relational_expression
  107                    | equality_expression EQ relational_expression
  108                    | equality_expression NOTEQ relational_expression

  109 and_expression: equality_expression
  110               | and_expression '&' equality_expression

  111 exclusive_or_expression: and_expression
  112                        | exclusive_or_expression '^' and_expression

  113 inclusive_or_expression: exclusive_or_expression
  114                        | inclusive_or_expression '|' exclusive_or_expression

  115 logical_and_expression: inclusive_or_expression
  116                       | logical_and_expression ANDAND inclusive_or_expression

  117 logical_or_expression: logical_and_expression
  118                      | logical_or_expression OROR logical_and_expression

  119 conditional_expression: logical_or_expression
  120                       | logical_or_expression '?' expression ':' assignment_expression

  121 assignment_expression: conditional_expression
  122                      | logical_or_expression assignment_operator assignment_expression
  123                      | throw_expression

  124 assignment_operator: '='
  125                    | MULEQ
  126                    | DIVEQ
  127                    | MODEQ
  128                    | ADDEQ
  129                    | SUBEQ
  130                    | SREQ
  131                    | SLEQ
  132                    | ANDEQ
  133                    | XOREQ
  134                    | OREQ

  135 expression: assignment_expression
  136           | expression ',' assignment_expression

  137 constant_expression: conditional_expression

  138 statement: labeled_statement
  139          | expression_statement
  140          | compound_statement
  141          | selection_statement
  142          | iteration_statement
  143          | jump_statement
  144          | declaration_statement
  145          | try_block

  146 labeled_statement: identifier ':' statement
  147                  | CASE constant_expression ':' statement
  148                  | DEFAULT ':' statement

  149 expression_statement: expression_opt ';'

  150 compound_statement: '{' statement_seq_opt '}'

  151 statement_seq: statement
  152              | statement_seq statement

  153 selection_statement: IF '(' condition ')' statement
  154                    | IF '(' condition ')' statement ELSE statement
  155                    | SWITCH '(' condition ')' statement

  156 condition: expression
  157          | type_specifier_seq declarator '=' assignment_expression

  158 iteration_statement: WHILE '(' condition ')' statement
  159                    | DO statement WHILE '(' expression ')' ';'
  160                    | FOR '(' for_init_statement condition_opt ';' expression_opt ')' statement

  161 for_init_statement: expression_statement
  162                   | simple_declaration

  163 jump_statement: BREAK ';'
  164               | CONTINUE ';'
  165               | RETURN expression_opt ';'
  166               | GOTO identifier ';'

  167 declaration_statement: block_declaration

  168 declaration_seq: declaration
  169                | declaration_seq declaration

  170 declaration: block_declaration
  171            | function_definition
  172            | template_declaration
  173            | explicit_instantiation
  174            | explicit_specialization
  175            | linkage_specification
  176            | namespace_definition

  177 block_declaration: simple_declaration
  178                  | asm_definition
  179                  | namespace_alias_definition
  180                  | using_declaration
  181                  | using_directive

  182 simple_declaration: decl_specifier_seq init_declarator_list ';'
  183                   | decl_specifier_seq ';'

  184 decl_specifier: storage_class_specifier
  185               | type_specifier
  186               | function_specifier
  187               | FRIEND
  188               | TYPEDEF

  189 decl_specifier_seq: decl_specifier
  190                   | decl_specifier_seq decl_specifier

  191 storage_class_specifier: AUTO
  192                        | REGISTER
  193                        | STATIC
  194                        | EXTERN
  195                        | MUTABLE

  196 function_specifier: INLINE
  197                   | VIRTUAL
  198                   | EXPLICIT

  199 type_specifier: simple_type_specifier
  200               | class_specifier
  201               | enum_specifier
  202               | elaborated_type_specifier
  203               | cv_qualifier

  204 simple_type_specifier: type_name
  205                      | nested_name_specifier type_name
  206                      | COLONCOLON nested_name_specifier_opt type_name
  207                      | CHAR
  208                      | WCHAR_T
  209                      | BOOL
  210                      | SHORT
  211                      | INT
  212                      | LONG
  213                      | SIGNED
  214                      | UNSIGNED
  215                      | FLOAT
  216                      | DOUBLE
  217                      | VOID

  218 type_name: class_name
  219          | enum_name
  220          | typedef_name

  221 elaborated_type_specifier: class_key COLONCOLON nested_name_specifier identifier
  222                          | class_key COLONCOLON identifier
  223                          | ENUM COLONCOLON nested_name_specifier identifier
  224                          | ENUM COLONCOLON identifier
  225                          | ENUM nested_name_specifier identifier
  226                          | TYPENAME COLONCOLON_opt nested_name_specifier identifier
  227                          | TYPENAME COLONCOLON_opt nested_name_specifier identifier '<' template_argument_list '>'

  228 enum_specifier: ENUM identifier '{' enumerator_list_opt '}'

  229 enumerator_list: enumerator_definition
  230                | enumerator_list ',' enumerator_definition

  231 enumerator_definition: enumerator
  232                      | enumerator '=' constant_expression

  233 enumerator: identifier

  234 namespace_definition: named_namespace_definition
  235                     | unnamed_namespace_definition

  236 named_namespace_definition: original_namespace_definition
  237                           | extension_namespace_definition

  238 original_namespace_definition: NAMESPACE identifier '{' namespace_body '}'

  239 extension_namespace_definition: NAMESPACE original_namespace_name '{' namespace_body '}'

  240 unnamed_namespace_definition: NAMESPACE '{' namespace_body '}'

  241 namespace_body: declaration_seq_opt

  242 namespace_alias_definition: NAMESPACE identifier '=' qualified_namespace_specifier ';'

  243 qualified_namespace_specifier: COLONCOLON nested_name_specifier namespace_name
  244                              | COLONCOLON namespace_name
  245                              | nested_name_specifier namespace_name
  246                              | namespace_name

  247 using_declaration: USING TYPENAME COLONCOLON nested_name_specifier unqualified_id ';'
  248                  | USING TYPENAME nested_name_specifier unqualified_id ';'
  249                  | USING COLONCOLON nested_name_specifier unqualified_id ';'
  250                  | USING nested_name_specifier unqualified_id ';'
  251                  | USING COLONCOLON unqualified_id ';'

  252 using_directive: USING NAMESPACE COLONCOLON nested_name_specifier namespace_name ';'
  253                | USING NAMESPACE COLONCOLON namespace_name ';'
  254                | USING NAMESPACE nested_name_specifier namespace_name ';'
  255                | USING NAMESPACE namespace_name ';'

  256 asm_definition: ASM '(' string_literal ')' ';'

  257 linkage_specification: EXTERN string_literal '{' declaration_seq_opt '}'
  258                      | EXTERN string_literal declaration

  259 init_declarator_list: init_declarator
  260                     | init_declarator_list ',' init_declarator

  261 init_declarator: declarator initializer_opt

  262 declarator: direct_declarator
  263           | ptr_operator declarator

  264 direct_declarator: declarator_id
  265                  | direct_declarator '(' parameter_declaration_clause ')' cv_qualifier_seq exception_specification
  266                  | direct_declarator '(' parameter_declaration_clause ')' cv_qualifier_seq
  267                  | direct_declarator '(' parameter_declaration_clause ')' exception_specification
  268                  | direct_declarator '(' parameter_declaration_clause ')'
  269                  | CLASS_NAME '(' parameter_declaration_clause ')'
  270                  | CLASS_NAME COLONCOLON declarator_id '(' parameter_declaration_clause ')'
  271                  | CLASS_NAME COLONCOLON CLASS_NAME '(' parameter_declaration_clause ')'
  272                  | direct_declarator '[' constant_expression_opt ']'
  273                  | '(' declarator ')'

  274 ptr_operator: '*'
  275             | '*' cv_qualifier_seq
  276             | '&'
  277             | nested_name_specifier '*'
  278             | nested_name_specifier '*' cv_qualifier_seq
  279             | COLONCOLON nested_name_specifier '*'
  280             | COLONCOLON nested_name_specifier '*' cv_qualifier_seq

  281 cv_qualifier_seq: cv_qualifier
  282                 | cv_qualifier cv_qualifier_seq

  283 cv_qualifier: CONST
  284             | VOLATILE

  285 declarator_id: id_expression
  286              | COLONCOLON id_expression
  287              | COLONCOLON nested_name_specifier type_name
  288              | COLONCOLON type_name

  289 type_id: type_specifier_seq abstract_declarator_opt

  290 type_specifier_seq: type_specifier type_specifier_seq_opt

  291 abstract_declarator: ptr_operator abstract_declarator_opt
  292                    | direct_abstract_declarator

  293 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause ')' cv_qualifier_seq exception_specification
  294                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')' cv_qualifier_seq
  295                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')' exception_specification
  296                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')'
  297                           | direct_abstract_declarator_opt '[' constant_expression_opt ']'
  298                           | '(' abstract_declarator ')'

  299 parameter_declaration_clause: parameter_declaration_list
  300                             | parameter_declaration_list ELLIPSIS
  301                             | ELLIPSIS
  302                             | parameter_declaration_list ',' ELLIPSIS
  303                             | %empty

  304 parameter_declaration_list: parameter_declaration
  305                           | parameter_declaration_list ',' parameter_declaration

  306 parameter_declaration: decl_specifier_seq declarator
  307                      | decl_specifier_seq declarator '=' assignment_expression
  308                      | decl_specifier_seq abstract_declarator_opt
  309                      | decl_specifier_seq abstract_declarator_opt '=' assignment_expression

  310 function_definition: declarator ctor_initializer_opt function_body
  311                    | decl_specifier_seq declarator ctor_initializer_opt function_body
  312                    | declarator function_try_block
  313                    | decl_specifier_seq declarator function_try_block

  314 function_body: compound_statement

  315 initializer: '=' initializer_clause
  316            | '(' expression_list ')'

  317 initializer_clause: assignment_expression
  318                   | '{' initializer_list COMMA_opt '}'
  319                   | '{' '}'

  320 initializer_list: initializer_clause
  321                 | initializer_list ',' initializer_clause

  322 class_specifier: class_head '{' member_specification_opt '}'

  323 class_head: class_key identifier
  324           | class_key identifier base_clause
  325           | class_key nested_name_specifier identifier
  326           | class_key nested_name_specifier identifier base_clause

  327 class_key: CLASS
  328          | STRUCT
  329          | UNION

  330 member_specification: member_declaration member_specification_opt
  331                     | access_specifier ':' member_specification_opt

  332 member_declaration: decl_specifier_seq member_declarator_list ';'
  333                   | decl_specifier_seq ';'
  334                   | member_declarator_list ';'
  335                   | ';'
  336                   | function_definition SEMICOLON_opt
  337                   | qualified_id ';'
  338                   | using_declaration

  339 member_declarator_list: member_declarator
  340                       | member_declarator_list ',' member_declarator

  341 member_declarator: %empty
  342                  | declarator
  343                  | declarator pure_specifier
  344                  | declarator constant_initializer
  345                  | identifier ':' constant_expression

  346 pure_specifier: '=' '0'

  347 constant_initializer: '=' constant_expression

  348 base_clause: ':' base_specifier_list

  349 base_specifier_list: base_specifier
  350                    | base_specifier_list ',' base_specifier

  351 base_specifier: COLONCOLON nested_name_specifier class_name
  352               | COLONCOLON class_name
  353               | nested_name_specifier class_name
  354               | class_name
  355               | VIRTUAL access_specifier COLONCOLON nested_name_specifier_opt class_name
  356               | VIRTUAL access_specifier nested_name_specifier_opt class_name
  357               | VIRTUAL COLONCOLON nested_name_specifier_opt class_name
  358               | VIRTUAL nested_name_specifier_opt class_name
  359               | access_specifier VIRTUAL COLONCOLON nested_name_specifier_opt class_name
  360               | access_specifier VIRTUAL nested_name_specifier_opt class_name
  361               | access_specifier COLONCOLON nested_name_specifier_opt class_name
  362               | access_specifier nested_name_specifier_opt class_name

  363 access_specifier: PRIVATE
  364                 | PROTECTED
  365                 | PUBLIC

  366 conversion_function_id: OPERATOR conversion_type_id

  367 conversion_type_id: type_specifier_seq conversion_declarator_opt

  368 conversion_declarator: ptr_operator conversion_declarator_opt

  369 ctor_initializer: ':' mem_initializer_list

  370 mem_initializer_list: mem_initializer
  371                     | mem_initializer ',' mem_initializer_list

  372 mem_initializer: mem_initializer_id '(' expression_list_opt ')'

  373 mem_initializer_id: COLONCOLON nested_name_specifier class_name
  374                   | COLONCOLON class_name
  375                   | nested_name_specifier class_name
  376                   | class_name
  377                   | identifier

  378 operator_function_id: OPERATOR operator

  379 operator: NEW
  380         | DELETE
  381         | NEW '[' ']'
  382         | DELETE '[' ']'
  383         | '+'
  384         | '_'
  385         | '*'
  386         | '/'
  387         | '%'
  388         | '^'
  389         | '&'
  390         | '|'
  391         | '~'
  392         | '!'
  393         | '='
  394         | '<'
  395         | '>'
  396         | ADDEQ
  397         | SUBEQ
  398         | MULEQ
  399         | DIVEQ
  400         | MODEQ
  401         | XOREQ
  402         | ANDEQ
  403         | OREQ
  404         | SL
  405         | SR
  406         | SREQ
  407         | SLEQ
  408         | EQ
  409         | NOTEQ
  410         | LTEQ
  411         | GTEQ
  412         | ANDAND
  413         | OROR
  414         | PLUSPLUS
  415         | MINUSMINUS
  416         | ','
  417         | ARROWSTAR
  418         | ARROW
  419         | '(' ')'
  420         | '[' ']'

  421 template_declaration: EXPORT_opt TEMPLATE '<' template_parameter_list '>' declaration

  422 template_parameter_list: template_parameter
  423                        | template_parameter_list ',' template_parameter

  424 template_parameter: type_parameter
  425                   | parameter_declaration

  426 type_parameter: CLASS identifier
  427               | CLASS identifier '=' type_id
  428               | TYPENAME identifier
  429               | TYPENAME identifier '=' type_id
  430               | TEMPLATE '<' template_parameter_list '>' CLASS identifier
  431               | TEMPLATE '<' template_parameter_list '>' CLASS identifier '=' template_name

  432 template_id: template_name '<' template_argument_list '>'

  433 template_argument_list: template_argument
  434                       | template_argument_list ',' template_argument

  435 template_argument: assignment_expression
  436                  | type_id
  437                  | template_name

  438 explicit_instantiation: TEMPLATE declaration

  439 explicit_specialization: TEMPLATE '<' '>' declaration

  440 try_block: TRY compound_statement handler_seq

  441 function_try_block: TRY ctor_initializer_opt function_body handler_seq

  442 handler_seq: handler handler_seq_opt

  443 handler: CATCH '(' exception_declaration ')' compound_statement

  444 exception_declaration: type_specifier_seq declarator
  445                      | type_specifier_seq abstract_declarator
  446                      | type_specifier_seq
  447                      | ELLIPSIS

  448 throw_expression: THROW assignment_expression_opt

  449 exception_specification: THROW '(' type_id_list_opt ')'

  450 type_id_list: type_id
  451             | type_id_list ',' type_id

  452 declaration_seq_opt: %empty
  453                    | declaration_seq

  454 nested_name_specifier_opt: %empty
  455                          | nested_name_specifier

  456 expression_list_opt: %empty
  457                    | expression_list

  458 COLONCOLON_opt: %empty
  459               | COLONCOLON

  460 new_placement_opt: %empty
  461                  | new_placement

  462 new_initializer_opt: %empty
  463                    | new_initializer

  464 new_declarator_opt: %empty
  465                   | new_declarator

  466 expression_opt: %empty
  467               | expression

  468 statement_seq_opt: %empty
  469                  | statement_seq

  470 condition_opt: %empty
  471              | condition

  472 enumerator_list_opt: %empty
  473                    | enumerator_list

  474 initializer_opt: %empty
  475                | initializer

  476 constant_expression_opt: %empty
  477                        | constant_expression

  478 abstract_declarator_opt: %empty
  479                        | abstract_declarator

  480 type_specifier_seq_opt: %empty
  481                       | type_specifier_seq

  482 direct_abstract_declarator_opt: %empty
  483                               | direct_abstract_declarator

  484 ctor_initializer_opt: %empty
  485                     | ctor_initializer

  486 COMMA_opt: %empty
  487          | ','

  488 member_specification_opt: %empty
  489                         | member_specification

  490 SEMICOLON_opt: %empty
  491              | ';'

  492 conversion_declarator_opt: %empty
  493                          | conversion_declarator

  494 EXPORT_opt: EXPORT
  495           | %empty

  496 handler_seq_opt: %empty
  497                | handler_seq

  498 assignment_expression_opt: %empty
  499                          | assignment_expression

  500 type_id_list_opt: %empty
  501                 | type_id_list


Terminals, with rules where they appear

$end (0) 0
'!' (33) 69 392
'%' (37) 94 387
'&' (38) 61 110 276 389
'(' (40) 23 38 49 50 51 52 53 54 64 73 74 75 81 87 153 154 155 158
    159 160 256 265 266 267 268 269 270 271 273 293 294 295 296 298
    316 372 419 443 449
')' (41) 23 38 49 50 51 52 53 54 64 73 74 75 81 87 153 154 155 158
    159 160 256 265 266 267 268 269 270 271 273 293 294 295 296 298
    316 372 419 443 449
'*' (42) 60 92 274 275 277 278 279 280 385
'+' (43) 67 96 383
',' (44) 56 136 230 260 302 305 321 340 350 371 416 423 434 451 487
'-' (45) 68 97
'.' (46) 39 40 41 42
'/' (47) 93 386
'0' (48) 346
':' (58) 120 146 147 148 331 345 348 369
';' (59) 149 159 160 163 164 165 166 182 183 242 247 248 249 250 251
    252 253 254 255 256 332 333 334 335 337 491
'<' (60) 49 50 51 52 102 227 394 421 430 431 432 439
'=' (61) 124 157 232 242 307 309 315 346 347 393 427 429 431
'>' (62) 49 50 51 52 103 227 395 421 430 431 432 439
'?' (63) 120
'[' (91) 37 79 80 84 85 272 297 381 382 420
']' (93) 37 79 80 84 85 272 297 381 382 420
'^' (94) 112 388
'_' (95) 384
'{' (123) 150 228 238 239 240 257 318 319 322
'|' (124) 114 390
'}' (125) 150 228 238 239 240 257 318 319 322
'~' (126) 30 70 391
error (256)
IDENTIFIER (258) 8
INTEGER (259) 14
FLOATING (260) 16
CHARACTER (261) 15
STRING (262) 17
TYPEDEF_NAME (263) 1
CLASS_NAME (264) 4 269 270 271
ENUM_NAME (265) 6
ELLIPSIS (266) 300 301 302 447
COLONCOLON (267) 33 34 35 39 41 43 45 72 74 83 85 206 221 222 223 224
    243 244 247 249 251 252 253 270 271 279 280 286 287 288 351 352
    355 357 359 361 373 374 459
DOTSTAR (268) 89
ADDEQ (269) 128 396
SUBEQ (270) 129 397
MULEQ (271) 125 398
DIVEQ (272) 126 399
MODEQ (273) 127 400
XOREQ (274) 133 401
ANDEQ (275) 132 402
OREQ (276) 134 403
SL (277) 99 404
SR (278) 100 405
SREQ (279) 130 406
SLEQ (280) 131 407
EQ (281) 107 408
NOTEQ (282) 108 409
LTEQ (283) 104 410
GTEQ (284) 105 411
ANDAND (285) 116 412
OROR (286) 118 413
PLUSPLUS (287) 47 58 414
MINUSMINUS (288) 48 59 415
ARROWSTAR (289) 90 417
ARROW (290) 43 44 45 46 418
ASM (291) 256
AUTO (292) 191
BOOL (293) 209
BREAK (294) 163
CASE (295) 147
CATCH (296) 443
CHAR (297) 207
CLASS (298) 327 426 427 430 431
CONST (299) 283
CONST_CAST (300) 52
CONTINUE (301) 164
DEFAULT (302) 148
DELETE (303) 82 83 84 85 380 382
DO (304) 159
DOUBLE (305) 216
DYNAMIC_CAST (306) 49
ELSE (307) 154
ENUM (308) 223 224 225 228
EXPLICIT (309) 198
EXPORT (310) 494
EXTERN (311) 194 257 258
FALSE (312) 19
FLOAT (313) 215
FOR (314) 160
FRIEND (315) 187
GOTO (316) 166
IF (317) 153 154
INLINE (318) 196
INT (319) 211
LONG (320) 212
MUTABLE (321) 195
NAMESPACE (322) 238 239 240 242 252 253 254 255
NEW (323) 71 72 73 74 379 381
OPERATOR (324) 366 378
PRIVATE (325) 363
PROTECTED (326) 364
PUBLIC (327) 365
REGISTER (328) 192
REINTERPRET_CAST (329) 51
RETURN (330) 165
SHORT (331) 210
SIGNED (332) 213
SIZEOF (333) 63 64
STATIC (334) 193
STATIC_CAST (335) 50
STRUCT (336) 328
SWITCH (337) 155
TEMPLATE (338) 32 39 40 43 44 421 430 431 438 439
THIS (339) 22
THROW (340) 448 449
TRUE (341) 18
TRY (342) 440 441
TYPEDEF (343) 188
TYPEID (344) 53 54
TYPENAME (345) 226 227 247 248 428 429
UNION (346) 329
UNSIGNED (347) 214
USING (348) 247 248 249 250 251 252 253 254 255
VIRTUAL (349) 197 355 356 357 358 359 360
VOID (350) 217
VOLATILE (351) 284
WCHAR_T (352) 208
WHILE (353) 158 159
NAMESPACE_NAME (354) 3
TEMPLATE_NAME (355) 7


Nonterminals, with rules where they appear

$accept (127)
    on left: 0
typedef_name (128)
    on left: 1, on right: 220
namespace_name (129)
    on left: 2, on right: 34 243 244 245 246 252 253 254 255
original_namespace_name (130)
    on left: 3, on right: 2 239
class_name (131)
    on left: 4 5, on right: 30 33 35 218 351 352 353 354 355 356 357
    358 359 360 361 362 373 374 375 376
enum_name (132)
    on left: 6, on right: 219
template_name (133)
    on left: 7, on right: 431 432 437
identifier (134)
    on left: 8, on right: 27 146 166 221 222 223 224 225 226 227 228
    233 238 242 323 324 325 326 345 377 426 427 428 429 430 431
literal (135)
    on left: 9 10 11 12 13, on right: 21
integer_literal (136)
    on left: 14, on right: 9
character_literal (137)
    on left: 15, on right: 10
floating_literal (138)
    on left: 16, on right: 11
string_literal (139)
    on left: 17, on right: 12 256 257 258
boolean_literal (140)
    on left: 18 19, on right: 13
translation_unit (141)
    on left: 20, on right: 0
primary_expression (142)
    on left: 21 22 23 24, on right: 36
id_expression (143)
    on left: 25 26, on right: 24 39 40 41 42 43 44 45 46 285 286
unqualified_id (144)
    on left: 27 28 29 30, on right: 25 31 32 247 248 249 250 251
qualified_id (145)
    on left: 31 32, on right: 26 337
nested_name_specifier (146)
    on left: 33 34 35, on right: 31 32 33 34 205 221 223 225 226 227
    243 245 247 248 249 250 252 254 277 278 279 280 287 325 326 351
    353 373 375 455
postfix_expression (147)
    on left: 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53
    54, on right: 37 38 39 40 41 42 43 44 45 46 47 48 57
expression_list (148)
    on left: 55 56, on right: 56 75 316 457
unary_expression (149)
    on left: 57 58 59 60 61 62 63 64 65 66, on right: 63 86
unary_operator (150)
    on left: 67 68 69 70, on right: 62
new_expression (151)
    on left: 71 72 73 74, on right: 65
new_placement (152)
    on left: 75, on right: 461
new_type_id (153)
    on left: 76, on right: 71 72
new_declarator (154)
    on left: 77 78, on right: 465
direct_new_declarator (155)
    on left: 79 80, on right: 78 80
new_initializer (156)
    on left: 81, on right: 463
delete_expression (157)
    on left: 82 83 84 85, on right: 66
cast_expression (158)
    on left: 86 87, on right: 58 59 60 61 62 82 83 84 85 87 88 89 90
pm_expression (159)
    on left: 88 89 90, on right: 89 90 91 92 93 94
multiplicative_expression (160)
    on left: 91 92 93 94, on right: 92 93 94 95 96 97
additive_expression (161)
    on left: 95 96 97, on right: 96 97 98 99 100
shift_expression (162)
    on left: 98 99 100, on right: 99 100 101 102 103 104 105
relational_expression (163)
    on left: 101 102 103 104 105, on right: 102 103 104 105 106 107
    108
equality_expression (164)
    on left: 106 107 108, on right: 107 108 109 110
and_expression (165)
    on left: 109 110, on right: 110 111 112
exclusive_or_expression (166)
    on left: 111 112, on right: 112 113 114
inclusive_or_expression (167)
    on left: 113 114, on right: 114 115 116
logical_and_expression (168)
    on left: 115 116, on right: 116 117 118
logical_or_expression (169)
    on left: 117 118, on right: 118 119 120 122
conditional_expression (170)
    on left: 119 120, on right: 121 137
assignment_expression (171)
    on left: 121 122 123, on right: 55 56 120 122 135 136 157 307 309
    317 435 499
assignment_operator (172)
    on left: 124 125 126 127 128 129 130 131 132 133 134, on right:
    122
expression (173)
    on left: 135 136, on right: 23 37 49 50 51 52 53 79 120 136 156
    159 467
constant_expression (174)
    on left: 137, on right: 80 147 232 345 347 477
statement (175)
    on left: 138 139 140 141 142 143 144 145, on right: 146 147 148
    151 152 153 154 155 158 159 160
labeled_statement (176)
    on left: 146 147 148, on right: 138
expression_statement (177)
    on left: 149, on right: 139 161
compound_statement (178)
    on left: 150, on right: 140 314 440 443
statement_seq (179)
    on left: 151 152, on right: 152 469
selection_statement (180)
    on left: 153 154 155, on right: 141
condition (181)
    on left: 156 157, on right: 153 154 155 158 471
iteration_statement (182)
    on left: 158 159 160, on right: 142
for_init_statement (183)
    on left: 161 162, on right: 160
jump_statement (184)
    on left: 163 164 165 166, on right: 143
declaration_statement (185)
    on left: 167, on right: 144
declaration_seq (186)
    on left: 168 169, on right: 169 453
declaration (187)
    on left: 170 171 172 173 174 175 176, on right: 168 169 258 421
    438 439
block_declaration (188)
    on left: 177 178 179 180 181, on right: 167 170
simple_declaration (189)
    on left: 182 183, on right: 162 177
decl_specifier (190)
    on left: 184 185 186 187 188, on right: 189 190
decl_specifier_seq (191)
    on left: 189 190, on right: 182 183 190 306 307 308 309 311 313
    332 333
storage_class_specifier (192)
    on left: 191 192 193 194 195, on right: 184
function_specifier (193)
    on left: 196 197 198, on right: 186
type_specifier (194)
    on left: 199 200 201 202 203, on right: 185 290
simple_type_specifier (195)
    on left: 204 205 206 207 208 209 210 211 212 213 214 215 216 217,
    on right: 199
type_name (196)
    on left: 218 219 220, on right: 204 205 206 287 288
elaborated_type_specifier (197)
    on left: 221 222 223 224 225 226 227, on right: 202
enum_specifier (198)
    on left: 228, on right: 201
enumerator_list (199)
    on left: 229 230, on right: 230 473
enumerator_definition (200)
    on left: 231 232, on right: 229 230
enumerator (201)
    on left: 233, on right: 231 232
namespace_definition (202)
    on left: 234 235, on right: 176
named_namespace_definition (203)
    on left: 236 237, on right: 234
original_namespace_definition (204)
    on left: 238, on right: 236
extension_namespace_definition (205)
    on left: 239, on right: 237
unnamed_namespace_definition (206)
    on left: 240, on right: 235
namespace_body (207)
    on left: 241, on right: 238 239 240
namespace_alias_definition (208)
    on left: 242, on right: 179
qualified_namespace_specifier (209)
    on left: 243 244 245 246, on right: 242
using_declaration (210)
    on left: 247 248 249 250 251, on right: 180 338
using_directive (211)
    on left: 252 253 254 255, on right: 181
asm_definition (212)
    on left: 256, on right: 178
linkage_specification (213)
    on left: 257 258, on right: 175
init_declarator_list (214)
    on left: 259 260, on right: 182 260
init_declarator (215)
    on left: 261, on right: 259 260
declarator (216)
    on left: 262 263, on right: 157 261 263 273 306 307 310 311 312
    313 342 343 344 444
direct_declarator (217)
    on left: 264 265 266 267 268 269 270 271 272 273, on right: 262
    265 266 267 268 272
ptr_operator (218)
    on left: 274 275 276 277 278 279 280, on right: 77 263 291 368
cv_qualifier_seq (219)
    on left: 281 282, on right: 265 266 275 278 280 282 293 294
cv_qualifier (220)
    on left: 283 284, on right: 203 281 282
declarator_id (221)
    on left: 285 286 287 288, on right: 264 270
type_id (222)
    on left: 289, on right: 49 50 51 52 54 64 73 74 87 427 429 436
    450 451
type_specifier_seq (223)
    on left: 290, on right: 76 157 289 367 444 445 446 481
abstract_declarator (224)
    on left: 291 292, on right: 298 445 479
direct_abstract_declarator (225)
    on left: 293 294 295 296 297 298, on right: 292 483
parameter_declaration_clause (226)
    on left: 299 300 301 302 303, on right: 265 266 267 268 269 270
    271 293 294 295 296
parameter_declaration_list (227)
    on left: 304 305, on right: 299 300 302 305
parameter_declaration (228)
    on left: 306 307 308 309, on right: 304 305 425
function_definition (229)
    on left: 310 311 312 313, on right: 171 336
function_body (230)
    on left: 314, on right: 310 311 441
initializer (231)
    on left: 315 316, on right: 475
initializer_clause (232)
    on left: 317 318 319, on right: 315 320 321
initializer_list (233)
    on left: 320 321, on right: 318 321
class_specifier (234)
    on left: 322, on right: 200
class_head (235)
    on left: 323 324 325 326, on right: 322
class_key (236)
    on left: 327 328 329, on right: 221 222 323 324 325 326
member_specification (237)
    on left: 330 331, on right: 489
member_declaration (238)
    on left: 332 333 334 335 336 337 338, on right: 330
member_declarator_list (239)
    on left: 339 340, on right: 332 334 340
member_declarator (240)
    on left: 341 342 343 344 345, on right: 339 340
pure_specifier (241)
    on left: 346, on right: 343
constant_initializer (242)
    on left: 347, on right: 344
base_clause (243)
    on left: 348, on right: 324 326
base_specifier_list (244)
    on left: 349 350, on right: 348 350
base_specifier (245)
    on left: 351 352 353 354 355 356 357 358 359 360 361 362, on right:
    349 350
access_specifier (246)
    on left: 363 364 365, on right: 331 355 356 359 360 361 362
conversion_function_id (247)
    on left: 366, on right: 29
conversion_type_id (248)
    on left: 367, on right: 366
conversion_declarator (249)
    on left: 368, on right: 493
ctor_initializer (250)
    on left: 369, on right: 485
mem_initializer_list (251)
    on left: 370 371, on right: 369 371
mem_initializer (252)
    on left: 372, on right: 370 371
mem_initializer_id (253)
    on left: 373 374 375 376 377, on right: 372
operator_function_id (254)
    on left: 378, on right: 28
operator (255)
    on left: 379 380 381 382 383 384 385 386 387 388 389 390 391 392
    393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408
    409 410 411 412 413 414 415 416 417 418 419 420, on right: 378
template_declaration (256)
    on left: 421, on right: 172
template_parameter_list (257)
    on left: 422 423, on right: 421 423 430 431
template_parameter (258)
    on left: 424 425, on right: 422 423
type_parameter (259)
    on left: 426 427 428 429 430 431, on right: 424
template_id (260)
    on left: 432, on right: 5
template_argument_list (261)
    on left: 433 434, on right: 227 432 434
template_argument (262)
    on left: 435 436 437, on right: 433 434
explicit_instantiation (263)
    on left: 438, on right: 173
explicit_specialization (264)
    on left: 439, on right: 174
try_block (265)
    on left: 440, on right: 145
function_try_block (266)
    on left: 441, on right: 312 313
handler_seq (267)
    on left: 442, on right: 440 441 497
handler (268)
    on left: 443, on right: 442
exception_declaration (269)
    on left: 444 445 446 447, on right: 443
throw_expression (270)
    on left: 448, on right: 123
exception_specification (271)
    on left: 449, on right: 265 267 293 295
type_id_list (272)
    on left: 450 451, on right: 451 501
declaration_seq_opt (273)
    on left: 452 453, on right: 20 241 257
nested_name_specifier_opt (274)
    on left: 454 455, on right: 206 355 356 357 358 359 360 361 362
expression_list_opt (275)
    on left: 456 457, on right: 38 81 372
COLONCOLON_opt (276)
    on left: 458 459, on right: 226 227
new_placement_opt (277)
    on left: 460 461, on right: 71 72 73 74
new_initializer_opt (278)
    on left: 462 463, on right: 71 72 73 74
new_declarator_opt (279)
    on left: 464 465, on right: 76 77
expression_opt (280)
    on left: 466 467, on right: 149 160 165
statement_seq_opt (281)
    on left: 468 469, on right: 150
condition_opt (282)
    on left: 470 471, on right: 160
enumerator_list_opt (283)
    on left: 472 473, on right: 228
initializer_opt (284)
    on left: 474 475, on right: 261
constant_expression_opt (285)
    on left: 476 477, on right: 272 297
abstract_declarator_opt (286)
    on left: 478 479, on right: 289 291 308 309
type_specifier_seq_opt (287)
    on left: 480 481, on right: 290
direct_abstract_declarator_opt (288)
    on left: 482 483, on right: 293 294 295 296 297
ctor_initializer_opt (289)
    on left: 484 485, on right: 310 311 441
COMMA_opt (290)
    on left: 486 487, on right: 318
member_specification_opt (291)
    on left: 488 489, on right: 322 330 331
SEMICOLON_opt (292)
    on left: 490 491, on right: 336
conversion_declarator_opt (293)
    on left: 492 493, on right: 367 368
EXPORT_opt (294)
    on left: 494 495, on right: 421
handler_seq_opt (295)
    on left: 496 497, on right: 442
assignment_expression_opt (296)
    on left: 498 499, on right: 448
type_id_list_opt (297)
    on left: 500 501, on right: 449


State 0

    0 $accept: . translation_unit $end

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    CLASS_NAME      shift, and go to state 3
    ENUM_NAME       shift, and go to state 4
    COLONCOLON      shift, and go to state 5
    ASM             shift, and go to state 6
    AUTO            shift, and go to state 7
    BOOL            shift, and go to state 8
    CHAR            shift, and go to state 9
    CLASS           shift, and go to state 10
    CONST           shift, and go to state 11
    DOUBLE          shift, and go to state 12
    ENUM            shift, and go to state 13
    EXPLICIT        shift, and go to state 14
    EXPORT          shift, and go to state 15
    EXTERN          shift, and go to state 16
    FLOAT           shift, and go to state 17
    FRIEND          shift, and go to state 18
    INLINE          shift, and go to state 19
    INT             shift, and go to state 20
    LONG            shift, and go to state 21
    MUTABLE         shift, and go to state 22
    NAMESPACE       shift, and go to state 23
    OPERATOR        shift, and go to state 24
    REGISTER        shift, and go to state 25
    SHORT           shift, and go to state 26
    SIGNED          shift, and go to state 27
    STATIC          shift, and go to state 28
    STRUCT          shift, and go to state 29
    TEMPLATE        shift, and go to state 30
    TYPEDEF         shift, and go to state 31
    TYPENAME        shift, and go to state 32
    UNION           shift, and go to state 33
    UNSIGNED        shift, and go to state 34
    USING           shift, and go to state 35
    VIRTUAL         shift, and go to state 36
    VOID            shift, and go to state 37
    VOLATILE        shift, and go to state 38
    WCHAR_T         shift, and go to state 39
    '('             shift, and go to state 40
    '&'             shift, and go to state 41
    '*'             shift, and go to state 42
    '~'             shift, and go to state 43
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    TEMPLATE  [reduce using rule 495 (EXPORT_opt)]
    $default  reduce using rule 452 (declaration_seq_opt)

    typedef_name                    go to state 46
    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 49
    enum_name                       go to state 50
    template_name                   go to state 51
    identifier                      go to state 52
    translation_unit                go to state 53
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 57
    declaration_seq                 go to state 58
    declaration                     go to state 59
    block_declaration               go to state 60
    simple_declaration              go to state 61
    decl_specifier                  go to state 62
    decl_specifier_seq              go to state 63
    storage_class_specifier         go to state 64
    function_specifier              go to state 65
    type_specifier                  go to state 66
    simple_type_specifier           go to state 67
    type_name                       go to state 68
    elaborated_type_specifier       go to state 69
    enum_specifier                  go to state 70
    namespace_definition            go to state 71
    named_namespace_definition      go to state 72
    original_namespace_definition   go to state 73
    extension_namespace_definition  go to state 74
    unnamed_namespace_definition    go to state 75
    namespace_alias_definition      go to state 76
    using_declaration               go to state 77
    using_directive                 go to state 78
    asm_definition                  go to state 79
    linkage_specification           go to state 80
    declarator                      go to state 81
    direct_declarator               go to state 82
    ptr_operator                    go to state 83
    cv_qualifier                    go to state 84
    declarator_id                   go to state 85
    function_definition             go to state 86
    class_specifier                 go to state 87
    class_head                      go to state 88
    class_key                       go to state 89
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_declaration            go to state 92
    template_id                     go to state 93
    explicit_instantiation          go to state 94
    explicit_specialization         go to state 95
    declaration_seq_opt             go to state 96
    EXPORT_opt                      go to state 97


State 1

    8 identifier: IDENTIFIER .

    $default  reduce using rule 8 (identifier)


State 2

    1 typedef_name: TYPEDEF_NAME .

    $default  reduce using rule 1 (typedef_name)


State 3

    4 class_name: CLASS_NAME .
  269 direct_declarator: CLASS_NAME . '(' parameter_declaration_clause ')'
  270                  | CLASS_NAME . COLONCOLON declarator_id '(' parameter_declaration_clause ')'
  271                  | CLASS_NAME . COLONCOLON CLASS_NAME '(' parameter_declaration_clause ')'

    COLONCOLON  shift, and go to state 98
    '('         shift, and go to state 99

    COLONCOLON  [reduce using rule 4 (class_name)]
    '('         [reduce using rule 4 (class_name)]
    $default    reduce using rule 4 (class_name)


State 4

    6 enum_name: ENUM_NAME .

    $default  reduce using rule 6 (enum_name)


State 5

  206 simple_type_specifier: COLONCOLON . nested_name_specifier_opt type_name
  279 ptr_operator: COLONCOLON . nested_name_specifier '*'
  280             | COLONCOLON . nested_name_specifier '*' cv_qualifier_seq
  286 declarator_id: COLONCOLON . id_expression
  287              | COLONCOLON . nested_name_specifier type_name
  288              | COLONCOLON . type_name

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 4
    OPERATOR        shift, and go to state 24
    '~'             shift, and go to state 43
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    TYPEDEF_NAME   [reduce using rule 454 (nested_name_specifier_opt)]
    CLASS_NAME     [reduce using rule 454 (nested_name_specifier_opt)]
    ENUM_NAME      [reduce using rule 454 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 454 (nested_name_specifier_opt)]

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 52
    id_expression              go to state 101
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 102
    type_name                  go to state 103
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    nested_name_specifier_opt  go to state 104


State 6

  256 asm_definition: ASM . '(' string_literal ')' ';'

    '('  shift, and go to state 105


State 7

  191 storage_class_specifier: AUTO .

    $default  reduce using rule 191 (storage_class_specifier)


State 8

  209 simple_type_specifier: BOOL .

    $default  reduce using rule 209 (simple_type_specifier)


State 9

  207 simple_type_specifier: CHAR .

    $default  reduce using rule 207 (simple_type_specifier)


State 10

  327 class_key: CLASS .

    $default  reduce using rule 327 (class_key)


State 11

  283 cv_qualifier: CONST .

    $default  reduce using rule 283 (cv_qualifier)


State 12

  216 simple_type_specifier: DOUBLE .

    $default  reduce using rule 216 (simple_type_specifier)


State 13

  223 elaborated_type_specifier: ENUM . COLONCOLON nested_name_specifier identifier
  224                          | ENUM . COLONCOLON identifier
  225                          | ENUM . nested_name_specifier identifier
  228 enum_specifier: ENUM . identifier '{' enumerator_list_opt '}'

    IDENTIFIER      shift, and go to state 1
    CLASS_NAME      shift, and go to state 100
    COLONCOLON      shift, and go to state 106
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 108
    nested_name_specifier    go to state 109
    template_id              go to state 93


State 14

  198 function_specifier: EXPLICIT .

    $default  reduce using rule 198 (function_specifier)


State 15

  494 EXPORT_opt: EXPORT .

    $default  reduce using rule 494 (EXPORT_opt)


State 16

  194 storage_class_specifier: EXTERN .
  257 linkage_specification: EXTERN . string_literal '{' declaration_seq_opt '}'
  258                      | EXTERN . string_literal declaration

    STRING  shift, and go to state 110

    $default  reduce using rule 194 (storage_class_specifier)

    string_literal  go to state 111


State 17

  215 simple_type_specifier: FLOAT .

    $default  reduce using rule 215 (simple_type_specifier)


State 18

  187 decl_specifier: FRIEND .

    $default  reduce using rule 187 (decl_specifier)


State 19

  196 function_specifier: INLINE .

    $default  reduce using rule 196 (function_specifier)


State 20

  211 simple_type_specifier: INT .

    $default  reduce using rule 211 (simple_type_specifier)


State 21

  212 simple_type_specifier: LONG .

    $default  reduce using rule 212 (simple_type_specifier)


State 22

  195 storage_class_specifier: MUTABLE .

    $default  reduce using rule 195 (storage_class_specifier)


State 23

  238 original_namespace_definition: NAMESPACE . identifier '{' namespace_body '}'
  239 extension_namespace_definition: NAMESPACE . original_namespace_name '{' namespace_body '}'
  240 unnamed_namespace_definition: NAMESPACE . '{' namespace_body '}'
  242 namespace_alias_definition: NAMESPACE . identifier '=' qualified_namespace_specifier ';'

    IDENTIFIER      shift, and go to state 1
    '{'             shift, and go to state 112
    NAMESPACE_NAME  shift, and go to state 44

    original_namespace_name  go to state 113
    identifier               go to state 114


State 24

  366 conversion_function_id: OPERATOR . conversion_type_id
  378 operator_function_id: OPERATOR . operator

    TYPEDEF_NAME    shift, and go to state 2
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 4
    COLONCOLON      shift, and go to state 115
    ADDEQ           shift, and go to state 116
    SUBEQ           shift, and go to state 117
    MULEQ           shift, and go to state 118
    DIVEQ           shift, and go to state 119
    MODEQ           shift, and go to state 120
    XOREQ           shift, and go to state 121
    ANDEQ           shift, and go to state 122
    OREQ            shift, and go to state 123
    SL              shift, and go to state 124
    SR              shift, and go to state 125
    SREQ            shift, and go to state 126
    SLEQ            shift, and go to state 127
    EQ              shift, and go to state 128
    NOTEQ           shift, and go to state 129
    LTEQ            shift, and go to state 130
    GTEQ            shift, and go to state 131
    ANDAND          shift, and go to state 132
    OROR            shift, and go to state 133
    PLUSPLUS        shift, and go to state 134
    MINUSMINUS      shift, and go to state 135
    ARROWSTAR       shift, and go to state 136
    ARROW           shift, and go to state 137
    BOOL            shift, and go to state 8
    CHAR            shift, and go to state 9
    CLASS           shift, and go to state 10
    CONST           shift, and go to state 11
    DELETE          shift, and go to state 138
    DOUBLE          shift, and go to state 12
    ENUM            shift, and go to state 13
    FLOAT           shift, and go to state 17
    INT             shift, and go to state 20
    LONG            shift, and go to state 21
    NEW             shift, and go to state 139
    SHORT           shift, and go to state 26
    SIGNED          shift, and go to state 27
    STRUCT          shift, and go to state 29
    TYPENAME        shift, and go to state 32
    UNION           shift, and go to state 33
    UNSIGNED        shift, and go to state 34
    VOID            shift, and go to state 37
    VOLATILE        shift, and go to state 38
    WCHAR_T         shift, and go to state 39
    '('             shift, and go to state 140
    ','             shift, and go to state 141
    '['             shift, and go to state 142
    '&'             shift, and go to state 143
    '<'             shift, and go to state 144
    '>'             shift, and go to state 145
    '_'             shift, and go to state 146
    '+'             shift, and go to state 147
    '='             shift, and go to state 148
    '%'             shift, and go to state 149
    '*'             shift, and go to state 150
    '/'             shift, and go to state 151
    '|'             shift, and go to state 152
    '^'             shift, and go to state 153
    '!'             shift, and go to state 154
    '~'             shift, and go to state 155
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_specifier_seq         go to state 158
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_type_id         go to state 159
    operator                   go to state 160
    template_id                go to state 93


State 25

  192 storage_class_specifier: REGISTER .

    $default  reduce using rule 192 (storage_class_specifier)


State 26

  210 simple_type_specifier: SHORT .

    $default  reduce using rule 210 (simple_type_specifier)


State 27

  213 simple_type_specifier: SIGNED .

    $default  reduce using rule 213 (simple_type_specifier)


State 28

  193 storage_class_specifier: STATIC .

    $default  reduce using rule 193 (storage_class_specifier)


State 29

  328 class_key: STRUCT .

    $default  reduce using rule 328 (class_key)


State 30

  438 explicit_instantiation: TEMPLATE . declaration
  439 explicit_specialization: TEMPLATE . '<' '>' declaration

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    CLASS_NAME      shift, and go to state 3
    ENUM_NAME       shift, and go to state 4
    COLONCOLON      shift, and go to state 5
    ASM             shift, and go to state 6
    AUTO            shift, and go to state 7
    BOOL            shift, and go to state 8
    CHAR            shift, and go to state 9
    CLASS           shift, and go to state 10
    CONST           shift, and go to state 11
    DOUBLE          shift, and go to state 12
    ENUM            shift, and go to state 13
    EXPLICIT        shift, and go to state 14
    EXPORT          shift, and go to state 15
    EXTERN          shift, and go to state 16
    FLOAT           shift, and go to state 17
    FRIEND          shift, and go to state 18
    INLINE          shift, and go to state 19
    INT             shift, and go to state 20
    LONG            shift, and go to state 21
    MUTABLE         shift, and go to state 22
    NAMESPACE       shift, and go to state 23
    OPERATOR        shift, and go to state 24
    REGISTER        shift, and go to state 25
    SHORT           shift, and go to state 26
    SIGNED          shift, and go to state 27
    STATIC          shift, and go to state 28
    STRUCT          shift, and go to state 29
    TEMPLATE        shift, and go to state 30
    TYPEDEF         shift, and go to state 31
    TYPENAME        shift, and go to state 32
    UNION           shift, and go to state 33
    UNSIGNED        shift, and go to state 34
    USING           shift, and go to state 35
    VIRTUAL         shift, and go to state 36
    VOID            shift, and go to state 37
    VOLATILE        shift, and go to state 38
    WCHAR_T         shift, and go to state 39
    '('             shift, and go to state 40
    '&'             shift, and go to state 41
    '<'             shift, and go to state 161
    '*'             shift, and go to state 42
    '~'             shift, and go to state 43
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    TEMPLATE  [reduce using rule 495 (EXPORT_opt)]

    typedef_name                    go to state 46
    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 49
    enum_name                       go to state 50
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 57
    declaration                     go to state 162
    block_declaration               go to state 60
    simple_declaration              go to state 61
    decl_specifier                  go to state 62
    decl_specifier_seq              go to state 63
    storage_class_specifier         go to state 64
    function_specifier              go to state 65
    type_specifier                  go to state 66
    simple_type_specifier           go to state 67
    type_name                       go to state 68
    elaborated_type_specifier       go to state 69
    enum_specifier                  go to state 70
    namespace_definition            go to state 71
    named_namespace_definition      go to state 72
    original_namespace_definition   go to state 73
    extension_namespace_definition  go to state 74
    unnamed_namespace_definition    go to state 75
    namespace_alias_definition      go to state 76
    using_declaration               go to state 77
    using_directive                 go to state 78
    asm_definition                  go to state 79
    linkage_specification           go to state 80
    declarator                      go to state 81
    direct_declarator               go to state 82
    ptr_operator                    go to state 83
    cv_qualifier                    go to state 84
    declarator_id                   go to state 85
    function_definition             go to state 86
    class_specifier                 go to state 87
    class_head                      go to state 88
    class_key                       go to state 89
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_declaration            go to state 92
    template_id                     go to state 93
    explicit_instantiation          go to state 94
    explicit_specialization         go to state 95
    EXPORT_opt                      go to state 97


State 31

  188 decl_specifier: TYPEDEF .

    $default  reduce using rule 188 (decl_specifier)


State 32

  226 elaborated_type_specifier: TYPENAME . COLONCOLON_opt nested_name_specifier identifier
  227                          | TYPENAME . COLONCOLON_opt nested_name_specifier identifier '<' template_argument_list '>'

    COLONCOLON  shift, and go to state 163

    $default  reduce using rule 458 (COLONCOLON_opt)

    COLONCOLON_opt  go to state 164


State 33

  329 class_key: UNION .

    $default  reduce using rule 329 (class_key)


State 34

  214 simple_type_specifier: UNSIGNED .

    $default  reduce using rule 214 (simple_type_specifier)


State 35

  247 using_declaration: USING . TYPENAME COLONCOLON nested_name_specifier unqualified_id ';'
  248                  | USING . TYPENAME nested_name_specifier unqualified_id ';'
  249                  | USING . COLONCOLON nested_name_specifier unqualified_id ';'
  250                  | USING . nested_name_specifier unqualified_id ';'
  251                  | USING . COLONCOLON unqualified_id ';'
  252 using_directive: USING . NAMESPACE COLONCOLON nested_name_specifier namespace_name ';'
  253                | USING . NAMESPACE COLONCOLON namespace_name ';'
  254                | USING . NAMESPACE nested_name_specifier namespace_name ';'
  255                | USING . NAMESPACE namespace_name ';'

    CLASS_NAME      shift, and go to state 100
    COLONCOLON      shift, and go to state 165
    NAMESPACE       shift, and go to state 166
    TYPENAME        shift, and go to state 167
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    nested_name_specifier    go to state 168
    template_id              go to state 93


State 36

  197 function_specifier: VIRTUAL .

    $default  reduce using rule 197 (function_specifier)


State 37

  217 simple_type_specifier: VOID .

    $default  reduce using rule 217 (simple_type_specifier)


State 38

  284 cv_qualifier: VOLATILE .

    $default  reduce using rule 284 (cv_qualifier)


State 39

  208 simple_type_specifier: WCHAR_T .

    $default  reduce using rule 208 (simple_type_specifier)


State 40

  273 direct_declarator: '(' . declarator ')'

    IDENTIFIER      shift, and go to state 1
    CLASS_NAME      shift, and go to state 3
    COLONCOLON      shift, and go to state 169
    OPERATOR        shift, and go to state 24
    '('             shift, and go to state 40
    '&'             shift, and go to state 41
    '*'             shift, and go to state 42
    '~'             shift, and go to state 43
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 54
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 170
    declarator               go to state 171
    direct_declarator        go to state 82
    ptr_operator             go to state 83
    declarator_id            go to state 85
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 41

  276 ptr_operator: '&' .

    $default  reduce using rule 276 (ptr_operator)


State 42

  274 ptr_operator: '*' .
  275             | '*' . cv_qualifier_seq

    CONST     shift, and go to state 11
    VOLATILE  shift, and go to state 38

    $default  reduce using rule 274 (ptr_operator)

    cv_qualifier_seq  go to state 172
    cv_qualifier      go to state 173


State 43

   30 unqualified_id: '~' . class_name

    CLASS_NAME     shift, and go to state 100
    TEMPLATE_NAME  shift, and go to state 45

    class_name     go to state 174
    template_name  go to state 51
    template_id    go to state 93


State 44

    3 original_namespace_name: NAMESPACE_NAME .

    $default  reduce using rule 3 (original_namespace_name)


State 45

    7 template_name: TEMPLATE_NAME .

    $default  reduce using rule 7 (template_name)


State 46

  220 type_name: typedef_name .

    $default  reduce using rule 220 (type_name)


State 47

   34 nested_name_specifier: namespace_name . COLONCOLON nested_name_specifier

    COLONCOLON  shift, and go to state 175


State 48

    2 namespace_name: original_namespace_name .

    $default  reduce using rule 2 (namespace_name)


State 49

   33 nested_name_specifier: class_name . COLONCOLON nested_name_specifier
   35                      | class_name . COLONCOLON
  218 type_name: class_name .

    COLONCOLON  shift, and go to state 176

    COLONCOLON  [reduce using rule 218 (type_name)]
    $default    reduce using rule 218 (type_name)


State 50

  219 type_name: enum_name .

    $default  reduce using rule 219 (type_name)


State 51

  432 template_id: template_name . '<' template_argument_list '>'

    '<'  shift, and go to state 177


State 52

   27 unqualified_id: identifier .

    $default  reduce using rule 27 (unqualified_id)


State 53

    0 $accept: translation_unit . $end

    $end  shift, and go to state 178


State 54

  285 declarator_id: id_expression .

    $default  reduce using rule 285 (declarator_id)


State 55

   25 id_expression: unqualified_id .

    $default  reduce using rule 25 (id_expression)


State 56

   26 id_expression: qualified_id .

    $default  reduce using rule 26 (id_expression)


State 57

   31 qualified_id: nested_name_specifier . unqualified_id
   32             | nested_name_specifier . TEMPLATE unqualified_id
  205 simple_type_specifier: nested_name_specifier . type_name
  277 ptr_operator: nested_name_specifier . '*'
  278             | nested_name_specifier . '*' cv_qualifier_seq

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 100
    ENUM_NAME      shift, and go to state 4
    OPERATOR       shift, and go to state 24
    TEMPLATE       shift, and go to state 179
    '*'            shift, and go to state 180
    '~'            shift, and go to state 43
    TEMPLATE_NAME  shift, and go to state 45

    typedef_name            go to state 46
    class_name              go to state 181
    enum_name               go to state 50
    template_name           go to state 51
    identifier              go to state 52
    unqualified_id          go to state 182
    type_name               go to state 183
    conversion_function_id  go to state 90
    operator_function_id    go to state 91
    template_id             go to state 93


State 58

  169 declaration_seq: declaration_seq . declaration
  453 declaration_seq_opt: declaration_seq .

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    CLASS_NAME      shift, and go to state 3
    ENUM_NAME       shift, and go to state 4
    COLONCOLON      shift, and go to state 5
    ASM             shift, and go to state 6
    AUTO            shift, and go to state 7
    BOOL            shift, and go to state 8
    CHAR            shift, and go to state 9
    CLASS           shift, and go to state 10
    CONST           shift, and go to state 11
    DOUBLE          shift, and go to state 12
    ENUM            shift, and go to state 13
    EXPLICIT        shift, and go to state 14
    EXPORT          shift, and go to state 15
    EXTERN          shift, and go to state 16
    FLOAT           shift, and go to state 17
    FRIEND          shift, and go to state 18
    INLINE          shift, and go to state 19
    INT             shift, and go to state 20
    LONG            shift, and go to state 21
    MUTABLE         shift, and go to state 22
    NAMESPACE       shift, and go to state 23
    OPERATOR        shift, and go to state 24
    REGISTER        shift, and go to state 25
    SHORT           shift, and go to state 26
    SIGNED          shift, and go to state 27
    STATIC          shift, and go to state 28
    STRUCT          shift, and go to state 29
    TEMPLATE        shift, and go to state 30
    TYPEDEF         shift, and go to state 31
    TYPENAME        shift, and go to state 32
    UNION           shift, and go to state 33
    UNSIGNED        shift, and go to state 34
    USING           shift, and go to state 35
    VIRTUAL         shift, and go to state 36
    VOID            shift, and go to state 37
    VOLATILE        shift, and go to state 38
    WCHAR_T         shift, and go to state 39
    '('             shift, and go to state 40
    '&'             shift, and go to state 41
    '*'             shift, and go to state 42
    '~'             shift, and go to state 43
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    TEMPLATE  [reduce using rule 495 (EXPORT_opt)]
    $default  reduce using rule 453 (declaration_seq_opt)

    typedef_name                    go to state 46
    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 49
    enum_name                       go to state 50
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 57
    declaration                     go to state 184
    block_declaration               go to state 60
    simple_declaration              go to state 61
    decl_specifier                  go to state 62
    decl_specifier_seq              go to state 63
    storage_class_specifier         go to state 64
    function_specifier              go to state 65
    type_specifier                  go to state 66
    simple_type_specifier           go to state 67
    type_name                       go to state 68
    elaborated_type_specifier       go to state 69
    enum_specifier                  go to state 70
    namespace_definition            go to state 71
    named_namespace_definition      go to state 72
    original_namespace_definition   go to state 73
    extension_namespace_definition  go to state 74
    unnamed_namespace_definition    go to state 75
    namespace_alias_definition      go to state 76
    using_declaration               go to state 77
    using_directive                 go to state 78
    asm_definition                  go to state 79
    linkage_specification           go to state 80
    declarator                      go to state 81
    direct_declarator               go to state 82
    ptr_operator                    go to state 83
    cv_qualifier                    go to state 84
    declarator_id                   go to state 85
    function_definition             go to state 86
    class_specifier                 go to state 87
    class_head                      go to state 88
    class_key                       go to state 89
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_declaration            go to state 92
    template_id                     go to state 93
    explicit_instantiation          go to state 94
    explicit_specialization         go to state 95
    EXPORT_opt                      go to state 97


State 59

  168 declaration_seq: declaration .

    $default  reduce using rule 168 (declaration_seq)


State 60

  170 declaration: block_declaration .

    $default  reduce using rule 170 (declaration)


State 61

  177 block_declaration: simple_declaration .

    $default  reduce using rule 177 (block_declaration)


State 62

  189 decl_specifier_seq: decl_specifier .

    $default  reduce using rule 189 (decl_specifier_seq)


State 63

  182 simple_declaration: decl_specifier_seq . init_declarator_list ';'
  183                   | decl_specifier_seq . ';'
  190 decl_specifier_seq: decl_specifier_seq . decl_specifier
  311 function_definition: decl_specifier_seq . declarator ctor_initializer_opt function_body
  313                    | decl_specifier_seq . declarator function_try_block

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    CLASS_NAME      shift, and go to state 3
    ENUM_NAME       shift, and go to state 4
    COLONCOLON      shift, and go to state 5
    AUTO            shift, and go to state 7
    BOOL            shift, and go to state 8
    CHAR            shift, and go to state 9
    CLASS           shift, and go to state 10
    CONST           shift, and go to state 11
    DOUBLE          shift, and go to state 12
    ENUM            shift, and go to state 13
    EXPLICIT        shift, and go to state 14
    EXTERN          shift, and go to state 185
    FLOAT           shift, and go to state 17
    FRIEND          shift, and go to state 18
    INLINE          shift, and go to state 19
    INT             shift, and go to state 20
    LONG            shift, and go to state 21
    MUTABLE         shift, and go to state 22
    OPERATOR        shift, and go to state 24
    REGISTER        shift, and go to state 25
    SHORT           shift, and go to state 26
    SIGNED          shift, and go to state 27
    STATIC          shift, and go to state 28
    STRUCT          shift, and go to state 29
    TYPEDEF         shift, and go to state 31
    TYPENAME        shift, and go to state 32
    UNION           shift, and go to state 33
    UNSIGNED        shift, and go to state 34
    VIRTUAL         shift, and go to state 36
    VOID            shift, and go to state 37
    VOLATILE        shift, and go to state 38
    WCHAR_T         shift, and go to state 39
    ';'             shift, and go to state 186
    '('             shift, and go to state 40
    '&'             shift, and go to state 41
    '*'             shift, and go to state 42
    '~'             shift, and go to state 43
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 52
    id_expression              go to state 54
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 57
    decl_specifier             go to state 187
    storage_class_specifier    go to state 64
    function_specifier         go to state 65
    type_specifier             go to state 66
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    init_declarator_list       go to state 188
    init_declarator            go to state 189
    declarator                 go to state 190
    direct_declarator          go to state 82
    ptr_operator               go to state 83
    cv_qualifier               go to state 84
    declarator_id              go to state 85
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 64

  184 decl_specifier: storage_class_specifier .

    $default  reduce using rule 184 (decl_specifier)


State 65

  186 decl_specifier: function_specifier .

    $default  reduce using rule 186 (decl_specifier)


State 66

  185 decl_specifier: type_specifier .

    $default  reduce using rule 185 (decl_specifier)


State 67

  199 type_specifier: simple_type_specifier .

    $default  reduce using rule 199 (type_specifier)


State 68

  204 simple_type_specifier: type_name .

    $default  reduce using rule 204 (simple_type_specifier)


State 69

  202 type_specifier: elaborated_type_specifier .

    $default  reduce using rule 202 (type_specifier)


State 70

  201 type_specifier: enum_specifier .

    $default  reduce using rule 201 (type_specifier)


State 71

  176 declaration: namespace_definition .

    $default  reduce using rule 176 (declaration)


State 72

  234 namespace_definition: named_namespace_definition .

    $default  reduce using rule 234 (namespace_definition)


State 73

  236 named_namespace_definition: original_namespace_definition .

    $default  reduce using rule 236 (named_namespace_definition)


State 74

  237 named_namespace_definition: extension_namespace_definition .

    $default  reduce using rule 237 (named_namespace_definition)


State 75

  235 namespace_definition: unnamed_namespace_definition .

    $default  reduce using rule 235 (namespace_definition)


State 76

  179 block_declaration: namespace_alias_definition .

    $default  reduce using rule 179 (block_declaration)


State 77

  180 block_declaration: using_declaration .

    $default  reduce using rule 180 (block_declaration)


State 78

  181 block_declaration: using_directive .

    $default  reduce using rule 181 (block_declaration)


State 79

  178 block_declaration: asm_definition .

    $default  reduce using rule 178 (block_declaration)


State 80

  175 declaration: linkage_specification .

    $default  reduce using rule 175 (declaration)


State 81

  310 function_definition: declarator . ctor_initializer_opt function_body
  312                    | declarator . function_try_block

    TRY  shift, and go to state 191
    ':'  shift, and go to state 192

    $default  reduce using rule 484 (ctor_initializer_opt)

    ctor_initializer      go to state 193
    function_try_block    go to state 194
    ctor_initializer_opt  go to state 195


State 82

  262 declarator: direct_declarator .
  265 direct_declarator: direct_declarator . '(' parameter_declaration_clause ')' cv_qualifier_seq exception_specification
  266                  | direct_declarator . '(' parameter_declaration_clause ')' cv_qualifier_seq
  267                  | direct_declarator . '(' parameter_declaration_clause ')' exception_specification
  268                  | direct_declarator . '(' parameter_declaration_clause ')'
  272                  | direct_declarator . '[' constant_expression_opt ']'

    '('  shift, and go to state 196
    '['  shift, and go to state 197

    '('       [reduce using rule 262 (declarator)]
    $default  reduce using rule 262 (declarator)


State 83

  263 declarator: ptr_operator . declarator

    IDENTIFIER      shift, and go to state 1
    CLASS_NAME      shift, and go to state 3
    COLONCOLON      shift, and go to state 169
    OPERATOR        shift, and go to state 24
    '('             shift, and go to state 40
    '&'             shift, and go to state 41
    '*'             shift, and go to state 42
    '~'             shift, and go to state 43
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 54
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 170
    declarator               go to state 198
    direct_declarator        go to state 82
    ptr_operator             go to state 83
    declarator_id            go to state 85
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 84

  203 type_specifier: cv_qualifier .

    $default  reduce using rule 203 (type_specifier)


State 85

  264 direct_declarator: declarator_id .

    $default  reduce using rule 264 (direct_declarator)


State 86

  171 declaration: function_definition .

    $default  reduce using rule 171 (declaration)


State 87

  200 type_specifier: class_specifier .

    $default  reduce using rule 200 (type_specifier)


State 88

  322 class_specifier: class_head . '{' member_specification_opt '}'

    '{'  shift, and go to state 199


State 89

  221 elaborated_type_specifier: class_key . COLONCOLON nested_name_specifier identifier
  222                          | class_key . COLONCOLON identifier
  323 class_head: class_key . identifier
  324           | class_key . identifier base_clause
  325           | class_key . nested_name_specifier identifier
  326           | class_key . nested_name_specifier identifier base_clause

    IDENTIFIER      shift, and go to state 1
    CLASS_NAME      shift, and go to state 100
    COLONCOLON      shift, and go to state 200
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 201
    nested_name_specifier    go to state 202
    template_id              go to state 93


State 90

   29 unqualified_id: conversion_function_id .

    $default  reduce using rule 29 (unqualified_id)


State 91

   28 unqualified_id: operator_function_id .

    $default  reduce using rule 28 (unqualified_id)


State 92

  172 declaration: template_declaration .

    $default  reduce using rule 172 (declaration)


State 93

    5 class_name: template_id .

    $default  reduce using rule 5 (class_name)


State 94

  173 declaration: explicit_instantiation .

    $default  reduce using rule 173 (declaration)


State 95

  174 declaration: explicit_specialization .

    $default  reduce using rule 174 (declaration)


State 96

   20 translation_unit: declaration_seq_opt .

    $default  reduce using rule 20 (translation_unit)


State 97

  421 template_declaration: EXPORT_opt . TEMPLATE '<' template_parameter_list '>' declaration

    TEMPLATE  shift, and go to state 203


State 98

  270 direct_declarator: CLASS_NAME COLONCOLON . declarator_id '(' parameter_declaration_clause ')'
  271                  | CLASS_NAME COLONCOLON . CLASS_NAME '(' parameter_declaration_clause ')'

    IDENTIFIER      shift, and go to state 1
    CLASS_NAME      shift, and go to state 204
    COLONCOLON      shift, and go to state 205
    OPERATOR        shift, and go to state 24
    '~'             shift, and go to state 43
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 54
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    declarator_id            go to state 207
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 99

  269 direct_declarator: CLASS_NAME '(' . parameter_declaration_clause ')'

    TYPEDEF_NAME    shift, and go to state 2
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 4
    ELLIPSIS        shift, and go to state 208
    COLONCOLON      shift, and go to state 115
    AUTO            shift, and go to state 7
    BOOL            shift, and go to state 8
    CHAR            shift, and go to state 9
    CLASS           shift, and go to state 10
    CONST           shift, and go to state 11
    DOUBLE          shift, and go to state 12
    ENUM            shift, and go to state 13
    EXPLICIT        shift, and go to state 14
    EXTERN          shift, and go to state 185
    FLOAT           shift, and go to state 17
    FRIEND          shift, and go to state 18
    INLINE          shift, and go to state 19
    INT             shift, and go to state 20
    LONG            shift, and go to state 21
    MUTABLE         shift, and go to state 22
    REGISTER        shift, and go to state 25
    SHORT           shift, and go to state 26
    SIGNED          shift, and go to state 27
    STATIC          shift, and go to state 28
    STRUCT          shift, and go to state 29
    TYPEDEF         shift, and go to state 31
    TYPENAME        shift, and go to state 32
    UNION           shift, and go to state 33
    UNSIGNED        shift, and go to state 34
    VIRTUAL         shift, and go to state 36
    VOID            shift, and go to state 37
    VOLATILE        shift, and go to state 38
    WCHAR_T         shift, and go to state 39
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    $default  reduce using rule 303 (parameter_declaration_clause)

    typedef_name                  go to state 46
    namespace_name                go to state 47
    original_namespace_name       go to state 48
    class_name                    go to state 49
    enum_name                     go to state 50
    template_name                 go to state 51
    nested_name_specifier         go to state 156
    decl_specifier                go to state 62
    decl_specifier_seq            go to state 209
    storage_class_specifier       go to state 64
    function_specifier            go to state 65
    type_specifier                go to state 66
    simple_type_specifier         go to state 67
    type_name                     go to state 68
    elaborated_type_specifier     go to state 69
    enum_specifier                go to state 70
    cv_qualifier                  go to state 84
    parameter_declaration_clause  go to state 210
    parameter_declaration_list    go to state 211
    parameter_declaration         go to state 212
    class_specifier               go to state 87
    class_head                    go to state 88
    class_key                     go to state 89
    template_id                   go to state 93


State 100

    4 class_name: CLASS_NAME .

    $default  reduce using rule 4 (class_name)


State 101

  286 declarator_id: COLONCOLON id_expression .

    $default  reduce using rule 286 (declarator_id)


State 102

   31 qualified_id: nested_name_specifier . unqualified_id
   32             | nested_name_specifier . TEMPLATE unqualified_id
  279 ptr_operator: COLONCOLON nested_name_specifier . '*'
  280             | COLONCOLON nested_name_specifier . '*' cv_qualifier_seq
  287 declarator_id: COLONCOLON nested_name_specifier . type_name
  455 nested_name_specifier_opt: nested_name_specifier .

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 100
    ENUM_NAME      shift, and go to state 4
    OPERATOR       shift, and go to state 24
    TEMPLATE       shift, and go to state 179
    '*'            shift, and go to state 213
    '~'            shift, and go to state 43
    TEMPLATE_NAME  shift, and go to state 45

    TYPEDEF_NAME   [reduce using rule 455 (nested_name_specifier_opt)]
    CLASS_NAME     [reduce using rule 455 (nested_name_specifier_opt)]
    ENUM_NAME      [reduce using rule 455 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 455 (nested_name_specifier_opt)]

    typedef_name            go to state 46
    class_name              go to state 181
    enum_name               go to state 50
    template_name           go to state 51
    identifier              go to state 52
    unqualified_id          go to state 182
    type_name               go to state 214
    conversion_function_id  go to state 90
    operator_function_id    go to state 91
    template_id             go to state 93


State 103

  288 declarator_id: COLONCOLON type_name .

    $default  reduce using rule 288 (declarator_id)


State 104

  206 simple_type_specifier: COLONCOLON nested_name_specifier_opt . type_name

    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 100
    ENUM_NAME      shift, and go to state 4
    TEMPLATE_NAME  shift, and go to state 45

    typedef_name   go to state 46
    class_name     go to state 181
    enum_name      go to state 50
    template_name  go to state 51
    type_name      go to state 215
    template_id    go to state 93


State 105

  256 asm_definition: ASM '(' . string_literal ')' ';'

    STRING  shift, and go to state 110

    string_literal  go to state 216


State 106

  223 elaborated_type_specifier: ENUM COLONCOLON . nested_name_specifier identifier
  224                          | ENUM COLONCOLON . identifier

    IDENTIFIER      shift, and go to state 1
    CLASS_NAME      shift, and go to state 100
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 217
    nested_name_specifier    go to state 218
    template_id              go to state 93


State 107

   33 nested_name_specifier: class_name . COLONCOLON nested_name_specifier
   35                      | class_name . COLONCOLON

    COLONCOLON  shift, and go to state 176


State 108

  228 enum_specifier: ENUM identifier . '{' enumerator_list_opt '}'

    '{'  shift, and go to state 219


State 109

  225 elaborated_type_specifier: ENUM nested_name_specifier . identifier

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 220


State 110

   17 string_literal: STRING .

    $default  reduce using rule 17 (string_literal)


State 111

  257 linkage_specification: EXTERN string_literal . '{' declaration_seq_opt '}'
  258                      | EXTERN string_literal . declaration

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    CLASS_NAME      shift, and go to state 3
    ENUM_NAME       shift, and go to state 4
    COLONCOLON      shift, and go to state 5
    ASM             shift, and go to state 6
    AUTO            shift, and go to state 7
    BOOL            shift, and go to state 8
    CHAR            shift, and go to state 9
    CLASS           shift, and go to state 10
    CONST           shift, and go to state 11
    DOUBLE          shift, and go to state 12
    ENUM            shift, and go to state 13
    EXPLICIT        shift, and go to state 14
    EXPORT          shift, and go to state 15
    EXTERN          shift, and go to state 16
    FLOAT           shift, and go to state 17
    FRIEND          shift, and go to state 18
    INLINE          shift, and go to state 19
    INT             shift, and go to state 20
    LONG            shift, and go to state 21
    MUTABLE         shift, and go to state 22
    NAMESPACE       shift, and go to state 23
    OPERATOR        shift, and go to state 24
    REGISTER        shift, and go to state 25
    SHORT           shift, and go to state 26
    SIGNED          shift, and go to state 27
    STATIC          shift, and go to state 28
    STRUCT          shift, and go to state 29
    TEMPLATE        shift, and go to state 30
    TYPEDEF         shift, and go to state 31
    TYPENAME        shift, and go to state 32
    UNION           shift, and go to state 33
    UNSIGNED        shift, and go to state 34
    USING           shift, and go to state 35
    VIRTUAL         shift, and go to state 36
    VOID            shift, and go to state 37
    VOLATILE        shift, and go to state 38
    WCHAR_T         shift, and go to state 39
    '('             shift, and go to state 40
    '{'             shift, and go to state 221
    '&'             shift, and go to state 41
    '*'             shift, and go to state 42
    '~'             shift, and go to state 43
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    TEMPLATE  [reduce using rule 495 (EXPORT_opt)]

    typedef_name                    go to state 46
    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 49
    enum_name                       go to state 50
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 57
    declaration                     go to state 222
    block_declaration               go to state 60
    simple_declaration              go to state 61
    decl_specifier                  go to state 62
    decl_specifier_seq              go to state 63
    storage_class_specifier         go to state 64
    function_specifier              go to state 65
    type_specifier                  go to state 66
    simple_type_specifier           go to state 67
    type_name                       go to state 68
    elaborated_type_specifier       go to state 69
    enum_specifier                  go to state 70
    namespace_definition            go to state 71
    named_namespace_definition      go to state 72
    original_namespace_definition   go to state 73
    extension_namespace_definition  go to state 74
    unnamed_namespace_definition    go to state 75
    namespace_alias_definition      go to state 76
    using_declaration               go to state 77
    using_directive                 go to state 78
    asm_definition                  go to state 79
    linkage_specification           go to state 80
    declarator                      go to state 81
    direct_declarator               go to state 82
    ptr_operator                    go to state 83
    cv_qualifier                    go to state 84
    declarator_id                   go to state 85
    function_definition             go to state 86
    class_specifier                 go to state 87
    class_head                      go to state 88
    class_key                       go to state 89
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_declaration            go to state 92
    template_id                     go to state 93
    explicit_instantiation          go to state 94
    explicit_specialization         go to state 95
    EXPORT_opt                      go to state 97


State 112

  240 unnamed_namespace_definition: NAMESPACE '{' . namespace_body '}'

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    CLASS_NAME      shift, and go to state 3
    ENUM_NAME       shift, and go to state 4
    COLONCOLON      shift, and go to state 5
    ASM             shift, and go to state 6
    AUTO            shift, and go to state 7
    BOOL            shift, and go to state 8
    CHAR            shift, and go to state 9
    CLASS           shift, and go to state 10
    CONST           shift, and go to state 11
    DOUBLE          shift, and go to state 12
    ENUM            shift, and go to state 13
    EXPLICIT        shift, and go to state 14
    EXPORT          shift, and go to state 15
    EXTERN          shift, and go to state 16
    FLOAT           shift, and go to state 17
    FRIEND          shift, and go to state 18
    INLINE          shift, and go to state 19
    INT             shift, and go to state 20
    LONG            shift, and go to state 21
    MUTABLE         shift, and go to state 22
    NAMESPACE       shift, and go to state 23
    OPERATOR        shift, and go to state 24
    REGISTER        shift, and go to state 25
    SHORT           shift, and go to state 26
    SIGNED          shift, and go to state 27
    STATIC          shift, and go to state 28
    STRUCT          shift, and go to state 29
    TEMPLATE        shift, and go to state 30
    TYPEDEF         shift, and go to state 31
    TYPENAME        shift, and go to state 32
    UNION           shift, and go to state 33
    UNSIGNED        shift, and go to state 34
    USING           shift, and go to state 35
    VIRTUAL         shift, and go to state 36
    VOID            shift, and go to state 37
    VOLATILE        shift, and go to state 38
    WCHAR_T         shift, and go to state 39
    '('             shift, and go to state 40
    '&'             shift, and go to state 41
    '*'             shift, and go to state 42
    '~'             shift, and go to state 43
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    TEMPLATE  [reduce using rule 495 (EXPORT_opt)]
    $default  reduce using rule 452 (declaration_seq_opt)

    typedef_name                    go to state 46
    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 49
    enum_name                       go to state 50
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 57
    declaration_seq                 go to state 58
    declaration                     go to state 59
    block_declaration               go to state 60
    simple_declaration              go to state 61
    decl_specifier                  go to state 62
    decl_specifier_seq              go to state 63
    storage_class_specifier         go to state 64
    function_specifier              go to state 65
    type_specifier                  go to state 66
    simple_type_specifier           go to state 67
    type_name                       go to state 68
    elaborated_type_specifier       go to state 69
    enum_specifier                  go to state 70
    namespace_definition            go to state 71
    named_namespace_definition      go to state 72
    original_namespace_definition   go to state 73
    extension_namespace_definition  go to state 74
    unnamed_namespace_definition    go to state 75
    namespace_body                  go to state 223
    namespace_alias_definition      go to state 76
    using_declaration               go to state 77
    using_directive                 go to state 78
    asm_definition                  go to state 79
    linkage_specification           go to state 80
    declarator                      go to state 81
    direct_declarator               go to state 82
    ptr_operator                    go to state 83
    cv_qualifier                    go to state 84
    declarator_id                   go to state 85
    function_definition             go to state 86
    class_specifier                 go to state 87
    class_head                      go to state 88
    class_key                       go to state 89
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_declaration            go to state 92
    template_id                     go to state 93
    explicit_instantiation          go to state 94
    explicit_specialization         go to state 95
    declaration_seq_opt             go to state 224
    EXPORT_opt                      go to state 97


State 113

  239 extension_namespace_definition: NAMESPACE original_namespace_name . '{' namespace_body '}'

    '{'  shift, and go to state 225


State 114

  238 original_namespace_definition: NAMESPACE identifier . '{' namespace_body '}'
  242 namespace_alias_definition: NAMESPACE identifier . '=' qualified_namespace_specifier ';'

    '{'  shift, and go to state 226
    '='  shift, and go to state 227


State 115

  206 simple_type_specifier: COLONCOLON . nested_name_specifier_opt type_name

    CLASS_NAME      shift, and go to state 100
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    CLASS_NAME     [reduce using rule 454 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 454 (nested_name_specifier_opt)]
    $default       reduce using rule 454 (nested_name_specifier_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    nested_name_specifier      go to state 228
    template_id                go to state 93
    nested_name_specifier_opt  go to state 104


State 116

  396 operator: ADDEQ .

    $default  reduce using rule 396 (operator)


State 117

  397 operator: SUBEQ .

    $default  reduce using rule 397 (operator)


State 118

  398 operator: MULEQ .

    $default  reduce using rule 398 (operator)


State 119

  399 operator: DIVEQ .

    $default  reduce using rule 399 (operator)


State 120

  400 operator: MODEQ .

    $default  reduce using rule 400 (operator)


State 121

  401 operator: XOREQ .

    $default  reduce using rule 401 (operator)


State 122

  402 operator: ANDEQ .

    $default  reduce using rule 402 (operator)


State 123

  403 operator: OREQ .

    $default  reduce using rule 403 (operator)


State 124

  404 operator: SL .

    $default  reduce using rule 404 (operator)


State 125

  405 operator: SR .

    $default  reduce using rule 405 (operator)


State 126

  406 operator: SREQ .

    $default  reduce using rule 406 (operator)


State 127

  407 operator: SLEQ .

    $default  reduce using rule 407 (operator)


State 128

  408 operator: EQ .

    $default  reduce using rule 408 (operator)


State 129

  409 operator: NOTEQ .

    $default  reduce using rule 409 (operator)


State 130

  410 operator: LTEQ .

    $default  reduce using rule 410 (operator)


State 131

  411 operator: GTEQ .

    $default  reduce using rule 411 (operator)


State 132

  412 operator: ANDAND .

    $default  reduce using rule 412 (operator)


State 133

  413 operator: OROR .

    $default  reduce using rule 413 (operator)


State 134

  414 operator: PLUSPLUS .

    $default  reduce using rule 414 (operator)


State 135

  415 operator: MINUSMINUS .

    $default  reduce using rule 415 (operator)


State 136

  417 operator: ARROWSTAR .

    $default  reduce using rule 417 (operator)


State 137

  418 operator: ARROW .

    $default  reduce using rule 418 (operator)


State 138

  380 operator: DELETE .
  382         | DELETE . '[' ']'

    '['  shift, and go to state 229

    '['       [reduce using rule 380 (operator)]
    $default  reduce using rule 380 (operator)


State 139

  379 operator: NEW .
  381         | NEW . '[' ']'

    '['  shift, and go to state 230

    '['       [reduce using rule 379 (operator)]
    $default  reduce using rule 379 (operator)


State 140

  419 operator: '(' . ')'

    ')'  shift, and go to state 231


State 141

  416 operator: ',' .

    $default  reduce using rule 416 (operator)


State 142

  420 operator: '[' . ']'

    ']'  shift, and go to state 232


State 143

  389 operator: '&' .

    $default  reduce using rule 389 (operator)


State 144

  394 operator: '<' .

    $default  reduce using rule 394 (operator)


State 145

  395 operator: '>' .

    $default  reduce using rule 395 (operator)


State 146

  384 operator: '_' .

    $default  reduce using rule 384 (operator)


State 147

  383 operator: '+' .

    $default  reduce using rule 383 (operator)


State 148

  393 operator: '=' .

    $default  reduce using rule 393 (operator)


State 149

  387 operator: '%' .

    $default  reduce using rule 387 (operator)


State 150

  385 operator: '*' .

    $default  reduce using rule 385 (operator)


State 151

  386 operator: '/' .

    $default  reduce using rule 386 (operator)


State 152

  390 operator: '|' .

    $default  reduce using rule 390 (operator)


State 153

  388 operator: '^' .

    $default  reduce using rule 388 (operator)


State 154

  392 operator: '!' .

    $default  reduce using rule 392 (operator)


State 155

  391 operator: '~' .

    $default  reduce using rule 391 (operator)


State 156

  205 simple_type_specifier: nested_name_specifier . type_name

    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 100
    ENUM_NAME      shift, and go to state 4
    TEMPLATE_NAME  shift, and go to state 45

    typedef_name   go to state 46
    class_name     go to state 181
    enum_name      go to state 50
    template_name  go to state 51
    type_name      go to state 183
    template_id    go to state 93


State 157

  290 type_specifier_seq: type_specifier . type_specifier_seq_opt

    TYPEDEF_NAME    shift, and go to state 2
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 4
    COLONCOLON      shift, and go to state 115
    BOOL            shift, and go to state 8
    CHAR            shift, and go to state 9
    CLASS           shift, and go to state 10
    CONST           shift, and go to state 11
    DOUBLE          shift, and go to state 12
    ENUM            shift, and go to state 13
    FLOAT           shift, and go to state 17
    INT             shift, and go to state 20
    LONG            shift, and go to state 21
    SHORT           shift, and go to state 26
    SIGNED          shift, and go to state 27
    STRUCT          shift, and go to state 29
    TYPENAME        shift, and go to state 32
    UNION           shift, and go to state 33
    UNSIGNED        shift, and go to state 34
    VOID            shift, and go to state 37
    VOLATILE        shift, and go to state 38
    WCHAR_T         shift, and go to state 39
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    CLASS_NAME      [reduce using rule 480 (type_specifier_seq_opt)]
    COLONCOLON      [reduce using rule 480 (type_specifier_seq_opt)]
    NAMESPACE_NAME  [reduce using rule 480 (type_specifier_seq_opt)]
    TEMPLATE_NAME   [reduce using rule 480 (type_specifier_seq_opt)]
    $default        reduce using rule 480 (type_specifier_seq_opt)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_specifier_seq         go to state 233
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93
    type_specifier_seq_opt     go to state 234


State 158

  367 conversion_type_id: type_specifier_seq . conversion_declarator_opt

    CLASS_NAME      shift, and go to state 100
    COLONCOLON      shift, and go to state 235
    '&'             shift, and go to state 41
    '*'             shift, and go to state 42
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    '&'       [reduce using rule 492 (conversion_declarator_opt)]
    '*'       [reduce using rule 492 (conversion_declarator_opt)]
    $default  reduce using rule 492 (conversion_declarator_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    nested_name_specifier      go to state 236
    ptr_operator               go to state 237
    conversion_declarator      go to state 238
    template_id                go to state 93
    conversion_declarator_opt  go to state 239


State 159

  366 conversion_function_id: OPERATOR conversion_type_id .

    $default  reduce using rule 366 (conversion_function_id)


State 160

  378 operator_function_id: OPERATOR operator .

    $default  reduce using rule 378 (operator_function_id)


State 161

  439 explicit_specialization: TEMPLATE '<' . '>' declaration

    '>'  shift, and go to state 240


State 162

  438 explicit_instantiation: TEMPLATE declaration .

    $default  reduce using rule 438 (explicit_instantiation)


State 163

  459 COLONCOLON_opt: COLONCOLON .

    $default  reduce using rule 459 (COLONCOLON_opt)


State 164

  226 elaborated_type_specifier: TYPENAME COLONCOLON_opt . nested_name_specifier identifier
  227                          | TYPENAME COLONCOLON_opt . nested_name_specifier identifier '<' template_argument_list '>'

    CLASS_NAME      shift, and go to state 100
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    nested_name_specifier    go to state 241
    template_id              go to state 93


State 165

  249 using_declaration: USING COLONCOLON . nested_name_specifier unqualified_id ';'
  251                  | USING COLONCOLON . unqualified_id ';'

    IDENTIFIER      shift, and go to state 1
    CLASS_NAME      shift, and go to state 100
    OPERATOR        shift, and go to state 24
    '~'             shift, and go to state 43
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    unqualified_id           go to state 242
    nested_name_specifier    go to state 243
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 166

  252 using_directive: USING NAMESPACE . COLONCOLON nested_name_specifier namespace_name ';'
  253                | USING NAMESPACE . COLONCOLON namespace_name ';'
  254                | USING NAMESPACE . nested_name_specifier namespace_name ';'
  255                | USING NAMESPACE . namespace_name ';'

    CLASS_NAME      shift, and go to state 100
    COLONCOLON      shift, and go to state 244
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    namespace_name           go to state 245
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    nested_name_specifier    go to state 246
    template_id              go to state 93


State 167

  247 using_declaration: USING TYPENAME . COLONCOLON nested_name_specifier unqualified_id ';'
  248                  | USING TYPENAME . nested_name_specifier unqualified_id ';'

    CLASS_NAME      shift, and go to state 100
    COLONCOLON      shift, and go to state 247
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    nested_name_specifier    go to state 248
    template_id              go to state 93


State 168

  250 using_declaration: USING nested_name_specifier . unqualified_id ';'

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 24
    '~'         shift, and go to state 43

    identifier              go to state 52
    unqualified_id          go to state 249
    conversion_function_id  go to state 90
    operator_function_id    go to state 91


State 169

  279 ptr_operator: COLONCOLON . nested_name_specifier '*'
  280             | COLONCOLON . nested_name_specifier '*' cv_qualifier_seq
  286 declarator_id: COLONCOLON . id_expression
  287              | COLONCOLON . nested_name_specifier type_name
  288              | COLONCOLON . type_name

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 4
    OPERATOR        shift, and go to state 24
    '~'             shift, and go to state 43
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    typedef_name             go to state 46
    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 49
    enum_name                go to state 50
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 101
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 250
    type_name                go to state 103
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 170

   31 qualified_id: nested_name_specifier . unqualified_id
   32             | nested_name_specifier . TEMPLATE unqualified_id
  277 ptr_operator: nested_name_specifier . '*'
  278             | nested_name_specifier . '*' cv_qualifier_seq

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 24
    TEMPLATE    shift, and go to state 179
    '*'         shift, and go to state 180
    '~'         shift, and go to state 43

    identifier              go to state 52
    unqualified_id          go to state 182
    conversion_function_id  go to state 90
    operator_function_id    go to state 91


State 171

  273 direct_declarator: '(' declarator . ')'

    ')'  shift, and go to state 251


State 172

  275 ptr_operator: '*' cv_qualifier_seq .

    $default  reduce using rule 275 (ptr_operator)


State 173

  281 cv_qualifier_seq: cv_qualifier .
  282                 | cv_qualifier . cv_qualifier_seq

    CONST     shift, and go to state 11
    VOLATILE  shift, and go to state 38

    $default  reduce using rule 281 (cv_qualifier_seq)

    cv_qualifier_seq  go to state 252
    cv_qualifier      go to state 173


State 174

   30 unqualified_id: '~' class_name .

    $default  reduce using rule 30 (unqualified_id)


State 175

   34 nested_name_specifier: namespace_name COLONCOLON . nested_name_specifier

    CLASS_NAME      shift, and go to state 100
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    nested_name_specifier    go to state 253
    template_id              go to state 93


State 176

   33 nested_name_specifier: class_name COLONCOLON . nested_name_specifier
   35                      | class_name COLONCOLON .

    CLASS_NAME      shift, and go to state 100
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    CLASS_NAME      [reduce using rule 35 (nested_name_specifier)]
    NAMESPACE_NAME  [reduce using rule 35 (nested_name_specifier)]
    TEMPLATE_NAME   [reduce using rule 35 (nested_name_specifier)]
    $default        reduce using rule 35 (nested_name_specifier)

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    nested_name_specifier    go to state 254
    template_id              go to state 93


State 177

  432 template_id: template_name '<' . template_argument_list '>'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 4
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 8
    CHAR              shift, and go to state 9
    CLASS             shift, and go to state 10
    CONST             shift, and go to state 11
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DOUBLE            shift, and go to state 12
    DYNAMIC_CAST      shift, and go to state 263
    ENUM              shift, and go to state 13
    FALSE             shift, and go to state 264
    FLOAT             shift, and go to state 17
    INT               shift, and go to state 20
    LONG              shift, and go to state 21
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SHORT             shift, and go to state 26
    SIGNED            shift, and go to state 27
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    STRUCT            shift, and go to state 29
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    TYPENAME          shift, and go to state 32
    UNION             shift, and go to state 33
    UNSIGNED          shift, and go to state 34
    VOID              shift, and go to state 37
    VOLATILE          shift, and go to state 38
    WCHAR_T           shift, and go to state 39
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 280
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 289
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 308
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 309
    type_specifier_seq         go to state 310
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    template_argument_list     go to state 311
    template_argument          go to state 312
    throw_expression           go to state 313


State 178

    0 $accept: translation_unit $end .

    $default  accept


State 179

   32 qualified_id: nested_name_specifier TEMPLATE . unqualified_id

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 24
    '~'         shift, and go to state 43

    identifier              go to state 52
    unqualified_id          go to state 314
    conversion_function_id  go to state 90
    operator_function_id    go to state 91


State 180

  277 ptr_operator: nested_name_specifier '*' .
  278             | nested_name_specifier '*' . cv_qualifier_seq

    CONST     shift, and go to state 11
    VOLATILE  shift, and go to state 38

    $default  reduce using rule 277 (ptr_operator)

    cv_qualifier_seq  go to state 315
    cv_qualifier      go to state 173


State 181

  218 type_name: class_name .

    $default  reduce using rule 218 (type_name)


State 182

   31 qualified_id: nested_name_specifier unqualified_id .

    $default  reduce using rule 31 (qualified_id)


State 183

  205 simple_type_specifier: nested_name_specifier type_name .

    $default  reduce using rule 205 (simple_type_specifier)


State 184

  169 declaration_seq: declaration_seq declaration .

    $default  reduce using rule 169 (declaration_seq)


State 185

  194 storage_class_specifier: EXTERN .

    $default  reduce using rule 194 (storage_class_specifier)


State 186

  183 simple_declaration: decl_specifier_seq ';' .

    $default  reduce using rule 183 (simple_declaration)


State 187

  190 decl_specifier_seq: decl_specifier_seq decl_specifier .

    $default  reduce using rule 190 (decl_specifier_seq)


State 188

  182 simple_declaration: decl_specifier_seq init_declarator_list . ';'
  260 init_declarator_list: init_declarator_list . ',' init_declarator

    ';'  shift, and go to state 316
    ','  shift, and go to state 317


State 189

  259 init_declarator_list: init_declarator .

    $default  reduce using rule 259 (init_declarator_list)


State 190

  261 init_declarator: declarator . initializer_opt
  311 function_definition: decl_specifier_seq declarator . ctor_initializer_opt function_body
  313                    | decl_specifier_seq declarator . function_try_block

    TRY  shift, and go to state 191
    '('  shift, and go to state 318
    '='  shift, and go to state 319
    ':'  shift, and go to state 192

    '{'       reduce using rule 484 (ctor_initializer_opt)
    $default  reduce using rule 474 (initializer_opt)

    initializer           go to state 320
    ctor_initializer      go to state 193
    function_try_block    go to state 321
    initializer_opt       go to state 322
    ctor_initializer_opt  go to state 323


State 191

  441 function_try_block: TRY . ctor_initializer_opt function_body handler_seq

    ':'  shift, and go to state 192

    $default  reduce using rule 484 (ctor_initializer_opt)

    ctor_initializer      go to state 193
    ctor_initializer_opt  go to state 324


State 192

  369 ctor_initializer: ':' . mem_initializer_list

    IDENTIFIER      shift, and go to state 1
    CLASS_NAME      shift, and go to state 100
    COLONCOLON      shift, and go to state 325
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 326
    template_name            go to state 51
    identifier               go to state 327
    nested_name_specifier    go to state 328
    mem_initializer_list     go to state 329
    mem_initializer          go to state 330
    mem_initializer_id       go to state 331
    template_id              go to state 93


State 193

  485 ctor_initializer_opt: ctor_initializer .

    $default  reduce using rule 485 (ctor_initializer_opt)


State 194

  312 function_definition: declarator function_try_block .

    $default  reduce using rule 312 (function_definition)


State 195

  310 function_definition: declarator ctor_initializer_opt . function_body

    '{'  shift, and go to state 332

    compound_statement  go to state 333
    function_body       go to state 334


State 196

  265 direct_declarator: direct_declarator '(' . parameter_declaration_clause ')' cv_qualifier_seq exception_specification
  266                  | direct_declarator '(' . parameter_declaration_clause ')' cv_qualifier_seq
  267                  | direct_declarator '(' . parameter_declaration_clause ')' exception_specification
  268                  | direct_declarator '(' . parameter_declaration_clause ')'

    TYPEDEF_NAME    shift, and go to state 2
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 4
    ELLIPSIS        shift, and go to state 208
    COLONCOLON      shift, and go to state 115
    AUTO            shift, and go to state 7
    BOOL            shift, and go to state 8
    CHAR            shift, and go to state 9
    CLASS           shift, and go to state 10
    CONST           shift, and go to state 11
    DOUBLE          shift, and go to state 12
    ENUM            shift, and go to state 13
    EXPLICIT        shift, and go to state 14
    EXTERN          shift, and go to state 185
    FLOAT           shift, and go to state 17
    FRIEND          shift, and go to state 18
    INLINE          shift, and go to state 19
    INT             shift, and go to state 20
    LONG            shift, and go to state 21
    MUTABLE         shift, and go to state 22
    REGISTER        shift, and go to state 25
    SHORT           shift, and go to state 26
    SIGNED          shift, and go to state 27
    STATIC          shift, and go to state 28
    STRUCT          shift, and go to state 29
    TYPEDEF         shift, and go to state 31
    TYPENAME        shift, and go to state 32
    UNION           shift, and go to state 33
    UNSIGNED        shift, and go to state 34
    VIRTUAL         shift, and go to state 36
    VOID            shift, and go to state 37
    VOLATILE        shift, and go to state 38
    WCHAR_T         shift, and go to state 39
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    $default  reduce using rule 303 (parameter_declaration_clause)

    typedef_name                  go to state 46
    namespace_name                go to state 47
    original_namespace_name       go to state 48
    class_name                    go to state 49
    enum_name                     go to state 50
    template_name                 go to state 51
    nested_name_specifier         go to state 156
    decl_specifier                go to state 62
    decl_specifier_seq            go to state 209
    storage_class_specifier       go to state 64
    function_specifier            go to state 65
    type_specifier                go to state 66
    simple_type_specifier         go to state 67
    type_name                     go to state 68
    elaborated_type_specifier     go to state 69
    enum_specifier                go to state 70
    cv_qualifier                  go to state 84
    parameter_declaration_clause  go to state 335
    parameter_declaration_list    go to state 211
    parameter_declaration         go to state 212
    class_specifier               go to state 87
    class_head                    go to state 88
    class_key                     go to state 89
    template_id                   go to state 93


State 197

  272 direct_declarator: direct_declarator '[' . constant_expression_opt ']'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    $default  reduce using rule 476 (constant_expression_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 337
    conditional_expression     go to state 338
    constant_expression        go to state 339
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    constant_expression_opt    go to state 340


State 198

  263 declarator: ptr_operator declarator .

    $default  reduce using rule 263 (declarator)


State 199

  322 class_specifier: class_head '{' . member_specification_opt '}'

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    CLASS_NAME      shift, and go to state 3
    ENUM_NAME       shift, and go to state 4
    COLONCOLON      shift, and go to state 5
    AUTO            shift, and go to state 7
    BOOL            shift, and go to state 8
    CHAR            shift, and go to state 9
    CLASS           shift, and go to state 10
    CONST           shift, and go to state 11
    DOUBLE          shift, and go to state 12
    ENUM            shift, and go to state 13
    EXPLICIT        shift, and go to state 14
    EXTERN          shift, and go to state 185
    FLOAT           shift, and go to state 17
    FRIEND          shift, and go to state 18
    INLINE          shift, and go to state 19
    INT             shift, and go to state 20
    LONG            shift, and go to state 21
    MUTABLE         shift, and go to state 22
    OPERATOR        shift, and go to state 24
    PRIVATE         shift, and go to state 341
    PROTECTED       shift, and go to state 342
    PUBLIC          shift, and go to state 343
    REGISTER        shift, and go to state 25
    SHORT           shift, and go to state 26
    SIGNED          shift, and go to state 27
    STATIC          shift, and go to state 28
    STRUCT          shift, and go to state 29
    TYPEDEF         shift, and go to state 31
    TYPENAME        shift, and go to state 32
    UNION           shift, and go to state 33
    UNSIGNED        shift, and go to state 34
    USING           shift, and go to state 344
    VIRTUAL         shift, and go to state 36
    VOID            shift, and go to state 37
    VOLATILE        shift, and go to state 38
    WCHAR_T         shift, and go to state 39
    ';'             shift, and go to state 345
    '('             shift, and go to state 40
    '&'             shift, and go to state 41
    '*'             shift, and go to state 42
    '~'             shift, and go to state 43
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    ';'       [reduce using rule 341 (member_declarator)]
    '}'       reduce using rule 488 (member_specification_opt)
    $default  reduce using rule 341 (member_declarator)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 346
    id_expression              go to state 54
    unqualified_id             go to state 55
    qualified_id               go to state 347
    nested_name_specifier      go to state 57
    decl_specifier             go to state 62
    decl_specifier_seq         go to state 348
    storage_class_specifier    go to state 64
    function_specifier         go to state 65
    type_specifier             go to state 66
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    using_declaration          go to state 349
    declarator                 go to state 350
    direct_declarator          go to state 82
    ptr_operator               go to state 83
    cv_qualifier               go to state 84
    declarator_id              go to state 85
    function_definition        go to state 351
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    member_specification       go to state 352
    member_declaration         go to state 353
    member_declarator_list     go to state 354
    member_declarator          go to state 355
    access_specifier           go to state 356
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    member_specification_opt   go to state 357


State 200

  221 elaborated_type_specifier: class_key COLONCOLON . nested_name_specifier identifier
  222                          | class_key COLONCOLON . identifier

    IDENTIFIER      shift, and go to state 1
    CLASS_NAME      shift, and go to state 100
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 358
    nested_name_specifier    go to state 359
    template_id              go to state 93


State 201

  323 class_head: class_key identifier .
  324           | class_key identifier . base_clause

    ':'  shift, and go to state 360

    $default  reduce using rule 323 (class_head)

    base_clause  go to state 361


State 202

  325 class_head: class_key nested_name_specifier . identifier
  326           | class_key nested_name_specifier . identifier base_clause

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 362


State 203

  421 template_declaration: EXPORT_opt TEMPLATE . '<' template_parameter_list '>' declaration

    '<'  shift, and go to state 363


State 204

    4 class_name: CLASS_NAME .
  271 direct_declarator: CLASS_NAME COLONCOLON CLASS_NAME . '(' parameter_declaration_clause ')'

    '('  shift, and go to state 364

    $default  reduce using rule 4 (class_name)


State 205

  286 declarator_id: COLONCOLON . id_expression
  287              | COLONCOLON . nested_name_specifier type_name
  288              | COLONCOLON . type_name

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 4
    OPERATOR        shift, and go to state 24
    '~'             shift, and go to state 43
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    typedef_name             go to state 46
    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 49
    enum_name                go to state 50
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 101
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 365
    type_name                go to state 103
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 206

   31 qualified_id: nested_name_specifier . unqualified_id
   32             | nested_name_specifier . TEMPLATE unqualified_id

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 24
    TEMPLATE    shift, and go to state 179
    '~'         shift, and go to state 43

    identifier              go to state 52
    unqualified_id          go to state 182
    conversion_function_id  go to state 90
    operator_function_id    go to state 91


State 207

  270 direct_declarator: CLASS_NAME COLONCOLON declarator_id . '(' parameter_declaration_clause ')'

    '('  shift, and go to state 366


State 208

  301 parameter_declaration_clause: ELLIPSIS .

    $default  reduce using rule 301 (parameter_declaration_clause)


State 209

  190 decl_specifier_seq: decl_specifier_seq . decl_specifier
  306 parameter_declaration: decl_specifier_seq . declarator
  307                      | decl_specifier_seq . declarator '=' assignment_expression
  308                      | decl_specifier_seq . abstract_declarator_opt
  309                      | decl_specifier_seq . abstract_declarator_opt '=' assignment_expression

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    CLASS_NAME      shift, and go to state 3
    ENUM_NAME       shift, and go to state 4
    COLONCOLON      shift, and go to state 5
    AUTO            shift, and go to state 7
    BOOL            shift, and go to state 8
    CHAR            shift, and go to state 9
    CLASS           shift, and go to state 10
    CONST           shift, and go to state 11
    DOUBLE          shift, and go to state 12
    ENUM            shift, and go to state 13
    EXPLICIT        shift, and go to state 14
    EXTERN          shift, and go to state 185
    FLOAT           shift, and go to state 17
    FRIEND          shift, and go to state 18
    INLINE          shift, and go to state 19
    INT             shift, and go to state 20
    LONG            shift, and go to state 21
    MUTABLE         shift, and go to state 22
    OPERATOR        shift, and go to state 24
    REGISTER        shift, and go to state 25
    SHORT           shift, and go to state 26
    SIGNED          shift, and go to state 27
    STATIC          shift, and go to state 28
    STRUCT          shift, and go to state 29
    TYPEDEF         shift, and go to state 31
    TYPENAME        shift, and go to state 32
    UNION           shift, and go to state 33
    UNSIGNED        shift, and go to state 34
    VIRTUAL         shift, and go to state 36
    VOID            shift, and go to state 37
    VOLATILE        shift, and go to state 38
    WCHAR_T         shift, and go to state 39
    '('             shift, and go to state 367
    '&'             shift, and go to state 41
    '*'             shift, and go to state 42
    '~'             shift, and go to state 43
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    '('       [reduce using rule 482 (direct_abstract_declarator_opt)]
    '['       reduce using rule 482 (direct_abstract_declarator_opt)
    $default  reduce using rule 478 (abstract_declarator_opt)

    typedef_name                    go to state 46
    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 49
    enum_name                       go to state 50
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 57
    decl_specifier                  go to state 187
    storage_class_specifier         go to state 64
    function_specifier              go to state 65
    type_specifier                  go to state 66
    simple_type_specifier           go to state 67
    type_name                       go to state 68
    elaborated_type_specifier       go to state 69
    enum_specifier                  go to state 70
    declarator                      go to state 368
    direct_declarator               go to state 82
    ptr_operator                    go to state 369
    cv_qualifier                    go to state 84
    declarator_id                   go to state 85
    abstract_declarator             go to state 370
    direct_abstract_declarator      go to state 371
    class_specifier                 go to state 87
    class_head                      go to state 88
    class_key                       go to state 89
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_id                     go to state 93
    abstract_declarator_opt         go to state 372
    direct_abstract_declarator_opt  go to state 373


State 210

  269 direct_declarator: CLASS_NAME '(' parameter_declaration_clause . ')'

    ')'  shift, and go to state 374


State 211

  299 parameter_declaration_clause: parameter_declaration_list .
  300                             | parameter_declaration_list . ELLIPSIS
  302                             | parameter_declaration_list . ',' ELLIPSIS
  305 parameter_declaration_list: parameter_declaration_list . ',' parameter_declaration

    ELLIPSIS  shift, and go to state 375
    ','       shift, and go to state 376

    $default  reduce using rule 299 (parameter_declaration_clause)


State 212

  304 parameter_declaration_list: parameter_declaration .

    $default  reduce using rule 304 (parameter_declaration_list)


State 213

  279 ptr_operator: COLONCOLON nested_name_specifier '*' .
  280             | COLONCOLON nested_name_specifier '*' . cv_qualifier_seq

    CONST     shift, and go to state 11
    VOLATILE  shift, and go to state 38

    $default  reduce using rule 279 (ptr_operator)

    cv_qualifier_seq  go to state 377
    cv_qualifier      go to state 173


State 214

  287 declarator_id: COLONCOLON nested_name_specifier type_name .

    $default  reduce using rule 287 (declarator_id)


State 215

  206 simple_type_specifier: COLONCOLON nested_name_specifier_opt type_name .

    $default  reduce using rule 206 (simple_type_specifier)


State 216

  256 asm_definition: ASM '(' string_literal . ')' ';'

    ')'  shift, and go to state 378


State 217

  224 elaborated_type_specifier: ENUM COLONCOLON identifier .

    $default  reduce using rule 224 (elaborated_type_specifier)


State 218

  223 elaborated_type_specifier: ENUM COLONCOLON nested_name_specifier . identifier

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 379


State 219

  228 enum_specifier: ENUM identifier '{' . enumerator_list_opt '}'

    IDENTIFIER  shift, and go to state 1

    $default  reduce using rule 472 (enumerator_list_opt)

    identifier             go to state 380
    enumerator_list        go to state 381
    enumerator_definition  go to state 382
    enumerator             go to state 383
    enumerator_list_opt    go to state 384


State 220

  225 elaborated_type_specifier: ENUM nested_name_specifier identifier .

    $default  reduce using rule 225 (elaborated_type_specifier)


State 221

  257 linkage_specification: EXTERN string_literal '{' . declaration_seq_opt '}'

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    CLASS_NAME      shift, and go to state 3
    ENUM_NAME       shift, and go to state 4
    COLONCOLON      shift, and go to state 5
    ASM             shift, and go to state 6
    AUTO            shift, and go to state 7
    BOOL            shift, and go to state 8
    CHAR            shift, and go to state 9
    CLASS           shift, and go to state 10
    CONST           shift, and go to state 11
    DOUBLE          shift, and go to state 12
    ENUM            shift, and go to state 13
    EXPLICIT        shift, and go to state 14
    EXPORT          shift, and go to state 15
    EXTERN          shift, and go to state 16
    FLOAT           shift, and go to state 17
    FRIEND          shift, and go to state 18
    INLINE          shift, and go to state 19
    INT             shift, and go to state 20
    LONG            shift, and go to state 21
    MUTABLE         shift, and go to state 22
    NAMESPACE       shift, and go to state 23
    OPERATOR        shift, and go to state 24
    REGISTER        shift, and go to state 25
    SHORT           shift, and go to state 26
    SIGNED          shift, and go to state 27
    STATIC          shift, and go to state 28
    STRUCT          shift, and go to state 29
    TEMPLATE        shift, and go to state 30
    TYPEDEF         shift, and go to state 31
    TYPENAME        shift, and go to state 32
    UNION           shift, and go to state 33
    UNSIGNED        shift, and go to state 34
    USING           shift, and go to state 35
    VIRTUAL         shift, and go to state 36
    VOID            shift, and go to state 37
    VOLATILE        shift, and go to state 38
    WCHAR_T         shift, and go to state 39
    '('             shift, and go to state 40
    '&'             shift, and go to state 41
    '*'             shift, and go to state 42
    '~'             shift, and go to state 43
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    TEMPLATE  [reduce using rule 495 (EXPORT_opt)]
    $default  reduce using rule 452 (declaration_seq_opt)

    typedef_name                    go to state 46
    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 49
    enum_name                       go to state 50
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 57
    declaration_seq                 go to state 58
    declaration                     go to state 59
    block_declaration               go to state 60
    simple_declaration              go to state 61
    decl_specifier                  go to state 62
    decl_specifier_seq              go to state 63
    storage_class_specifier         go to state 64
    function_specifier              go to state 65
    type_specifier                  go to state 66
    simple_type_specifier           go to state 67
    type_name                       go to state 68
    elaborated_type_specifier       go to state 69
    enum_specifier                  go to state 70
    namespace_definition            go to state 71
    named_namespace_definition      go to state 72
    original_namespace_definition   go to state 73
    extension_namespace_definition  go to state 74
    unnamed_namespace_definition    go to state 75
    namespace_alias_definition      go to state 76
    using_declaration               go to state 77
    using_directive                 go to state 78
    asm_definition                  go to state 79
    linkage_specification           go to state 80
    declarator                      go to state 81
    direct_declarator               go to state 82
    ptr_operator                    go to state 83
    cv_qualifier                    go to state 84
    declarator_id                   go to state 85
    function_definition             go to state 86
    class_specifier                 go to state 87
    class_head                      go to state 88
    class_key                       go to state 89
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_declaration            go to state 92
    template_id                     go to state 93
    explicit_instantiation          go to state 94
    explicit_specialization         go to state 95
    declaration_seq_opt             go to state 385
    EXPORT_opt                      go to state 97


State 222

  258 linkage_specification: EXTERN string_literal declaration .

    $default  reduce using rule 258 (linkage_specification)


State 223

  240 unnamed_namespace_definition: NAMESPACE '{' namespace_body . '}'

    '}'  shift, and go to state 386


State 224

  241 namespace_body: declaration_seq_opt .

    $default  reduce using rule 241 (namespace_body)


State 225

  239 extension_namespace_definition: NAMESPACE original_namespace_name '{' . namespace_body '}'

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    CLASS_NAME      shift, and go to state 3
    ENUM_NAME       shift, and go to state 4
    COLONCOLON      shift, and go to state 5
    ASM             shift, and go to state 6
    AUTO            shift, and go to state 7
    BOOL            shift, and go to state 8
    CHAR            shift, and go to state 9
    CLASS           shift, and go to state 10
    CONST           shift, and go to state 11
    DOUBLE          shift, and go to state 12
    ENUM            shift, and go to state 13
    EXPLICIT        shift, and go to state 14
    EXPORT          shift, and go to state 15
    EXTERN          shift, and go to state 16
    FLOAT           shift, and go to state 17
    FRIEND          shift, and go to state 18
    INLINE          shift, and go to state 19
    INT             shift, and go to state 20
    LONG            shift, and go to state 21
    MUTABLE         shift, and go to state 22
    NAMESPACE       shift, and go to state 23
    OPERATOR        shift, and go to state 24
    REGISTER        shift, and go to state 25
    SHORT           shift, and go to state 26
    SIGNED          shift, and go to state 27
    STATIC          shift, and go to state 28
    STRUCT          shift, and go to state 29
    TEMPLATE        shift, and go to state 30
    TYPEDEF         shift, and go to state 31
    TYPENAME        shift, and go to state 32
    UNION           shift, and go to state 33
    UNSIGNED        shift, and go to state 34
    USING           shift, and go to state 35
    VIRTUAL         shift, and go to state 36
    VOID            shift, and go to state 37
    VOLATILE        shift, and go to state 38
    WCHAR_T         shift, and go to state 39
    '('             shift, and go to state 40
    '&'             shift, and go to state 41
    '*'             shift, and go to state 42
    '~'             shift, and go to state 43
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    TEMPLATE  [reduce using rule 495 (EXPORT_opt)]
    $default  reduce using rule 452 (declaration_seq_opt)

    typedef_name                    go to state 46
    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 49
    enum_name                       go to state 50
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 57
    declaration_seq                 go to state 58
    declaration                     go to state 59
    block_declaration               go to state 60
    simple_declaration              go to state 61
    decl_specifier                  go to state 62
    decl_specifier_seq              go to state 63
    storage_class_specifier         go to state 64
    function_specifier              go to state 65
    type_specifier                  go to state 66
    simple_type_specifier           go to state 67
    type_name                       go to state 68
    elaborated_type_specifier       go to state 69
    enum_specifier                  go to state 70
    namespace_definition            go to state 71
    named_namespace_definition      go to state 72
    original_namespace_definition   go to state 73
    extension_namespace_definition  go to state 74
    unnamed_namespace_definition    go to state 75
    namespace_body                  go to state 387
    namespace_alias_definition      go to state 76
    using_declaration               go to state 77
    using_directive                 go to state 78
    asm_definition                  go to state 79
    linkage_specification           go to state 80
    declarator                      go to state 81
    direct_declarator               go to state 82
    ptr_operator                    go to state 83
    cv_qualifier                    go to state 84
    declarator_id                   go to state 85
    function_definition             go to state 86
    class_specifier                 go to state 87
    class_head                      go to state 88
    class_key                       go to state 89
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_declaration            go to state 92
    template_id                     go to state 93
    explicit_instantiation          go to state 94
    explicit_specialization         go to state 95
    declaration_seq_opt             go to state 224
    EXPORT_opt                      go to state 97


State 226

  238 original_namespace_definition: NAMESPACE identifier '{' . namespace_body '}'

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    CLASS_NAME      shift, and go to state 3
    ENUM_NAME       shift, and go to state 4
    COLONCOLON      shift, and go to state 5
    ASM             shift, and go to state 6
    AUTO            shift, and go to state 7
    BOOL            shift, and go to state 8
    CHAR            shift, and go to state 9
    CLASS           shift, and go to state 10
    CONST           shift, and go to state 11
    DOUBLE          shift, and go to state 12
    ENUM            shift, and go to state 13
    EXPLICIT        shift, and go to state 14
    EXPORT          shift, and go to state 15
    EXTERN          shift, and go to state 16
    FLOAT           shift, and go to state 17
    FRIEND          shift, and go to state 18
    INLINE          shift, and go to state 19
    INT             shift, and go to state 20
    LONG            shift, and go to state 21
    MUTABLE         shift, and go to state 22
    NAMESPACE       shift, and go to state 23
    OPERATOR        shift, and go to state 24
    REGISTER        shift, and go to state 25
    SHORT           shift, and go to state 26
    SIGNED          shift, and go to state 27
    STATIC          shift, and go to state 28
    STRUCT          shift, and go to state 29
    TEMPLATE        shift, and go to state 30
    TYPEDEF         shift, and go to state 31
    TYPENAME        shift, and go to state 32
    UNION           shift, and go to state 33
    UNSIGNED        shift, and go to state 34
    USING           shift, and go to state 35
    VIRTUAL         shift, and go to state 36
    VOID            shift, and go to state 37
    VOLATILE        shift, and go to state 38
    WCHAR_T         shift, and go to state 39
    '('             shift, and go to state 40
    '&'             shift, and go to state 41
    '*'             shift, and go to state 42
    '~'             shift, and go to state 43
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    TEMPLATE  [reduce using rule 495 (EXPORT_opt)]
    $default  reduce using rule 452 (declaration_seq_opt)

    typedef_name                    go to state 46
    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 49
    enum_name                       go to state 50
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 57
    declaration_seq                 go to state 58
    declaration                     go to state 59
    block_declaration               go to state 60
    simple_declaration              go to state 61
    decl_specifier                  go to state 62
    decl_specifier_seq              go to state 63
    storage_class_specifier         go to state 64
    function_specifier              go to state 65
    type_specifier                  go to state 66
    simple_type_specifier           go to state 67
    type_name                       go to state 68
    elaborated_type_specifier       go to state 69
    enum_specifier                  go to state 70
    namespace_definition            go to state 71
    named_namespace_definition      go to state 72
    original_namespace_definition   go to state 73
    extension_namespace_definition  go to state 74
    unnamed_namespace_definition    go to state 75
    namespace_body                  go to state 388
    namespace_alias_definition      go to state 76
    using_declaration               go to state 77
    using_directive                 go to state 78
    asm_definition                  go to state 79
    linkage_specification           go to state 80
    declarator                      go to state 81
    direct_declarator               go to state 82
    ptr_operator                    go to state 83
    cv_qualifier                    go to state 84
    declarator_id                   go to state 85
    function_definition             go to state 86
    class_specifier                 go to state 87
    class_head                      go to state 88
    class_key                       go to state 89
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_declaration            go to state 92
    template_id                     go to state 93
    explicit_instantiation          go to state 94
    explicit_specialization         go to state 95
    declaration_seq_opt             go to state 224
    EXPORT_opt                      go to state 97


State 227

  242 namespace_alias_definition: NAMESPACE identifier '=' . qualified_namespace_specifier ';'

    CLASS_NAME      shift, and go to state 100
    COLONCOLON      shift, and go to state 389
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    namespace_name                 go to state 390
    original_namespace_name        go to state 48
    class_name                     go to state 107
    template_name                  go to state 51
    nested_name_specifier          go to state 391
    qualified_namespace_specifier  go to state 392
    template_id                    go to state 93


State 228

  455 nested_name_specifier_opt: nested_name_specifier .

    $default  reduce using rule 455 (nested_name_specifier_opt)


State 229

  382 operator: DELETE '[' . ']'

    ']'  shift, and go to state 393


State 230

  381 operator: NEW '[' . ']'

    ']'  shift, and go to state 394


State 231

  419 operator: '(' ')' .

    $default  reduce using rule 419 (operator)


State 232

  420 operator: '[' ']' .

    $default  reduce using rule 420 (operator)


State 233

  481 type_specifier_seq_opt: type_specifier_seq .

    $default  reduce using rule 481 (type_specifier_seq_opt)


State 234

  290 type_specifier_seq: type_specifier type_specifier_seq_opt .

    $default  reduce using rule 290 (type_specifier_seq)


State 235

  279 ptr_operator: COLONCOLON . nested_name_specifier '*'
  280             | COLONCOLON . nested_name_specifier '*' cv_qualifier_seq

    CLASS_NAME      shift, and go to state 100
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    nested_name_specifier    go to state 395
    template_id              go to state 93


State 236

  277 ptr_operator: nested_name_specifier . '*'
  278             | nested_name_specifier . '*' cv_qualifier_seq

    '*'  shift, and go to state 180


State 237

  368 conversion_declarator: ptr_operator . conversion_declarator_opt

    CLASS_NAME      shift, and go to state 100
    COLONCOLON      shift, and go to state 235
    '&'             shift, and go to state 41
    '*'             shift, and go to state 42
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    '&'       [reduce using rule 492 (conversion_declarator_opt)]
    '*'       [reduce using rule 492 (conversion_declarator_opt)]
    $default  reduce using rule 492 (conversion_declarator_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    nested_name_specifier      go to state 236
    ptr_operator               go to state 237
    conversion_declarator      go to state 238
    template_id                go to state 93
    conversion_declarator_opt  go to state 396


State 238

  493 conversion_declarator_opt: conversion_declarator .

    $default  reduce using rule 493 (conversion_declarator_opt)


State 239

  367 conversion_type_id: type_specifier_seq conversion_declarator_opt .

    $default  reduce using rule 367 (conversion_type_id)


State 240

  439 explicit_specialization: TEMPLATE '<' '>' . declaration

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    CLASS_NAME      shift, and go to state 3
    ENUM_NAME       shift, and go to state 4
    COLONCOLON      shift, and go to state 5
    ASM             shift, and go to state 6
    AUTO            shift, and go to state 7
    BOOL            shift, and go to state 8
    CHAR            shift, and go to state 9
    CLASS           shift, and go to state 10
    CONST           shift, and go to state 11
    DOUBLE          shift, and go to state 12
    ENUM            shift, and go to state 13
    EXPLICIT        shift, and go to state 14
    EXPORT          shift, and go to state 15
    EXTERN          shift, and go to state 16
    FLOAT           shift, and go to state 17
    FRIEND          shift, and go to state 18
    INLINE          shift, and go to state 19
    INT             shift, and go to state 20
    LONG            shift, and go to state 21
    MUTABLE         shift, and go to state 22
    NAMESPACE       shift, and go to state 23
    OPERATOR        shift, and go to state 24
    REGISTER        shift, and go to state 25
    SHORT           shift, and go to state 26
    SIGNED          shift, and go to state 27
    STATIC          shift, and go to state 28
    STRUCT          shift, and go to state 29
    TEMPLATE        shift, and go to state 30
    TYPEDEF         shift, and go to state 31
    TYPENAME        shift, and go to state 32
    UNION           shift, and go to state 33
    UNSIGNED        shift, and go to state 34
    USING           shift, and go to state 35
    VIRTUAL         shift, and go to state 36
    VOID            shift, and go to state 37
    VOLATILE        shift, and go to state 38
    WCHAR_T         shift, and go to state 39
    '('             shift, and go to state 40
    '&'             shift, and go to state 41
    '*'             shift, and go to state 42
    '~'             shift, and go to state 43
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    TEMPLATE  [reduce using rule 495 (EXPORT_opt)]

    typedef_name                    go to state 46
    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 49
    enum_name                       go to state 50
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 57
    declaration                     go to state 397
    block_declaration               go to state 60
    simple_declaration              go to state 61
    decl_specifier                  go to state 62
    decl_specifier_seq              go to state 63
    storage_class_specifier         go to state 64
    function_specifier              go to state 65
    type_specifier                  go to state 66
    simple_type_specifier           go to state 67
    type_name                       go to state 68
    elaborated_type_specifier       go to state 69
    enum_specifier                  go to state 70
    namespace_definition            go to state 71
    named_namespace_definition      go to state 72
    original_namespace_definition   go to state 73
    extension_namespace_definition  go to state 74
    unnamed_namespace_definition    go to state 75
    namespace_alias_definition      go to state 76
    using_declaration               go to state 77
    using_directive                 go to state 78
    asm_definition                  go to state 79
    linkage_specification           go to state 80
    declarator                      go to state 81
    direct_declarator               go to state 82
    ptr_operator                    go to state 83
    cv_qualifier                    go to state 84
    declarator_id                   go to state 85
    function_definition             go to state 86
    class_specifier                 go to state 87
    class_head                      go to state 88
    class_key                       go to state 89
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_declaration            go to state 92
    template_id                     go to state 93
    explicit_instantiation          go to state 94
    explicit_specialization         go to state 95
    EXPORT_opt                      go to state 97


State 241

  226 elaborated_type_specifier: TYPENAME COLONCOLON_opt nested_name_specifier . identifier
  227                          | TYPENAME COLONCOLON_opt nested_name_specifier . identifier '<' template_argument_list '>'

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 398


State 242

  251 using_declaration: USING COLONCOLON unqualified_id . ';'

    ';'  shift, and go to state 399


State 243

  249 using_declaration: USING COLONCOLON nested_name_specifier . unqualified_id ';'

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 24
    '~'         shift, and go to state 43

    identifier              go to state 52
    unqualified_id          go to state 400
    conversion_function_id  go to state 90
    operator_function_id    go to state 91


State 244

  252 using_directive: USING NAMESPACE COLONCOLON . nested_name_specifier namespace_name ';'
  253                | USING NAMESPACE COLONCOLON . namespace_name ';'

    CLASS_NAME      shift, and go to state 100
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    namespace_name           go to state 401
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    nested_name_specifier    go to state 402
    template_id              go to state 93


State 245

   34 nested_name_specifier: namespace_name . COLONCOLON nested_name_specifier
  255 using_directive: USING NAMESPACE namespace_name . ';'

    COLONCOLON  shift, and go to state 175
    ';'         shift, and go to state 403


State 246

  254 using_directive: USING NAMESPACE nested_name_specifier . namespace_name ';'

    NAMESPACE_NAME  shift, and go to state 44

    namespace_name           go to state 404
    original_namespace_name  go to state 48


State 247

  247 using_declaration: USING TYPENAME COLONCOLON . nested_name_specifier unqualified_id ';'

    CLASS_NAME      shift, and go to state 100
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    nested_name_specifier    go to state 405
    template_id              go to state 93


State 248

  248 using_declaration: USING TYPENAME nested_name_specifier . unqualified_id ';'

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 24
    '~'         shift, and go to state 43

    identifier              go to state 52
    unqualified_id          go to state 406
    conversion_function_id  go to state 90
    operator_function_id    go to state 91


State 249

  250 using_declaration: USING nested_name_specifier unqualified_id . ';'

    ';'  shift, and go to state 407


State 250

   31 qualified_id: nested_name_specifier . unqualified_id
   32             | nested_name_specifier . TEMPLATE unqualified_id
  279 ptr_operator: COLONCOLON nested_name_specifier . '*'
  280             | COLONCOLON nested_name_specifier . '*' cv_qualifier_seq
  287 declarator_id: COLONCOLON nested_name_specifier . type_name

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 100
    ENUM_NAME      shift, and go to state 4
    OPERATOR       shift, and go to state 24
    TEMPLATE       shift, and go to state 179
    '*'            shift, and go to state 213
    '~'            shift, and go to state 43
    TEMPLATE_NAME  shift, and go to state 45

    typedef_name            go to state 46
    class_name              go to state 181
    enum_name               go to state 50
    template_name           go to state 51
    identifier              go to state 52
    unqualified_id          go to state 182
    type_name               go to state 214
    conversion_function_id  go to state 90
    operator_function_id    go to state 91
    template_id             go to state 93


State 251

  273 direct_declarator: '(' declarator ')' .

    $default  reduce using rule 273 (direct_declarator)


State 252

  282 cv_qualifier_seq: cv_qualifier cv_qualifier_seq .

    $default  reduce using rule 282 (cv_qualifier_seq)


State 253

   34 nested_name_specifier: namespace_name COLONCOLON nested_name_specifier .

    $default  reduce using rule 34 (nested_name_specifier)


State 254

   33 nested_name_specifier: class_name COLONCOLON nested_name_specifier .

    $default  reduce using rule 33 (nested_name_specifier)


State 255

   14 integer_literal: INTEGER .

    $default  reduce using rule 14 (integer_literal)


State 256

   16 floating_literal: FLOATING .

    $default  reduce using rule 16 (floating_literal)


State 257

   15 character_literal: CHARACTER .

    $default  reduce using rule 15 (character_literal)


State 258

   72 new_expression: COLONCOLON . NEW new_placement_opt new_type_id new_initializer_opt
   74               | COLONCOLON . NEW new_placement_opt '(' type_id ')' new_initializer_opt
   83 delete_expression: COLONCOLON . DELETE cast_expression
   85                  | COLONCOLON . DELETE '[' ']' cast_expression
  206 simple_type_specifier: COLONCOLON . nested_name_specifier_opt type_name

    CLASS_NAME      shift, and go to state 100
    DELETE          shift, and go to state 408
    NEW             shift, and go to state 409
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    CLASS_NAME     [reduce using rule 454 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 454 (nested_name_specifier_opt)]
    $default       reduce using rule 454 (nested_name_specifier_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    nested_name_specifier      go to state 228
    template_id                go to state 93
    nested_name_specifier_opt  go to state 104


State 259

   58 unary_expression: PLUSPLUS . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 281
    integer_literal          go to state 282
    character_literal        go to state 283
    floating_literal         go to state 284
    string_literal           go to state 285
    boolean_literal          go to state 286
    primary_expression       go to state 287
    id_expression            go to state 288
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    postfix_expression       go to state 290
    unary_expression         go to state 291
    unary_operator           go to state 292
    new_expression           go to state 293
    delete_expression        go to state 294
    cast_expression          go to state 410
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 260

   59 unary_expression: MINUSMINUS . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 281
    integer_literal          go to state 282
    character_literal        go to state 283
    floating_literal         go to state 284
    string_literal           go to state 285
    boolean_literal          go to state 286
    primary_expression       go to state 287
    id_expression            go to state 288
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    postfix_expression       go to state 290
    unary_expression         go to state 291
    unary_operator           go to state 292
    new_expression           go to state 293
    delete_expression        go to state 294
    cast_expression          go to state 411
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 261

   52 postfix_expression: CONST_CAST . '<' type_id '>' '(' expression ')'

    '<'  shift, and go to state 412


State 262

   82 delete_expression: DELETE . cast_expression
   84                  | DELETE . '[' ']' cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '['               shift, and go to state 413
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 281
    integer_literal          go to state 282
    character_literal        go to state 283
    floating_literal         go to state 284
    string_literal           go to state 285
    boolean_literal          go to state 286
    primary_expression       go to state 287
    id_expression            go to state 288
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    postfix_expression       go to state 290
    unary_expression         go to state 291
    unary_operator           go to state 292
    new_expression           go to state 293
    delete_expression        go to state 294
    cast_expression          go to state 414
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 263

   49 postfix_expression: DYNAMIC_CAST . '<' type_id '>' '(' expression ')'

    '<'  shift, and go to state 415


State 264

   19 boolean_literal: FALSE .

    $default  reduce using rule 19 (boolean_literal)


State 265

   71 new_expression: NEW . new_placement_opt new_type_id new_initializer_opt
   73               | NEW . new_placement_opt '(' type_id ')' new_initializer_opt

    '('  shift, and go to state 416

    '('       [reduce using rule 460 (new_placement_opt)]
    $default  reduce using rule 460 (new_placement_opt)

    new_placement      go to state 417
    new_placement_opt  go to state 418


State 266

   51 postfix_expression: REINTERPRET_CAST . '<' type_id '>' '(' expression ')'

    '<'  shift, and go to state 419


State 267

   63 unary_expression: SIZEOF . unary_expression
   64                 | SIZEOF . '(' type_id ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 420
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 281
    integer_literal          go to state 282
    character_literal        go to state 283
    floating_literal         go to state 284
    string_literal           go to state 285
    boolean_literal          go to state 286
    primary_expression       go to state 287
    id_expression            go to state 288
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    postfix_expression       go to state 290
    unary_expression         go to state 421
    unary_operator           go to state 292
    new_expression           go to state 293
    delete_expression        go to state 294
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 268

   50 postfix_expression: STATIC_CAST . '<' type_id '>' '(' expression ')'

    '<'  shift, and go to state 422


State 269

   22 primary_expression: THIS .

    $default  reduce using rule 22 (primary_expression)


State 270

  448 throw_expression: THROW . assignment_expression_opt

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    $default  reduce using rule 498 (assignment_expression_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 423
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 313
    assignment_expression_opt  go to state 424


State 271

   18 boolean_literal: TRUE .

    $default  reduce using rule 18 (boolean_literal)


State 272

   53 postfix_expression: TYPEID . '(' expression ')'
   54                   | TYPEID . '(' type_id ')'

    '('  shift, and go to state 425


State 273

   23 primary_expression: '(' . expression ')'
   87 cast_expression: '(' . type_id ')' cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 4
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 8
    CHAR              shift, and go to state 9
    CLASS             shift, and go to state 10
    CONST             shift, and go to state 11
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DOUBLE            shift, and go to state 12
    DYNAMIC_CAST      shift, and go to state 263
    ENUM              shift, and go to state 13
    FALSE             shift, and go to state 264
    FLOAT             shift, and go to state 17
    INT               shift, and go to state 20
    LONG              shift, and go to state 21
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SHORT             shift, and go to state 26
    SIGNED            shift, and go to state 27
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    STRUCT            shift, and go to state 29
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    TYPENAME          shift, and go to state 32
    UNION             shift, and go to state 33
    UNSIGNED          shift, and go to state 34
    VOID              shift, and go to state 37
    VOLATILE          shift, and go to state 38
    WCHAR_T           shift, and go to state 39
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 289
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 426
    expression                 go to state 427
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 428
    type_specifier_seq         go to state 310
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 313


State 274

   61 unary_expression: '&' . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 281
    integer_literal          go to state 282
    character_literal        go to state 283
    floating_literal         go to state 284
    string_literal           go to state 285
    boolean_literal          go to state 286
    primary_expression       go to state 287
    id_expression            go to state 288
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    postfix_expression       go to state 290
    unary_expression         go to state 291
    unary_operator           go to state 292
    new_expression           go to state 293
    delete_expression        go to state 294
    cast_expression          go to state 429
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 275

   67 unary_operator: '+' .

    $default  reduce using rule 67 (unary_operator)


State 276

   68 unary_operator: '-' .

    $default  reduce using rule 68 (unary_operator)


State 277

   60 unary_expression: '*' . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 281
    integer_literal          go to state 282
    character_literal        go to state 283
    floating_literal         go to state 284
    string_literal           go to state 285
    boolean_literal          go to state 286
    primary_expression       go to state 287
    id_expression            go to state 288
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    postfix_expression       go to state 290
    unary_expression         go to state 291
    unary_operator           go to state 292
    new_expression           go to state 293
    delete_expression        go to state 294
    cast_expression          go to state 430
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 278

   69 unary_operator: '!' .

    $default  reduce using rule 69 (unary_operator)


State 279

   30 unqualified_id: '~' . class_name
   70 unary_operator: '~' .

    CLASS_NAME     shift, and go to state 100
    TEMPLATE_NAME  shift, and go to state 45

    CLASS_NAME     [reduce using rule 70 (unary_operator)]
    TEMPLATE_NAME  [reduce using rule 70 (unary_operator)]
    $default       reduce using rule 70 (unary_operator)

    class_name     go to state 174
    template_name  go to state 51
    template_id    go to state 93


State 280

  432 template_id: template_name . '<' template_argument_list '>'
  437 template_argument: template_name .

    '<'  shift, and go to state 177

    $default  reduce using rule 437 (template_argument)


State 281

   21 primary_expression: literal .

    $default  reduce using rule 21 (primary_expression)


State 282

    9 literal: integer_literal .

    $default  reduce using rule 9 (literal)


State 283

   10 literal: character_literal .

    $default  reduce using rule 10 (literal)


State 284

   11 literal: floating_literal .

    $default  reduce using rule 11 (literal)


State 285

   12 literal: string_literal .

    $default  reduce using rule 12 (literal)


State 286

   13 literal: boolean_literal .

    $default  reduce using rule 13 (literal)


State 287

   36 postfix_expression: primary_expression .

    $default  reduce using rule 36 (postfix_expression)


State 288

   24 primary_expression: id_expression .

    $default  reduce using rule 24 (primary_expression)


State 289

   31 qualified_id: nested_name_specifier . unqualified_id
   32             | nested_name_specifier . TEMPLATE unqualified_id
  205 simple_type_specifier: nested_name_specifier . type_name

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 100
    ENUM_NAME      shift, and go to state 4
    OPERATOR       shift, and go to state 24
    TEMPLATE       shift, and go to state 179
    '~'            shift, and go to state 43
    TEMPLATE_NAME  shift, and go to state 45

    typedef_name            go to state 46
    class_name              go to state 181
    enum_name               go to state 50
    template_name           go to state 51
    identifier              go to state 52
    unqualified_id          go to state 182
    type_name               go to state 183
    conversion_function_id  go to state 90
    operator_function_id    go to state 91
    template_id             go to state 93


State 290

   37 postfix_expression: postfix_expression . '[' expression ']'
   38                   | postfix_expression . '(' expression_list_opt ')'
   39                   | postfix_expression . '.' TEMPLATE COLONCOLON id_expression
   40                   | postfix_expression . '.' TEMPLATE id_expression
   41                   | postfix_expression . '.' COLONCOLON id_expression
   42                   | postfix_expression . '.' id_expression
   43                   | postfix_expression . ARROW TEMPLATE COLONCOLON id_expression
   44                   | postfix_expression . ARROW TEMPLATE id_expression
   45                   | postfix_expression . ARROW COLONCOLON id_expression
   46                   | postfix_expression . ARROW id_expression
   47                   | postfix_expression . PLUSPLUS
   48                   | postfix_expression . MINUSMINUS
   57 unary_expression: postfix_expression .

    PLUSPLUS    shift, and go to state 431
    MINUSMINUS  shift, and go to state 432
    ARROW       shift, and go to state 433
    '('         shift, and go to state 434
    '['         shift, and go to state 435
    '.'         shift, and go to state 436

    $default  reduce using rule 57 (unary_expression)


State 291

   86 cast_expression: unary_expression .

    $default  reduce using rule 86 (cast_expression)


State 292

   62 unary_expression: unary_operator . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 281
    integer_literal          go to state 282
    character_literal        go to state 283
    floating_literal         go to state 284
    string_literal           go to state 285
    boolean_literal          go to state 286
    primary_expression       go to state 287
    id_expression            go to state 288
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    postfix_expression       go to state 290
    unary_expression         go to state 291
    unary_operator           go to state 292
    new_expression           go to state 293
    delete_expression        go to state 294
    cast_expression          go to state 437
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 293

   65 unary_expression: new_expression .

    $default  reduce using rule 65 (unary_expression)


State 294

   66 unary_expression: delete_expression .

    $default  reduce using rule 66 (unary_expression)


State 295

   88 pm_expression: cast_expression .

    $default  reduce using rule 88 (pm_expression)


State 296

   89 pm_expression: pm_expression . DOTSTAR cast_expression
   90              | pm_expression . ARROWSTAR cast_expression
   91 multiplicative_expression: pm_expression .

    DOTSTAR    shift, and go to state 438
    ARROWSTAR  shift, and go to state 439

    $default  reduce using rule 91 (multiplicative_expression)


State 297

   92 multiplicative_expression: multiplicative_expression . '*' pm_expression
   93                          | multiplicative_expression . '/' pm_expression
   94                          | multiplicative_expression . '%' pm_expression
   95 additive_expression: multiplicative_expression .

    '%'  shift, and go to state 440
    '*'  shift, and go to state 441
    '/'  shift, and go to state 442

    $default  reduce using rule 95 (additive_expression)


State 298

   96 additive_expression: additive_expression . '+' multiplicative_expression
   97                    | additive_expression . '-' multiplicative_expression
   98 shift_expression: additive_expression .

    '+'  shift, and go to state 443
    '-'  shift, and go to state 444

    $default  reduce using rule 98 (shift_expression)


State 299

   99 shift_expression: shift_expression . SL additive_expression
  100                 | shift_expression . SR additive_expression
  101 relational_expression: shift_expression .

    SL  shift, and go to state 445
    SR  shift, and go to state 446

    $default  reduce using rule 101 (relational_expression)


State 300

  102 relational_expression: relational_expression . '<' shift_expression
  103                      | relational_expression . '>' shift_expression
  104                      | relational_expression . LTEQ shift_expression
  105                      | relational_expression . GTEQ shift_expression
  106 equality_expression: relational_expression .

    LTEQ  shift, and go to state 447
    GTEQ  shift, and go to state 448
    '<'   shift, and go to state 449
    '>'   shift, and go to state 450

    '>'       [reduce using rule 106 (equality_expression)]
    $default  reduce using rule 106 (equality_expression)


State 301

  107 equality_expression: equality_expression . EQ relational_expression
  108                    | equality_expression . NOTEQ relational_expression
  109 and_expression: equality_expression .

    EQ     shift, and go to state 451
    NOTEQ  shift, and go to state 452

    $default  reduce using rule 109 (and_expression)


State 302

  110 and_expression: and_expression . '&' equality_expression
  111 exclusive_or_expression: and_expression .

    '&'  shift, and go to state 453

    $default  reduce using rule 111 (exclusive_or_expression)


State 303

  112 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  113 inclusive_or_expression: exclusive_or_expression .

    '^'  shift, and go to state 454

    $default  reduce using rule 113 (inclusive_or_expression)


State 304

  114 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  115 logical_and_expression: inclusive_or_expression .

    '|'  shift, and go to state 455

    $default  reduce using rule 115 (logical_and_expression)


State 305

  116 logical_and_expression: logical_and_expression . ANDAND inclusive_or_expression
  117 logical_or_expression: logical_and_expression .

    ANDAND  shift, and go to state 456

    $default  reduce using rule 117 (logical_or_expression)


State 306

  118 logical_or_expression: logical_or_expression . OROR logical_and_expression
  119 conditional_expression: logical_or_expression .
  120                       | logical_or_expression . '?' expression ':' assignment_expression
  122 assignment_expression: logical_or_expression . assignment_operator assignment_expression

    ADDEQ  shift, and go to state 457
    SUBEQ  shift, and go to state 458
    MULEQ  shift, and go to state 459
    DIVEQ  shift, and go to state 460
    MODEQ  shift, and go to state 461
    XOREQ  shift, and go to state 462
    ANDEQ  shift, and go to state 463
    OREQ   shift, and go to state 464
    SREQ   shift, and go to state 465
    SLEQ   shift, and go to state 466
    OROR   shift, and go to state 467
    '='    shift, and go to state 468
    '?'    shift, and go to state 469

    $default  reduce using rule 119 (conditional_expression)

    assignment_operator  go to state 470


State 307

  121 assignment_expression: conditional_expression .

    $default  reduce using rule 121 (assignment_expression)


State 308

  435 template_argument: assignment_expression .

    $default  reduce using rule 435 (template_argument)


State 309

  436 template_argument: type_id .

    $default  reduce using rule 436 (template_argument)


State 310

  289 type_id: type_specifier_seq . abstract_declarator_opt

    CLASS_NAME      shift, and go to state 100
    COLONCOLON      shift, and go to state 235
    '('             shift, and go to state 471
    '&'             shift, and go to state 41
    '*'             shift, and go to state 42
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    '('       [reduce using rule 482 (direct_abstract_declarator_opt)]
    '['       reduce using rule 482 (direct_abstract_declarator_opt)
    $default  reduce using rule 478 (abstract_declarator_opt)

    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 107
    template_name                   go to state 51
    nested_name_specifier           go to state 236
    ptr_operator                    go to state 472
    abstract_declarator             go to state 370
    direct_abstract_declarator      go to state 371
    template_id                     go to state 93
    abstract_declarator_opt         go to state 473
    direct_abstract_declarator_opt  go to state 373


State 311

  432 template_id: template_name '<' template_argument_list . '>'
  434 template_argument_list: template_argument_list . ',' template_argument

    ','  shift, and go to state 474
    '>'  shift, and go to state 475


State 312

  433 template_argument_list: template_argument .

    $default  reduce using rule 433 (template_argument_list)


State 313

  123 assignment_expression: throw_expression .

    $default  reduce using rule 123 (assignment_expression)


State 314

   32 qualified_id: nested_name_specifier TEMPLATE unqualified_id .

    $default  reduce using rule 32 (qualified_id)


State 315

  278 ptr_operator: nested_name_specifier '*' cv_qualifier_seq .

    $default  reduce using rule 278 (ptr_operator)


State 316

  182 simple_declaration: decl_specifier_seq init_declarator_list ';' .

    $default  reduce using rule 182 (simple_declaration)


State 317

  260 init_declarator_list: init_declarator_list ',' . init_declarator

    IDENTIFIER      shift, and go to state 1
    CLASS_NAME      shift, and go to state 3
    COLONCOLON      shift, and go to state 169
    OPERATOR        shift, and go to state 24
    '('             shift, and go to state 40
    '&'             shift, and go to state 41
    '*'             shift, and go to state 42
    '~'             shift, and go to state 43
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 54
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 170
    init_declarator          go to state 476
    declarator               go to state 477
    direct_declarator        go to state 82
    ptr_operator             go to state 83
    declarator_id            go to state 85
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 318

  316 initializer: '(' . expression_list ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 290
    expression_list            go to state 478
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 479
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 313


State 319

  315 initializer: '=' . initializer_clause

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '{'               shift, and go to state 480
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 481
    initializer_clause         go to state 482
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 313


State 320

  475 initializer_opt: initializer .

    $default  reduce using rule 475 (initializer_opt)


State 321

  313 function_definition: decl_specifier_seq declarator function_try_block .

    $default  reduce using rule 313 (function_definition)


State 322

  261 init_declarator: declarator initializer_opt .

    $default  reduce using rule 261 (init_declarator)


State 323

  311 function_definition: decl_specifier_seq declarator ctor_initializer_opt . function_body

    '{'  shift, and go to state 332

    compound_statement  go to state 333
    function_body       go to state 483


State 324

  441 function_try_block: TRY ctor_initializer_opt . function_body handler_seq

    '{'  shift, and go to state 332

    compound_statement  go to state 333
    function_body       go to state 484


State 325

  373 mem_initializer_id: COLONCOLON . nested_name_specifier class_name
  374                   | COLONCOLON . class_name

    CLASS_NAME      shift, and go to state 100
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 485
    template_name            go to state 51
    nested_name_specifier    go to state 486
    template_id              go to state 93


State 326

   33 nested_name_specifier: class_name . COLONCOLON nested_name_specifier
   35                      | class_name . COLONCOLON
  376 mem_initializer_id: class_name .

    COLONCOLON  shift, and go to state 176

    $default  reduce using rule 376 (mem_initializer_id)


State 327

  377 mem_initializer_id: identifier .

    $default  reduce using rule 377 (mem_initializer_id)


State 328

  375 mem_initializer_id: nested_name_specifier . class_name

    CLASS_NAME     shift, and go to state 100
    TEMPLATE_NAME  shift, and go to state 45

    class_name     go to state 487
    template_name  go to state 51
    template_id    go to state 93


State 329

  369 ctor_initializer: ':' mem_initializer_list .

    $default  reduce using rule 369 (ctor_initializer)


State 330

  370 mem_initializer_list: mem_initializer .
  371                     | mem_initializer . ',' mem_initializer_list

    ','  shift, and go to state 488

    $default  reduce using rule 370 (mem_initializer_list)


State 331

  372 mem_initializer: mem_initializer_id . '(' expression_list_opt ')'

    '('  shift, and go to state 489


State 332

  150 compound_statement: '{' . statement_seq_opt '}'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 4
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    ASM               shift, and go to state 6
    AUTO              shift, and go to state 7
    BOOL              shift, and go to state 8
    BREAK             shift, and go to state 490
    CASE              shift, and go to state 491
    CHAR              shift, and go to state 9
    CLASS             shift, and go to state 10
    CONST             shift, and go to state 11
    CONST_CAST        shift, and go to state 261
    CONTINUE          shift, and go to state 492
    DEFAULT           shift, and go to state 493
    DELETE            shift, and go to state 262
    DO                shift, and go to state 494
    DOUBLE            shift, and go to state 12
    DYNAMIC_CAST      shift, and go to state 263
    ENUM              shift, and go to state 13
    EXPLICIT          shift, and go to state 14
    EXTERN            shift, and go to state 185
    FALSE             shift, and go to state 264
    FLOAT             shift, and go to state 17
    FOR               shift, and go to state 495
    FRIEND            shift, and go to state 18
    GOTO              shift, and go to state 496
    IF                shift, and go to state 497
    INLINE            shift, and go to state 19
    INT               shift, and go to state 20
    LONG              shift, and go to state 21
    MUTABLE           shift, and go to state 22
    NAMESPACE         shift, and go to state 498
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REGISTER          shift, and go to state 25
    REINTERPRET_CAST  shift, and go to state 266
    RETURN            shift, and go to state 499
    SHORT             shift, and go to state 26
    SIGNED            shift, and go to state 27
    SIZEOF            shift, and go to state 267
    STATIC            shift, and go to state 28
    STATIC_CAST       shift, and go to state 268
    STRUCT            shift, and go to state 29
    SWITCH            shift, and go to state 500
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TRY               shift, and go to state 501
    TYPEDEF           shift, and go to state 31
    TYPEID            shift, and go to state 272
    TYPENAME          shift, and go to state 32
    UNION             shift, and go to state 33
    UNSIGNED          shift, and go to state 34
    USING             shift, and go to state 35
    VIRTUAL           shift, and go to state 36
    VOID              shift, and go to state 37
    VOLATILE          shift, and go to state 38
    WCHAR_T           shift, and go to state 39
    WHILE             shift, and go to state 502
    '('               shift, and go to state 273
    '{'               shift, and go to state 332
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    '}'       reduce using rule 468 (statement_seq_opt)
    $default  reduce using rule 466 (expression_opt)

    typedef_name                go to state 46
    namespace_name              go to state 47
    original_namespace_name     go to state 48
    class_name                  go to state 49
    enum_name                   go to state 50
    template_name               go to state 51
    identifier                  go to state 503
    literal                     go to state 281
    integer_literal             go to state 282
    character_literal           go to state 283
    floating_literal            go to state 284
    string_literal              go to state 285
    boolean_literal             go to state 286
    primary_expression          go to state 287
    id_expression               go to state 288
    unqualified_id              go to state 55
    qualified_id                go to state 56
    nested_name_specifier       go to state 289
    postfix_expression          go to state 290
    unary_expression            go to state 291
    unary_operator              go to state 292
    new_expression              go to state 293
    delete_expression           go to state 294
    cast_expression             go to state 295
    pm_expression               go to state 296
    multiplicative_expression   go to state 297
    additive_expression         go to state 298
    shift_expression            go to state 299
    relational_expression       go to state 300
    equality_expression         go to state 301
    and_expression              go to state 302
    exclusive_or_expression     go to state 303
    inclusive_or_expression     go to state 304
    logical_and_expression      go to state 305
    logical_or_expression       go to state 306
    conditional_expression      go to state 307
    assignment_expression       go to state 426
    expression                  go to state 504
    statement                   go to state 505
    labeled_statement           go to state 506
    expression_statement        go to state 507
    compound_statement          go to state 508
    statement_seq               go to state 509
    selection_statement         go to state 510
    iteration_statement         go to state 511
    jump_statement              go to state 512
    declaration_statement       go to state 513
    block_declaration           go to state 514
    simple_declaration          go to state 61
    decl_specifier              go to state 62
    decl_specifier_seq          go to state 515
    storage_class_specifier     go to state 64
    function_specifier          go to state 65
    type_specifier              go to state 66
    simple_type_specifier       go to state 67
    type_name                   go to state 68
    elaborated_type_specifier   go to state 69
    enum_specifier              go to state 70
    namespace_alias_definition  go to state 76
    using_declaration           go to state 77
    using_directive             go to state 78
    asm_definition              go to state 79
    cv_qualifier                go to state 84
    class_specifier             go to state 87
    class_head                  go to state 88
    class_key                   go to state 89
    conversion_function_id      go to state 90
    operator_function_id        go to state 91
    template_id                 go to state 93
    try_block                   go to state 516
    throw_expression            go to state 313
    expression_opt              go to state 517
    statement_seq_opt           go to state 518


State 333

  314 function_body: compound_statement .

    $default  reduce using rule 314 (function_body)


State 334

  310 function_definition: declarator ctor_initializer_opt function_body .

    $default  reduce using rule 310 (function_definition)


State 335

  265 direct_declarator: direct_declarator '(' parameter_declaration_clause . ')' cv_qualifier_seq exception_specification
  266                  | direct_declarator '(' parameter_declaration_clause . ')' cv_qualifier_seq
  267                  | direct_declarator '(' parameter_declaration_clause . ')' exception_specification
  268                  | direct_declarator '(' parameter_declaration_clause . ')'

    ')'  shift, and go to state 519


State 336

   72 new_expression: COLONCOLON . NEW new_placement_opt new_type_id new_initializer_opt
   74               | COLONCOLON . NEW new_placement_opt '(' type_id ')' new_initializer_opt
   83 delete_expression: COLONCOLON . DELETE cast_expression
   85                  | COLONCOLON . DELETE '[' ']' cast_expression

    DELETE  shift, and go to state 408
    NEW     shift, and go to state 409


State 337

  118 logical_or_expression: logical_or_expression . OROR logical_and_expression
  119 conditional_expression: logical_or_expression .
  120                       | logical_or_expression . '?' expression ':' assignment_expression

    OROR  shift, and go to state 467
    '?'   shift, and go to state 469

    $default  reduce using rule 119 (conditional_expression)


State 338

  137 constant_expression: conditional_expression .

    $default  reduce using rule 137 (constant_expression)


State 339

  477 constant_expression_opt: constant_expression .

    $default  reduce using rule 477 (constant_expression_opt)


State 340

  272 direct_declarator: direct_declarator '[' constant_expression_opt . ']'

    ']'  shift, and go to state 520


State 341

  363 access_specifier: PRIVATE .

    $default  reduce using rule 363 (access_specifier)


State 342

  364 access_specifier: PROTECTED .

    $default  reduce using rule 364 (access_specifier)


State 343

  365 access_specifier: PUBLIC .

    $default  reduce using rule 365 (access_specifier)


State 344

  247 using_declaration: USING . TYPENAME COLONCOLON nested_name_specifier unqualified_id ';'
  248                  | USING . TYPENAME nested_name_specifier unqualified_id ';'
  249                  | USING . COLONCOLON nested_name_specifier unqualified_id ';'
  250                  | USING . nested_name_specifier unqualified_id ';'
  251                  | USING . COLONCOLON unqualified_id ';'

    CLASS_NAME      shift, and go to state 100
    COLONCOLON      shift, and go to state 165
    TYPENAME        shift, and go to state 167
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    nested_name_specifier    go to state 168
    template_id              go to state 93


State 345

  335 member_declaration: ';' .

    $default  reduce using rule 335 (member_declaration)


State 346

   27 unqualified_id: identifier .
  345 member_declarator: identifier . ':' constant_expression

    ':'  shift, and go to state 521

    ':'       [reduce using rule 27 (unqualified_id)]
    $default  reduce using rule 27 (unqualified_id)


State 347

   26 id_expression: qualified_id .
  337 member_declaration: qualified_id . ';'

    ';'  shift, and go to state 522

    ';'       [reduce using rule 26 (id_expression)]
    $default  reduce using rule 26 (id_expression)


State 348

  190 decl_specifier_seq: decl_specifier_seq . decl_specifier
  311 function_definition: decl_specifier_seq . declarator ctor_initializer_opt function_body
  313                    | decl_specifier_seq . declarator function_try_block
  332 member_declaration: decl_specifier_seq . member_declarator_list ';'
  333                   | decl_specifier_seq . ';'

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    CLASS_NAME      shift, and go to state 3
    ENUM_NAME       shift, and go to state 4
    COLONCOLON      shift, and go to state 5
    AUTO            shift, and go to state 7
    BOOL            shift, and go to state 8
    CHAR            shift, and go to state 9
    CLASS           shift, and go to state 10
    CONST           shift, and go to state 11
    DOUBLE          shift, and go to state 12
    ENUM            shift, and go to state 13
    EXPLICIT        shift, and go to state 14
    EXTERN          shift, and go to state 185
    FLOAT           shift, and go to state 17
    FRIEND          shift, and go to state 18
    INLINE          shift, and go to state 19
    INT             shift, and go to state 20
    LONG            shift, and go to state 21
    MUTABLE         shift, and go to state 22
    OPERATOR        shift, and go to state 24
    REGISTER        shift, and go to state 25
    SHORT           shift, and go to state 26
    SIGNED          shift, and go to state 27
    STATIC          shift, and go to state 28
    STRUCT          shift, and go to state 29
    TYPEDEF         shift, and go to state 31
    TYPENAME        shift, and go to state 32
    UNION           shift, and go to state 33
    UNSIGNED        shift, and go to state 34
    VIRTUAL         shift, and go to state 36
    VOID            shift, and go to state 37
    VOLATILE        shift, and go to state 38
    WCHAR_T         shift, and go to state 39
    ';'             shift, and go to state 523
    '('             shift, and go to state 40
    '&'             shift, and go to state 41
    '*'             shift, and go to state 42
    '~'             shift, and go to state 43
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    ';'       [reduce using rule 341 (member_declarator)]
    $default  reduce using rule 341 (member_declarator)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 346
    id_expression              go to state 54
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 57
    decl_specifier             go to state 187
    storage_class_specifier    go to state 64
    function_specifier         go to state 65
    type_specifier             go to state 66
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    declarator                 go to state 524
    direct_declarator          go to state 82
    ptr_operator               go to state 83
    cv_qualifier               go to state 84
    declarator_id              go to state 85
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    member_declarator_list     go to state 525
    member_declarator          go to state 355
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 349

  338 member_declaration: using_declaration .

    $default  reduce using rule 338 (member_declaration)


State 350

  310 function_definition: declarator . ctor_initializer_opt function_body
  312                    | declarator . function_try_block
  342 member_declarator: declarator .
  343                  | declarator . pure_specifier
  344                  | declarator . constant_initializer

    TRY  shift, and go to state 191
    '='  shift, and go to state 526
    ':'  shift, and go to state 192

    '{'       reduce using rule 484 (ctor_initializer_opt)
    $default  reduce using rule 342 (member_declarator)

    pure_specifier        go to state 527
    constant_initializer  go to state 528
    ctor_initializer      go to state 193
    function_try_block    go to state 194
    ctor_initializer_opt  go to state 195


State 351

  336 member_declaration: function_definition . SEMICOLON_opt

    ';'  shift, and go to state 529

    ';'       [reduce using rule 490 (SEMICOLON_opt)]
    $default  reduce using rule 490 (SEMICOLON_opt)

    SEMICOLON_opt  go to state 530


State 352

  489 member_specification_opt: member_specification .

    $default  reduce using rule 489 (member_specification_opt)


State 353

  330 member_specification: member_declaration . member_specification_opt

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    CLASS_NAME      shift, and go to state 3
    ENUM_NAME       shift, and go to state 4
    COLONCOLON      shift, and go to state 5
    AUTO            shift, and go to state 7
    BOOL            shift, and go to state 8
    CHAR            shift, and go to state 9
    CLASS           shift, and go to state 10
    CONST           shift, and go to state 11
    DOUBLE          shift, and go to state 12
    ENUM            shift, and go to state 13
    EXPLICIT        shift, and go to state 14
    EXTERN          shift, and go to state 185
    FLOAT           shift, and go to state 17
    FRIEND          shift, and go to state 18
    INLINE          shift, and go to state 19
    INT             shift, and go to state 20
    LONG            shift, and go to state 21
    MUTABLE         shift, and go to state 22
    OPERATOR        shift, and go to state 24
    PRIVATE         shift, and go to state 341
    PROTECTED       shift, and go to state 342
    PUBLIC          shift, and go to state 343
    REGISTER        shift, and go to state 25
    SHORT           shift, and go to state 26
    SIGNED          shift, and go to state 27
    STATIC          shift, and go to state 28
    STRUCT          shift, and go to state 29
    TYPEDEF         shift, and go to state 31
    TYPENAME        shift, and go to state 32
    UNION           shift, and go to state 33
    UNSIGNED        shift, and go to state 34
    USING           shift, and go to state 344
    VIRTUAL         shift, and go to state 36
    VOID            shift, and go to state 37
    VOLATILE        shift, and go to state 38
    WCHAR_T         shift, and go to state 39
    ';'             shift, and go to state 345
    '('             shift, and go to state 40
    '&'             shift, and go to state 41
    '*'             shift, and go to state 42
    '~'             shift, and go to state 43
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    ';'       [reduce using rule 341 (member_declarator)]
    '}'       reduce using rule 488 (member_specification_opt)
    $default  reduce using rule 341 (member_declarator)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 346
    id_expression              go to state 54
    unqualified_id             go to state 55
    qualified_id               go to state 347
    nested_name_specifier      go to state 57
    decl_specifier             go to state 62
    decl_specifier_seq         go to state 348
    storage_class_specifier    go to state 64
    function_specifier         go to state 65
    type_specifier             go to state 66
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    using_declaration          go to state 349
    declarator                 go to state 350
    direct_declarator          go to state 82
    ptr_operator               go to state 83
    cv_qualifier               go to state 84
    declarator_id              go to state 85
    function_definition        go to state 351
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    member_specification       go to state 352
    member_declaration         go to state 353
    member_declarator_list     go to state 354
    member_declarator          go to state 355
    access_specifier           go to state 356
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    member_specification_opt   go to state 531


State 354

  334 member_declaration: member_declarator_list . ';'
  340 member_declarator_list: member_declarator_list . ',' member_declarator

    ';'  shift, and go to state 532
    ','  shift, and go to state 533


State 355

  339 member_declarator_list: member_declarator .

    $default  reduce using rule 339 (member_declarator_list)


State 356

  331 member_specification: access_specifier . ':' member_specification_opt

    ':'  shift, and go to state 534


State 357

  322 class_specifier: class_head '{' member_specification_opt . '}'

    '}'  shift, and go to state 535


State 358

  222 elaborated_type_specifier: class_key COLONCOLON identifier .

    $default  reduce using rule 222 (elaborated_type_specifier)


State 359

  221 elaborated_type_specifier: class_key COLONCOLON nested_name_specifier . identifier

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 536


State 360

  348 base_clause: ':' . base_specifier_list

    CLASS_NAME      shift, and go to state 100
    COLONCOLON      shift, and go to state 537
    PRIVATE         shift, and go to state 341
    PROTECTED       shift, and go to state 342
    PUBLIC          shift, and go to state 343
    VIRTUAL         shift, and go to state 538
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 539
    template_name            go to state 51
    nested_name_specifier    go to state 540
    base_specifier_list      go to state 541
    base_specifier           go to state 542
    access_specifier         go to state 543
    template_id              go to state 93


State 361

  324 class_head: class_key identifier base_clause .

    $default  reduce using rule 324 (class_head)


State 362

  325 class_head: class_key nested_name_specifier identifier .
  326           | class_key nested_name_specifier identifier . base_clause

    ':'  shift, and go to state 360

    $default  reduce using rule 325 (class_head)

    base_clause  go to state 544


State 363

  421 template_declaration: EXPORT_opt TEMPLATE '<' . template_parameter_list '>' declaration

    TYPEDEF_NAME    shift, and go to state 2
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 4
    COLONCOLON      shift, and go to state 115
    AUTO            shift, and go to state 7
    BOOL            shift, and go to state 8
    CHAR            shift, and go to state 9
    CLASS           shift, and go to state 545
    CONST           shift, and go to state 11
    DOUBLE          shift, and go to state 12
    ENUM            shift, and go to state 13
    EXPLICIT        shift, and go to state 14
    EXTERN          shift, and go to state 185
    FLOAT           shift, and go to state 17
    FRIEND          shift, and go to state 18
    INLINE          shift, and go to state 19
    INT             shift, and go to state 20
    LONG            shift, and go to state 21
    MUTABLE         shift, and go to state 22
    REGISTER        shift, and go to state 25
    SHORT           shift, and go to state 26
    SIGNED          shift, and go to state 27
    STATIC          shift, and go to state 28
    STRUCT          shift, and go to state 29
    TEMPLATE        shift, and go to state 546
    TYPEDEF         shift, and go to state 31
    TYPENAME        shift, and go to state 547
    UNION           shift, and go to state 33
    UNSIGNED        shift, and go to state 34
    VIRTUAL         shift, and go to state 36
    VOID            shift, and go to state 37
    VOLATILE        shift, and go to state 38
    WCHAR_T         shift, and go to state 39
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    decl_specifier             go to state 62
    decl_specifier_seq         go to state 209
    storage_class_specifier    go to state 64
    function_specifier         go to state 65
    type_specifier             go to state 66
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    parameter_declaration      go to state 548
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_parameter_list    go to state 549
    template_parameter         go to state 550
    type_parameter             go to state 551
    template_id                go to state 93


State 364

  271 direct_declarator: CLASS_NAME COLONCOLON CLASS_NAME '(' . parameter_declaration_clause ')'

    TYPEDEF_NAME    shift, and go to state 2
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 4
    ELLIPSIS        shift, and go to state 208
    COLONCOLON      shift, and go to state 115
    AUTO            shift, and go to state 7
    BOOL            shift, and go to state 8
    CHAR            shift, and go to state 9
    CLASS           shift, and go to state 10
    CONST           shift, and go to state 11
    DOUBLE          shift, and go to state 12
    ENUM            shift, and go to state 13
    EXPLICIT        shift, and go to state 14
    EXTERN          shift, and go to state 185
    FLOAT           shift, and go to state 17
    FRIEND          shift, and go to state 18
    INLINE          shift, and go to state 19
    INT             shift, and go to state 20
    LONG            shift, and go to state 21
    MUTABLE         shift, and go to state 22
    REGISTER        shift, and go to state 25
    SHORT           shift, and go to state 26
    SIGNED          shift, and go to state 27
    STATIC          shift, and go to state 28
    STRUCT          shift, and go to state 29
    TYPEDEF         shift, and go to state 31
    TYPENAME        shift, and go to state 32
    UNION           shift, and go to state 33
    UNSIGNED        shift, and go to state 34
    VIRTUAL         shift, and go to state 36
    VOID            shift, and go to state 37
    VOLATILE        shift, and go to state 38
    WCHAR_T         shift, and go to state 39
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    $default  reduce using rule 303 (parameter_declaration_clause)

    typedef_name                  go to state 46
    namespace_name                go to state 47
    original_namespace_name       go to state 48
    class_name                    go to state 49
    enum_name                     go to state 50
    template_name                 go to state 51
    nested_name_specifier         go to state 156
    decl_specifier                go to state 62
    decl_specifier_seq            go to state 209
    storage_class_specifier       go to state 64
    function_specifier            go to state 65
    type_specifier                go to state 66
    simple_type_specifier         go to state 67
    type_name                     go to state 68
    elaborated_type_specifier     go to state 69
    enum_specifier                go to state 70
    cv_qualifier                  go to state 84
    parameter_declaration_clause  go to state 552
    parameter_declaration_list    go to state 211
    parameter_declaration         go to state 212
    class_specifier               go to state 87
    class_head                    go to state 88
    class_key                     go to state 89
    template_id                   go to state 93


State 365

   31 qualified_id: nested_name_specifier . unqualified_id
   32             | nested_name_specifier . TEMPLATE unqualified_id
  287 declarator_id: COLONCOLON nested_name_specifier . type_name

    IDENTIFIER     shift, and go to state 1
    TYPEDEF_NAME   shift, and go to state 2
    CLASS_NAME     shift, and go to state 100
    ENUM_NAME      shift, and go to state 4
    OPERATOR       shift, and go to state 24
    TEMPLATE       shift, and go to state 179
    '~'            shift, and go to state 43
    TEMPLATE_NAME  shift, and go to state 45

    typedef_name            go to state 46
    class_name              go to state 181
    enum_name               go to state 50
    template_name           go to state 51
    identifier              go to state 52
    unqualified_id          go to state 182
    type_name               go to state 214
    conversion_function_id  go to state 90
    operator_function_id    go to state 91
    template_id             go to state 93


State 366

  270 direct_declarator: CLASS_NAME COLONCOLON declarator_id '(' . parameter_declaration_clause ')'

    TYPEDEF_NAME    shift, and go to state 2
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 4
    ELLIPSIS        shift, and go to state 208
    COLONCOLON      shift, and go to state 115
    AUTO            shift, and go to state 7
    BOOL            shift, and go to state 8
    CHAR            shift, and go to state 9
    CLASS           shift, and go to state 10
    CONST           shift, and go to state 11
    DOUBLE          shift, and go to state 12
    ENUM            shift, and go to state 13
    EXPLICIT        shift, and go to state 14
    EXTERN          shift, and go to state 185
    FLOAT           shift, and go to state 17
    FRIEND          shift, and go to state 18
    INLINE          shift, and go to state 19
    INT             shift, and go to state 20
    LONG            shift, and go to state 21
    MUTABLE         shift, and go to state 22
    REGISTER        shift, and go to state 25
    SHORT           shift, and go to state 26
    SIGNED          shift, and go to state 27
    STATIC          shift, and go to state 28
    STRUCT          shift, and go to state 29
    TYPEDEF         shift, and go to state 31
    TYPENAME        shift, and go to state 32
    UNION           shift, and go to state 33
    UNSIGNED        shift, and go to state 34
    VIRTUAL         shift, and go to state 36
    VOID            shift, and go to state 37
    VOLATILE        shift, and go to state 38
    WCHAR_T         shift, and go to state 39
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    $default  reduce using rule 303 (parameter_declaration_clause)

    typedef_name                  go to state 46
    namespace_name                go to state 47
    original_namespace_name       go to state 48
    class_name                    go to state 49
    enum_name                     go to state 50
    template_name                 go to state 51
    nested_name_specifier         go to state 156
    decl_specifier                go to state 62
    decl_specifier_seq            go to state 209
    storage_class_specifier       go to state 64
    function_specifier            go to state 65
    type_specifier                go to state 66
    simple_type_specifier         go to state 67
    type_name                     go to state 68
    elaborated_type_specifier     go to state 69
    enum_specifier                go to state 70
    cv_qualifier                  go to state 84
    parameter_declaration_clause  go to state 553
    parameter_declaration_list    go to state 211
    parameter_declaration         go to state 212
    class_specifier               go to state 87
    class_head                    go to state 88
    class_key                     go to state 89
    template_id                   go to state 93


State 367

  273 direct_declarator: '(' . declarator ')'
  298 direct_abstract_declarator: '(' . abstract_declarator ')'

    IDENTIFIER      shift, and go to state 1
    CLASS_NAME      shift, and go to state 3
    COLONCOLON      shift, and go to state 169
    OPERATOR        shift, and go to state 24
    '('             shift, and go to state 367
    '&'             shift, and go to state 41
    '*'             shift, and go to state 42
    '~'             shift, and go to state 43
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    '('       [reduce using rule 482 (direct_abstract_declarator_opt)]
    $default  reduce using rule 482 (direct_abstract_declarator_opt)

    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 107
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 170
    declarator                      go to state 171
    direct_declarator               go to state 82
    ptr_operator                    go to state 369
    declarator_id                   go to state 85
    abstract_declarator             go to state 554
    direct_abstract_declarator      go to state 371
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_id                     go to state 93
    direct_abstract_declarator_opt  go to state 373


State 368

  306 parameter_declaration: decl_specifier_seq declarator .
  307                      | decl_specifier_seq declarator . '=' assignment_expression

    '='  shift, and go to state 555

    $default  reduce using rule 306 (parameter_declaration)


State 369

  263 declarator: ptr_operator . declarator
  291 abstract_declarator: ptr_operator . abstract_declarator_opt

    IDENTIFIER      shift, and go to state 1
    CLASS_NAME      shift, and go to state 3
    COLONCOLON      shift, and go to state 169
    OPERATOR        shift, and go to state 24
    '('             shift, and go to state 367
    '&'             shift, and go to state 41
    '*'             shift, and go to state 42
    '~'             shift, and go to state 43
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    '('       [reduce using rule 482 (direct_abstract_declarator_opt)]
    '['       reduce using rule 482 (direct_abstract_declarator_opt)
    $default  reduce using rule 478 (abstract_declarator_opt)

    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 107
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 170
    declarator                      go to state 198
    direct_declarator               go to state 82
    ptr_operator                    go to state 369
    declarator_id                   go to state 85
    abstract_declarator             go to state 370
    direct_abstract_declarator      go to state 371
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_id                     go to state 93
    abstract_declarator_opt         go to state 556
    direct_abstract_declarator_opt  go to state 373


State 370

  479 abstract_declarator_opt: abstract_declarator .

    $default  reduce using rule 479 (abstract_declarator_opt)


State 371

  292 abstract_declarator: direct_abstract_declarator .
  483 direct_abstract_declarator_opt: direct_abstract_declarator .

    '('       reduce using rule 483 (direct_abstract_declarator_opt)
    '['       reduce using rule 483 (direct_abstract_declarator_opt)
    $default  reduce using rule 292 (abstract_declarator)


State 372

  308 parameter_declaration: decl_specifier_seq abstract_declarator_opt .
  309                      | decl_specifier_seq abstract_declarator_opt . '=' assignment_expression

    '='  shift, and go to state 557

    $default  reduce using rule 308 (parameter_declaration)


State 373

  293 direct_abstract_declarator: direct_abstract_declarator_opt . '(' parameter_declaration_clause ')' cv_qualifier_seq exception_specification
  294                           | direct_abstract_declarator_opt . '(' parameter_declaration_clause ')' cv_qualifier_seq
  295                           | direct_abstract_declarator_opt . '(' parameter_declaration_clause ')' exception_specification
  296                           | direct_abstract_declarator_opt . '(' parameter_declaration_clause ')'
  297                           | direct_abstract_declarator_opt . '[' constant_expression_opt ']'

    '('  shift, and go to state 558
    '['  shift, and go to state 559


State 374

  269 direct_declarator: CLASS_NAME '(' parameter_declaration_clause ')' .

    $default  reduce using rule 269 (direct_declarator)


State 375

  300 parameter_declaration_clause: parameter_declaration_list ELLIPSIS .

    $default  reduce using rule 300 (parameter_declaration_clause)


State 376

  302 parameter_declaration_clause: parameter_declaration_list ',' . ELLIPSIS
  305 parameter_declaration_list: parameter_declaration_list ',' . parameter_declaration

    TYPEDEF_NAME    shift, and go to state 2
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 4
    ELLIPSIS        shift, and go to state 560
    COLONCOLON      shift, and go to state 115
    AUTO            shift, and go to state 7
    BOOL            shift, and go to state 8
    CHAR            shift, and go to state 9
    CLASS           shift, and go to state 10
    CONST           shift, and go to state 11
    DOUBLE          shift, and go to state 12
    ENUM            shift, and go to state 13
    EXPLICIT        shift, and go to state 14
    EXTERN          shift, and go to state 185
    FLOAT           shift, and go to state 17
    FRIEND          shift, and go to state 18
    INLINE          shift, and go to state 19
    INT             shift, and go to state 20
    LONG            shift, and go to state 21
    MUTABLE         shift, and go to state 22
    REGISTER        shift, and go to state 25
    SHORT           shift, and go to state 26
    SIGNED          shift, and go to state 27
    STATIC          shift, and go to state 28
    STRUCT          shift, and go to state 29
    TYPEDEF         shift, and go to state 31
    TYPENAME        shift, and go to state 32
    UNION           shift, and go to state 33
    UNSIGNED        shift, and go to state 34
    VIRTUAL         shift, and go to state 36
    VOID            shift, and go to state 37
    VOLATILE        shift, and go to state 38
    WCHAR_T         shift, and go to state 39
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    decl_specifier             go to state 62
    decl_specifier_seq         go to state 209
    storage_class_specifier    go to state 64
    function_specifier         go to state 65
    type_specifier             go to state 66
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    parameter_declaration      go to state 561
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93


State 377

  280 ptr_operator: COLONCOLON nested_name_specifier '*' cv_qualifier_seq .

    $default  reduce using rule 280 (ptr_operator)


State 378

  256 asm_definition: ASM '(' string_literal ')' . ';'

    ';'  shift, and go to state 562


State 379

  223 elaborated_type_specifier: ENUM COLONCOLON nested_name_specifier identifier .

    $default  reduce using rule 223 (elaborated_type_specifier)


State 380

  233 enumerator: identifier .

    $default  reduce using rule 233 (enumerator)


State 381

  230 enumerator_list: enumerator_list . ',' enumerator_definition
  473 enumerator_list_opt: enumerator_list .

    ','  shift, and go to state 563

    $default  reduce using rule 473 (enumerator_list_opt)


State 382

  229 enumerator_list: enumerator_definition .

    $default  reduce using rule 229 (enumerator_list)


State 383

  231 enumerator_definition: enumerator .
  232                      | enumerator . '=' constant_expression

    '='  shift, and go to state 564

    $default  reduce using rule 231 (enumerator_definition)


State 384

  228 enum_specifier: ENUM identifier '{' enumerator_list_opt . '}'

    '}'  shift, and go to state 565


State 385

  257 linkage_specification: EXTERN string_literal '{' declaration_seq_opt . '}'

    '}'  shift, and go to state 566


State 386

  240 unnamed_namespace_definition: NAMESPACE '{' namespace_body '}' .

    $default  reduce using rule 240 (unnamed_namespace_definition)


State 387

  239 extension_namespace_definition: NAMESPACE original_namespace_name '{' namespace_body . '}'

    '}'  shift, and go to state 567


State 388

  238 original_namespace_definition: NAMESPACE identifier '{' namespace_body . '}'

    '}'  shift, and go to state 568


State 389

  243 qualified_namespace_specifier: COLONCOLON . nested_name_specifier namespace_name
  244                              | COLONCOLON . namespace_name

    CLASS_NAME      shift, and go to state 100
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    namespace_name           go to state 569
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    nested_name_specifier    go to state 570
    template_id              go to state 93


State 390

   34 nested_name_specifier: namespace_name . COLONCOLON nested_name_specifier
  246 qualified_namespace_specifier: namespace_name .

    COLONCOLON  shift, and go to state 175

    $default  reduce using rule 246 (qualified_namespace_specifier)


State 391

  245 qualified_namespace_specifier: nested_name_specifier . namespace_name

    NAMESPACE_NAME  shift, and go to state 44

    namespace_name           go to state 571
    original_namespace_name  go to state 48


State 392

  242 namespace_alias_definition: NAMESPACE identifier '=' qualified_namespace_specifier . ';'

    ';'  shift, and go to state 572


State 393

  382 operator: DELETE '[' ']' .

    $default  reduce using rule 382 (operator)


State 394

  381 operator: NEW '[' ']' .

    $default  reduce using rule 381 (operator)


State 395

  279 ptr_operator: COLONCOLON nested_name_specifier . '*'
  280             | COLONCOLON nested_name_specifier . '*' cv_qualifier_seq

    '*'  shift, and go to state 213


State 396

  368 conversion_declarator: ptr_operator conversion_declarator_opt .

    $default  reduce using rule 368 (conversion_declarator)


State 397

  439 explicit_specialization: TEMPLATE '<' '>' declaration .

    $default  reduce using rule 439 (explicit_specialization)


State 398

  226 elaborated_type_specifier: TYPENAME COLONCOLON_opt nested_name_specifier identifier .
  227                          | TYPENAME COLONCOLON_opt nested_name_specifier identifier . '<' template_argument_list '>'

    '<'  shift, and go to state 573

    '<'       [reduce using rule 226 (elaborated_type_specifier)]
    $default  reduce using rule 226 (elaborated_type_specifier)


State 399

  251 using_declaration: USING COLONCOLON unqualified_id ';' .

    $default  reduce using rule 251 (using_declaration)


State 400

  249 using_declaration: USING COLONCOLON nested_name_specifier unqualified_id . ';'

    ';'  shift, and go to state 574


State 401

   34 nested_name_specifier: namespace_name . COLONCOLON nested_name_specifier
  253 using_directive: USING NAMESPACE COLONCOLON namespace_name . ';'

    COLONCOLON  shift, and go to state 175
    ';'         shift, and go to state 575


State 402

  252 using_directive: USING NAMESPACE COLONCOLON nested_name_specifier . namespace_name ';'

    NAMESPACE_NAME  shift, and go to state 44

    namespace_name           go to state 576
    original_namespace_name  go to state 48


State 403

  255 using_directive: USING NAMESPACE namespace_name ';' .

    $default  reduce using rule 255 (using_directive)


State 404

  254 using_directive: USING NAMESPACE nested_name_specifier namespace_name . ';'

    ';'  shift, and go to state 577


State 405

  247 using_declaration: USING TYPENAME COLONCOLON nested_name_specifier . unqualified_id ';'

    IDENTIFIER  shift, and go to state 1
    OPERATOR    shift, and go to state 24
    '~'         shift, and go to state 43

    identifier              go to state 52
    unqualified_id          go to state 578
    conversion_function_id  go to state 90
    operator_function_id    go to state 91


State 406

  248 using_declaration: USING TYPENAME nested_name_specifier unqualified_id . ';'

    ';'  shift, and go to state 579


State 407

  250 using_declaration: USING nested_name_specifier unqualified_id ';' .

    $default  reduce using rule 250 (using_declaration)


State 408

   83 delete_expression: COLONCOLON DELETE . cast_expression
   85                  | COLONCOLON DELETE . '[' ']' cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '['               shift, and go to state 580
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 281
    integer_literal          go to state 282
    character_literal        go to state 283
    floating_literal         go to state 284
    string_literal           go to state 285
    boolean_literal          go to state 286
    primary_expression       go to state 287
    id_expression            go to state 288
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    postfix_expression       go to state 290
    unary_expression         go to state 291
    unary_operator           go to state 292
    new_expression           go to state 293
    delete_expression        go to state 294
    cast_expression          go to state 581
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 409

   72 new_expression: COLONCOLON NEW . new_placement_opt new_type_id new_initializer_opt
   74               | COLONCOLON NEW . new_placement_opt '(' type_id ')' new_initializer_opt

    '('  shift, and go to state 416

    '('       [reduce using rule 460 (new_placement_opt)]
    $default  reduce using rule 460 (new_placement_opt)

    new_placement      go to state 417
    new_placement_opt  go to state 582


State 410

   58 unary_expression: PLUSPLUS cast_expression .

    $default  reduce using rule 58 (unary_expression)


State 411

   59 unary_expression: MINUSMINUS cast_expression .

    $default  reduce using rule 59 (unary_expression)


State 412

   52 postfix_expression: CONST_CAST '<' . type_id '>' '(' expression ')'

    TYPEDEF_NAME    shift, and go to state 2
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 4
    COLONCOLON      shift, and go to state 115
    BOOL            shift, and go to state 8
    CHAR            shift, and go to state 9
    CLASS           shift, and go to state 10
    CONST           shift, and go to state 11
    DOUBLE          shift, and go to state 12
    ENUM            shift, and go to state 13
    FLOAT           shift, and go to state 17
    INT             shift, and go to state 20
    LONG            shift, and go to state 21
    SHORT           shift, and go to state 26
    SIGNED          shift, and go to state 27
    STRUCT          shift, and go to state 29
    TYPENAME        shift, and go to state 32
    UNION           shift, and go to state 33
    UNSIGNED        shift, and go to state 34
    VOID            shift, and go to state 37
    VOLATILE        shift, and go to state 38
    WCHAR_T         shift, and go to state 39
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 583
    type_specifier_seq         go to state 310
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93


State 413

   84 delete_expression: DELETE '[' . ']' cast_expression

    ']'  shift, and go to state 584


State 414

   82 delete_expression: DELETE cast_expression .

    $default  reduce using rule 82 (delete_expression)


State 415

   49 postfix_expression: DYNAMIC_CAST '<' . type_id '>' '(' expression ')'

    TYPEDEF_NAME    shift, and go to state 2
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 4
    COLONCOLON      shift, and go to state 115
    BOOL            shift, and go to state 8
    CHAR            shift, and go to state 9
    CLASS           shift, and go to state 10
    CONST           shift, and go to state 11
    DOUBLE          shift, and go to state 12
    ENUM            shift, and go to state 13
    FLOAT           shift, and go to state 17
    INT             shift, and go to state 20
    LONG            shift, and go to state 21
    SHORT           shift, and go to state 26
    SIGNED          shift, and go to state 27
    STRUCT          shift, and go to state 29
    TYPENAME        shift, and go to state 32
    UNION           shift, and go to state 33
    UNSIGNED        shift, and go to state 34
    VOID            shift, and go to state 37
    VOLATILE        shift, and go to state 38
    WCHAR_T         shift, and go to state 39
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 585
    type_specifier_seq         go to state 310
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93


State 416

   75 new_placement: '(' . expression_list ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 290
    expression_list            go to state 586
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 479
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 313


State 417

  461 new_placement_opt: new_placement .

    $default  reduce using rule 461 (new_placement_opt)


State 418

   71 new_expression: NEW new_placement_opt . new_type_id new_initializer_opt
   73               | NEW new_placement_opt . '(' type_id ')' new_initializer_opt

    TYPEDEF_NAME    shift, and go to state 2
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 4
    COLONCOLON      shift, and go to state 115
    BOOL            shift, and go to state 8
    CHAR            shift, and go to state 9
    CLASS           shift, and go to state 10
    CONST           shift, and go to state 11
    DOUBLE          shift, and go to state 12
    ENUM            shift, and go to state 13
    FLOAT           shift, and go to state 17
    INT             shift, and go to state 20
    LONG            shift, and go to state 21
    SHORT           shift, and go to state 26
    SIGNED          shift, and go to state 27
    STRUCT          shift, and go to state 29
    TYPENAME        shift, and go to state 32
    UNION           shift, and go to state 33
    UNSIGNED        shift, and go to state 34
    VOID            shift, and go to state 37
    VOLATILE        shift, and go to state 38
    WCHAR_T         shift, and go to state 39
    '('             shift, and go to state 587
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    new_type_id                go to state 588
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_specifier_seq         go to state 589
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93


State 419

   51 postfix_expression: REINTERPRET_CAST '<' . type_id '>' '(' expression ')'

    TYPEDEF_NAME    shift, and go to state 2
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 4
    COLONCOLON      shift, and go to state 115
    BOOL            shift, and go to state 8
    CHAR            shift, and go to state 9
    CLASS           shift, and go to state 10
    CONST           shift, and go to state 11
    DOUBLE          shift, and go to state 12
    ENUM            shift, and go to state 13
    FLOAT           shift, and go to state 17
    INT             shift, and go to state 20
    LONG            shift, and go to state 21
    SHORT           shift, and go to state 26
    SIGNED          shift, and go to state 27
    STRUCT          shift, and go to state 29
    TYPENAME        shift, and go to state 32
    UNION           shift, and go to state 33
    UNSIGNED        shift, and go to state 34
    VOID            shift, and go to state 37
    VOLATILE        shift, and go to state 38
    WCHAR_T         shift, and go to state 39
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 590
    type_specifier_seq         go to state 310
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93


State 420

   23 primary_expression: '(' . expression ')'
   64 unary_expression: SIZEOF '(' . type_id ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 4
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 8
    CHAR              shift, and go to state 9
    CLASS             shift, and go to state 10
    CONST             shift, and go to state 11
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DOUBLE            shift, and go to state 12
    DYNAMIC_CAST      shift, and go to state 263
    ENUM              shift, and go to state 13
    FALSE             shift, and go to state 264
    FLOAT             shift, and go to state 17
    INT               shift, and go to state 20
    LONG              shift, and go to state 21
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SHORT             shift, and go to state 26
    SIGNED            shift, and go to state 27
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    STRUCT            shift, and go to state 29
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    TYPENAME          shift, and go to state 32
    UNION             shift, and go to state 33
    UNSIGNED          shift, and go to state 34
    VOID              shift, and go to state 37
    VOLATILE          shift, and go to state 38
    WCHAR_T           shift, and go to state 39
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 289
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 426
    expression                 go to state 427
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 591
    type_specifier_seq         go to state 310
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 313


State 421

   63 unary_expression: SIZEOF unary_expression .

    $default  reduce using rule 63 (unary_expression)


State 422

   50 postfix_expression: STATIC_CAST '<' . type_id '>' '(' expression ')'

    TYPEDEF_NAME    shift, and go to state 2
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 4
    COLONCOLON      shift, and go to state 115
    BOOL            shift, and go to state 8
    CHAR            shift, and go to state 9
    CLASS           shift, and go to state 10
    CONST           shift, and go to state 11
    DOUBLE          shift, and go to state 12
    ENUM            shift, and go to state 13
    FLOAT           shift, and go to state 17
    INT             shift, and go to state 20
    LONG            shift, and go to state 21
    SHORT           shift, and go to state 26
    SIGNED          shift, and go to state 27
    STRUCT          shift, and go to state 29
    TYPENAME        shift, and go to state 32
    UNION           shift, and go to state 33
    UNSIGNED        shift, and go to state 34
    VOID            shift, and go to state 37
    VOLATILE        shift, and go to state 38
    WCHAR_T         shift, and go to state 39
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 592
    type_specifier_seq         go to state 310
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93


State 423

  499 assignment_expression_opt: assignment_expression .

    $default  reduce using rule 499 (assignment_expression_opt)


State 424

  448 throw_expression: THROW assignment_expression_opt .

    $default  reduce using rule 448 (throw_expression)


State 425

   53 postfix_expression: TYPEID '(' . expression ')'
   54                   | TYPEID '(' . type_id ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 4
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 8
    CHAR              shift, and go to state 9
    CLASS             shift, and go to state 10
    CONST             shift, and go to state 11
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DOUBLE            shift, and go to state 12
    DYNAMIC_CAST      shift, and go to state 263
    ENUM              shift, and go to state 13
    FALSE             shift, and go to state 264
    FLOAT             shift, and go to state 17
    INT               shift, and go to state 20
    LONG              shift, and go to state 21
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SHORT             shift, and go to state 26
    SIGNED            shift, and go to state 27
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    STRUCT            shift, and go to state 29
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    TYPENAME          shift, and go to state 32
    UNION             shift, and go to state 33
    UNSIGNED          shift, and go to state 34
    VOID              shift, and go to state 37
    VOLATILE          shift, and go to state 38
    WCHAR_T           shift, and go to state 39
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 289
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 426
    expression                 go to state 593
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 594
    type_specifier_seq         go to state 310
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 313


State 426

  135 expression: assignment_expression .

    $default  reduce using rule 135 (expression)


State 427

   23 primary_expression: '(' expression . ')'
  136 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 595
    ','  shift, and go to state 596


State 428

   87 cast_expression: '(' type_id . ')' cast_expression

    ')'  shift, and go to state 597


State 429

   61 unary_expression: '&' cast_expression .

    $default  reduce using rule 61 (unary_expression)


State 430

   60 unary_expression: '*' cast_expression .

    $default  reduce using rule 60 (unary_expression)


State 431

   47 postfix_expression: postfix_expression PLUSPLUS .

    $default  reduce using rule 47 (postfix_expression)


State 432

   48 postfix_expression: postfix_expression MINUSMINUS .

    $default  reduce using rule 48 (postfix_expression)


State 433

   43 postfix_expression: postfix_expression ARROW . TEMPLATE COLONCOLON id_expression
   44                   | postfix_expression ARROW . TEMPLATE id_expression
   45                   | postfix_expression ARROW . COLONCOLON id_expression
   46                   | postfix_expression ARROW . id_expression

    IDENTIFIER      shift, and go to state 1
    CLASS_NAME      shift, and go to state 100
    COLONCOLON      shift, and go to state 598
    OPERATOR        shift, and go to state 24
    TEMPLATE        shift, and go to state 599
    '~'             shift, and go to state 43
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 600
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 434

   38 postfix_expression: postfix_expression '(' . expression_list_opt ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    $default  reduce using rule 456 (expression_list_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 290
    expression_list            go to state 601
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 479
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 313
    expression_list_opt        go to state 602


State 435

   37 postfix_expression: postfix_expression '[' . expression ']'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 426
    expression                 go to state 603
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 313


State 436

   39 postfix_expression: postfix_expression '.' . TEMPLATE COLONCOLON id_expression
   40                   | postfix_expression '.' . TEMPLATE id_expression
   41                   | postfix_expression '.' . COLONCOLON id_expression
   42                   | postfix_expression '.' . id_expression

    IDENTIFIER      shift, and go to state 1
    CLASS_NAME      shift, and go to state 100
    COLONCOLON      shift, and go to state 604
    OPERATOR        shift, and go to state 24
    TEMPLATE        shift, and go to state 605
    '~'             shift, and go to state 43
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 606
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 437

   62 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 62 (unary_expression)


State 438

   89 pm_expression: pm_expression DOTSTAR . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 281
    integer_literal          go to state 282
    character_literal        go to state 283
    floating_literal         go to state 284
    string_literal           go to state 285
    boolean_literal          go to state 286
    primary_expression       go to state 287
    id_expression            go to state 288
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    postfix_expression       go to state 290
    unary_expression         go to state 291
    unary_operator           go to state 292
    new_expression           go to state 293
    delete_expression        go to state 294
    cast_expression          go to state 607
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 439

   90 pm_expression: pm_expression ARROWSTAR . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 281
    integer_literal          go to state 282
    character_literal        go to state 283
    floating_literal         go to state 284
    string_literal           go to state 285
    boolean_literal          go to state 286
    primary_expression       go to state 287
    id_expression            go to state 288
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    postfix_expression       go to state 290
    unary_expression         go to state 291
    unary_operator           go to state 292
    new_expression           go to state 293
    delete_expression        go to state 294
    cast_expression          go to state 608
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 440

   94 multiplicative_expression: multiplicative_expression '%' . pm_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 281
    integer_literal          go to state 282
    character_literal        go to state 283
    floating_literal         go to state 284
    string_literal           go to state 285
    boolean_literal          go to state 286
    primary_expression       go to state 287
    id_expression            go to state 288
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    postfix_expression       go to state 290
    unary_expression         go to state 291
    unary_operator           go to state 292
    new_expression           go to state 293
    delete_expression        go to state 294
    cast_expression          go to state 295
    pm_expression            go to state 609
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 441

   92 multiplicative_expression: multiplicative_expression '*' . pm_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 281
    integer_literal          go to state 282
    character_literal        go to state 283
    floating_literal         go to state 284
    string_literal           go to state 285
    boolean_literal          go to state 286
    primary_expression       go to state 287
    id_expression            go to state 288
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    postfix_expression       go to state 290
    unary_expression         go to state 291
    unary_operator           go to state 292
    new_expression           go to state 293
    delete_expression        go to state 294
    cast_expression          go to state 295
    pm_expression            go to state 610
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 442

   93 multiplicative_expression: multiplicative_expression '/' . pm_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 281
    integer_literal          go to state 282
    character_literal        go to state 283
    floating_literal         go to state 284
    string_literal           go to state 285
    boolean_literal          go to state 286
    primary_expression       go to state 287
    id_expression            go to state 288
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    postfix_expression       go to state 290
    unary_expression         go to state 291
    unary_operator           go to state 292
    new_expression           go to state 293
    delete_expression        go to state 294
    cast_expression          go to state 295
    pm_expression            go to state 611
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 443

   96 additive_expression: additive_expression '+' . multiplicative_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 612
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 444

   97 additive_expression: additive_expression '-' . multiplicative_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 613
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 445

   99 shift_expression: shift_expression SL . additive_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 614
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 446

  100 shift_expression: shift_expression SR . additive_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 615
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 447

  104 relational_expression: relational_expression LTEQ . shift_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 616
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 448

  105 relational_expression: relational_expression GTEQ . shift_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 617
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 449

  102 relational_expression: relational_expression '<' . shift_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 618
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 450

  103 relational_expression: relational_expression '>' . shift_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 619
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 451

  107 equality_expression: equality_expression EQ . relational_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 620
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 452

  108 equality_expression: equality_expression NOTEQ . relational_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 621
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 453

  110 and_expression: and_expression '&' . equality_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 622
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 454

  112 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 623
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 455

  114 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 624
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 456

  116 logical_and_expression: logical_and_expression ANDAND . inclusive_or_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 625
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 457

  128 assignment_operator: ADDEQ .

    $default  reduce using rule 128 (assignment_operator)


State 458

  129 assignment_operator: SUBEQ .

    $default  reduce using rule 129 (assignment_operator)


State 459

  125 assignment_operator: MULEQ .

    $default  reduce using rule 125 (assignment_operator)


State 460

  126 assignment_operator: DIVEQ .

    $default  reduce using rule 126 (assignment_operator)


State 461

  127 assignment_operator: MODEQ .

    $default  reduce using rule 127 (assignment_operator)


State 462

  133 assignment_operator: XOREQ .

    $default  reduce using rule 133 (assignment_operator)


State 463

  132 assignment_operator: ANDEQ .

    $default  reduce using rule 132 (assignment_operator)


State 464

  134 assignment_operator: OREQ .

    $default  reduce using rule 134 (assignment_operator)


State 465

  130 assignment_operator: SREQ .

    $default  reduce using rule 130 (assignment_operator)


State 466

  131 assignment_operator: SLEQ .

    $default  reduce using rule 131 (assignment_operator)


State 467

  118 logical_or_expression: logical_or_expression OROR . logical_and_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 626
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 468

  124 assignment_operator: '=' .

    $default  reduce using rule 124 (assignment_operator)


State 469

  120 conditional_expression: logical_or_expression '?' . expression ':' assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 426
    expression                 go to state 627
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 313


State 470

  122 assignment_expression: logical_or_expression assignment_operator . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 628
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 313


State 471

  298 direct_abstract_declarator: '(' . abstract_declarator ')'

    CLASS_NAME      shift, and go to state 100
    COLONCOLON      shift, and go to state 235
    '('             shift, and go to state 471
    '&'             shift, and go to state 41
    '*'             shift, and go to state 42
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    '('       [reduce using rule 482 (direct_abstract_declarator_opt)]
    $default  reduce using rule 482 (direct_abstract_declarator_opt)

    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 107
    template_name                   go to state 51
    nested_name_specifier           go to state 236
    ptr_operator                    go to state 472
    abstract_declarator             go to state 554
    direct_abstract_declarator      go to state 371
    template_id                     go to state 93
    direct_abstract_declarator_opt  go to state 373


State 472

  291 abstract_declarator: ptr_operator . abstract_declarator_opt

    CLASS_NAME      shift, and go to state 100
    COLONCOLON      shift, and go to state 235
    '('             shift, and go to state 471
    '&'             shift, and go to state 41
    '*'             shift, and go to state 42
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    '('       [reduce using rule 482 (direct_abstract_declarator_opt)]
    '['       reduce using rule 482 (direct_abstract_declarator_opt)
    $default  reduce using rule 478 (abstract_declarator_opt)

    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 107
    template_name                   go to state 51
    nested_name_specifier           go to state 236
    ptr_operator                    go to state 472
    abstract_declarator             go to state 370
    direct_abstract_declarator      go to state 371
    template_id                     go to state 93
    abstract_declarator_opt         go to state 556
    direct_abstract_declarator_opt  go to state 373


State 473

  289 type_id: type_specifier_seq abstract_declarator_opt .

    $default  reduce using rule 289 (type_id)


State 474

  434 template_argument_list: template_argument_list ',' . template_argument

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 4
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 8
    CHAR              shift, and go to state 9
    CLASS             shift, and go to state 10
    CONST             shift, and go to state 11
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DOUBLE            shift, and go to state 12
    DYNAMIC_CAST      shift, and go to state 263
    ENUM              shift, and go to state 13
    FALSE             shift, and go to state 264
    FLOAT             shift, and go to state 17
    INT               shift, and go to state 20
    LONG              shift, and go to state 21
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SHORT             shift, and go to state 26
    SIGNED            shift, and go to state 27
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    STRUCT            shift, and go to state 29
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    TYPENAME          shift, and go to state 32
    UNION             shift, and go to state 33
    UNSIGNED          shift, and go to state 34
    VOID              shift, and go to state 37
    VOLATILE          shift, and go to state 38
    WCHAR_T           shift, and go to state 39
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 280
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 289
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 308
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 309
    type_specifier_seq         go to state 310
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    template_argument          go to state 629
    throw_expression           go to state 313


State 475

  432 template_id: template_name '<' template_argument_list '>' .

    $default  reduce using rule 432 (template_id)


State 476

  260 init_declarator_list: init_declarator_list ',' init_declarator .

    $default  reduce using rule 260 (init_declarator_list)


State 477

  261 init_declarator: declarator . initializer_opt

    '('  shift, and go to state 318
    '='  shift, and go to state 319

    $default  reduce using rule 474 (initializer_opt)

    initializer      go to state 320
    initializer_opt  go to state 322


State 478

   56 expression_list: expression_list . ',' assignment_expression
  316 initializer: '(' expression_list . ')'

    ')'  shift, and go to state 630
    ','  shift, and go to state 631


State 479

   55 expression_list: assignment_expression .

    $default  reduce using rule 55 (expression_list)


State 480

  318 initializer_clause: '{' . initializer_list COMMA_opt '}'
  319                   | '{' . '}'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '{'               shift, and go to state 480
    '}'               shift, and go to state 632
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 481
    initializer_clause         go to state 633
    initializer_list           go to state 634
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 313


State 481

  317 initializer_clause: assignment_expression .

    $default  reduce using rule 317 (initializer_clause)


State 482

  315 initializer: '=' initializer_clause .

    $default  reduce using rule 315 (initializer)


State 483

  311 function_definition: decl_specifier_seq declarator ctor_initializer_opt function_body .

    $default  reduce using rule 311 (function_definition)


State 484

  441 function_try_block: TRY ctor_initializer_opt function_body . handler_seq

    CATCH  shift, and go to state 635

    handler_seq  go to state 636
    handler      go to state 637


State 485

   33 nested_name_specifier: class_name . COLONCOLON nested_name_specifier
   35                      | class_name . COLONCOLON
  374 mem_initializer_id: COLONCOLON class_name .

    COLONCOLON  shift, and go to state 176

    $default  reduce using rule 374 (mem_initializer_id)


State 486

  373 mem_initializer_id: COLONCOLON nested_name_specifier . class_name

    CLASS_NAME     shift, and go to state 100
    TEMPLATE_NAME  shift, and go to state 45

    class_name     go to state 638
    template_name  go to state 51
    template_id    go to state 93


State 487

  375 mem_initializer_id: nested_name_specifier class_name .

    $default  reduce using rule 375 (mem_initializer_id)


State 488

  371 mem_initializer_list: mem_initializer ',' . mem_initializer_list

    IDENTIFIER      shift, and go to state 1
    CLASS_NAME      shift, and go to state 100
    COLONCOLON      shift, and go to state 325
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 326
    template_name            go to state 51
    identifier               go to state 327
    nested_name_specifier    go to state 328
    mem_initializer_list     go to state 639
    mem_initializer          go to state 330
    mem_initializer_id       go to state 331
    template_id              go to state 93


State 489

  372 mem_initializer: mem_initializer_id '(' . expression_list_opt ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    $default  reduce using rule 456 (expression_list_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 290
    expression_list            go to state 601
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 479
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 313
    expression_list_opt        go to state 640


State 490

  163 jump_statement: BREAK . ';'

    ';'  shift, and go to state 641


State 491

  147 labeled_statement: CASE . constant_expression ':' statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 337
    conditional_expression     go to state 338
    constant_expression        go to state 642
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 492

  164 jump_statement: CONTINUE . ';'

    ';'  shift, and go to state 643


State 493

  148 labeled_statement: DEFAULT . ':' statement

    ':'  shift, and go to state 644


State 494

  159 iteration_statement: DO . statement WHILE '(' expression ')' ';'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 4
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    ASM               shift, and go to state 6
    AUTO              shift, and go to state 7
    BOOL              shift, and go to state 8
    BREAK             shift, and go to state 490
    CASE              shift, and go to state 491
    CHAR              shift, and go to state 9
    CLASS             shift, and go to state 10
    CONST             shift, and go to state 11
    CONST_CAST        shift, and go to state 261
    CONTINUE          shift, and go to state 492
    DEFAULT           shift, and go to state 493
    DELETE            shift, and go to state 262
    DO                shift, and go to state 494
    DOUBLE            shift, and go to state 12
    DYNAMIC_CAST      shift, and go to state 263
    ENUM              shift, and go to state 13
    EXPLICIT          shift, and go to state 14
    EXTERN            shift, and go to state 185
    FALSE             shift, and go to state 264
    FLOAT             shift, and go to state 17
    FOR               shift, and go to state 495
    FRIEND            shift, and go to state 18
    GOTO              shift, and go to state 496
    IF                shift, and go to state 497
    INLINE            shift, and go to state 19
    INT               shift, and go to state 20
    LONG              shift, and go to state 21
    MUTABLE           shift, and go to state 22
    NAMESPACE         shift, and go to state 498
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REGISTER          shift, and go to state 25
    REINTERPRET_CAST  shift, and go to state 266
    RETURN            shift, and go to state 499
    SHORT             shift, and go to state 26
    SIGNED            shift, and go to state 27
    SIZEOF            shift, and go to state 267
    STATIC            shift, and go to state 28
    STATIC_CAST       shift, and go to state 268
    STRUCT            shift, and go to state 29
    SWITCH            shift, and go to state 500
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TRY               shift, and go to state 501
    TYPEDEF           shift, and go to state 31
    TYPEID            shift, and go to state 272
    TYPENAME          shift, and go to state 32
    UNION             shift, and go to state 33
    UNSIGNED          shift, and go to state 34
    USING             shift, and go to state 35
    VIRTUAL           shift, and go to state 36
    VOID              shift, and go to state 37
    VOLATILE          shift, and go to state 38
    WCHAR_T           shift, and go to state 39
    WHILE             shift, and go to state 502
    '('               shift, and go to state 273
    '{'               shift, and go to state 332
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    $default  reduce using rule 466 (expression_opt)

    typedef_name                go to state 46
    namespace_name              go to state 47
    original_namespace_name     go to state 48
    class_name                  go to state 49
    enum_name                   go to state 50
    template_name               go to state 51
    identifier                  go to state 503
    literal                     go to state 281
    integer_literal             go to state 282
    character_literal           go to state 283
    floating_literal            go to state 284
    string_literal              go to state 285
    boolean_literal             go to state 286
    primary_expression          go to state 287
    id_expression               go to state 288
    unqualified_id              go to state 55
    qualified_id                go to state 56
    nested_name_specifier       go to state 289
    postfix_expression          go to state 290
    unary_expression            go to state 291
    unary_operator              go to state 292
    new_expression              go to state 293
    delete_expression           go to state 294
    cast_expression             go to state 295
    pm_expression               go to state 296
    multiplicative_expression   go to state 297
    additive_expression         go to state 298
    shift_expression            go to state 299
    relational_expression       go to state 300
    equality_expression         go to state 301
    and_expression              go to state 302
    exclusive_or_expression     go to state 303
    inclusive_or_expression     go to state 304
    logical_and_expression      go to state 305
    logical_or_expression       go to state 306
    conditional_expression      go to state 307
    assignment_expression       go to state 426
    expression                  go to state 504
    statement                   go to state 645
    labeled_statement           go to state 506
    expression_statement        go to state 507
    compound_statement          go to state 508
    selection_statement         go to state 510
    iteration_statement         go to state 511
    jump_statement              go to state 512
    declaration_statement       go to state 513
    block_declaration           go to state 514
    simple_declaration          go to state 61
    decl_specifier              go to state 62
    decl_specifier_seq          go to state 515
    storage_class_specifier     go to state 64
    function_specifier          go to state 65
    type_specifier              go to state 66
    simple_type_specifier       go to state 67
    type_name                   go to state 68
    elaborated_type_specifier   go to state 69
    enum_specifier              go to state 70
    namespace_alias_definition  go to state 76
    using_declaration           go to state 77
    using_directive             go to state 78
    asm_definition              go to state 79
    cv_qualifier                go to state 84
    class_specifier             go to state 87
    class_head                  go to state 88
    class_key                   go to state 89
    conversion_function_id      go to state 90
    operator_function_id        go to state 91
    template_id                 go to state 93
    try_block                   go to state 516
    throw_expression            go to state 313
    expression_opt              go to state 517


State 495

  160 iteration_statement: FOR . '(' for_init_statement condition_opt ';' expression_opt ')' statement

    '('  shift, and go to state 646


State 496

  166 jump_statement: GOTO . identifier ';'

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 647


State 497

  153 selection_statement: IF . '(' condition ')' statement
  154                    | IF . '(' condition ')' statement ELSE statement

    '('  shift, and go to state 648


State 498

  242 namespace_alias_definition: NAMESPACE . identifier '=' qualified_namespace_specifier ';'

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 649


State 499

  165 jump_statement: RETURN . expression_opt ';'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    $default  reduce using rule 466 (expression_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 426
    expression                 go to state 504
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 313
    expression_opt             go to state 650


State 500

  155 selection_statement: SWITCH . '(' condition ')' statement

    '('  shift, and go to state 651


State 501

  440 try_block: TRY . compound_statement handler_seq

    '{'  shift, and go to state 332

    compound_statement  go to state 652


State 502

  158 iteration_statement: WHILE . '(' condition ')' statement

    '('  shift, and go to state 653


State 503

   27 unqualified_id: identifier .
  146 labeled_statement: identifier . ':' statement

    ':'  shift, and go to state 654

    $default  reduce using rule 27 (unqualified_id)


State 504

  136 expression: expression . ',' assignment_expression
  467 expression_opt: expression .

    ','  shift, and go to state 596

    $default  reduce using rule 467 (expression_opt)


State 505

  151 statement_seq: statement .

    $default  reduce using rule 151 (statement_seq)


State 506

  138 statement: labeled_statement .

    $default  reduce using rule 138 (statement)


State 507

  139 statement: expression_statement .

    $default  reduce using rule 139 (statement)


State 508

  140 statement: compound_statement .

    $default  reduce using rule 140 (statement)


State 509

  152 statement_seq: statement_seq . statement
  469 statement_seq_opt: statement_seq .

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 4
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    ASM               shift, and go to state 6
    AUTO              shift, and go to state 7
    BOOL              shift, and go to state 8
    BREAK             shift, and go to state 490
    CASE              shift, and go to state 491
    CHAR              shift, and go to state 9
    CLASS             shift, and go to state 10
    CONST             shift, and go to state 11
    CONST_CAST        shift, and go to state 261
    CONTINUE          shift, and go to state 492
    DEFAULT           shift, and go to state 493
    DELETE            shift, and go to state 262
    DO                shift, and go to state 494
    DOUBLE            shift, and go to state 12
    DYNAMIC_CAST      shift, and go to state 263
    ENUM              shift, and go to state 13
    EXPLICIT          shift, and go to state 14
    EXTERN            shift, and go to state 185
    FALSE             shift, and go to state 264
    FLOAT             shift, and go to state 17
    FOR               shift, and go to state 495
    FRIEND            shift, and go to state 18
    GOTO              shift, and go to state 496
    IF                shift, and go to state 497
    INLINE            shift, and go to state 19
    INT               shift, and go to state 20
    LONG              shift, and go to state 21
    MUTABLE           shift, and go to state 22
    NAMESPACE         shift, and go to state 498
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REGISTER          shift, and go to state 25
    REINTERPRET_CAST  shift, and go to state 266
    RETURN            shift, and go to state 499
    SHORT             shift, and go to state 26
    SIGNED            shift, and go to state 27
    SIZEOF            shift, and go to state 267
    STATIC            shift, and go to state 28
    STATIC_CAST       shift, and go to state 268
    STRUCT            shift, and go to state 29
    SWITCH            shift, and go to state 500
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TRY               shift, and go to state 501
    TYPEDEF           shift, and go to state 31
    TYPEID            shift, and go to state 272
    TYPENAME          shift, and go to state 32
    UNION             shift, and go to state 33
    UNSIGNED          shift, and go to state 34
    USING             shift, and go to state 35
    VIRTUAL           shift, and go to state 36
    VOID              shift, and go to state 37
    VOLATILE          shift, and go to state 38
    WCHAR_T           shift, and go to state 39
    WHILE             shift, and go to state 502
    '('               shift, and go to state 273
    '{'               shift, and go to state 332
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    '}'       reduce using rule 469 (statement_seq_opt)
    $default  reduce using rule 466 (expression_opt)

    typedef_name                go to state 46
    namespace_name              go to state 47
    original_namespace_name     go to state 48
    class_name                  go to state 49
    enum_name                   go to state 50
    template_name               go to state 51
    identifier                  go to state 503
    literal                     go to state 281
    integer_literal             go to state 282
    character_literal           go to state 283
    floating_literal            go to state 284
    string_literal              go to state 285
    boolean_literal             go to state 286
    primary_expression          go to state 287
    id_expression               go to state 288
    unqualified_id              go to state 55
    qualified_id                go to state 56
    nested_name_specifier       go to state 289
    postfix_expression          go to state 290
    unary_expression            go to state 291
    unary_operator              go to state 292
    new_expression              go to state 293
    delete_expression           go to state 294
    cast_expression             go to state 295
    pm_expression               go to state 296
    multiplicative_expression   go to state 297
    additive_expression         go to state 298
    shift_expression            go to state 299
    relational_expression       go to state 300
    equality_expression         go to state 301
    and_expression              go to state 302
    exclusive_or_expression     go to state 303
    inclusive_or_expression     go to state 304
    logical_and_expression      go to state 305
    logical_or_expression       go to state 306
    conditional_expression      go to state 307
    assignment_expression       go to state 426
    expression                  go to state 504
    statement                   go to state 655
    labeled_statement           go to state 506
    expression_statement        go to state 507
    compound_statement          go to state 508
    selection_statement         go to state 510
    iteration_statement         go to state 511
    jump_statement              go to state 512
    declaration_statement       go to state 513
    block_declaration           go to state 514
    simple_declaration          go to state 61
    decl_specifier              go to state 62
    decl_specifier_seq          go to state 515
    storage_class_specifier     go to state 64
    function_specifier          go to state 65
    type_specifier              go to state 66
    simple_type_specifier       go to state 67
    type_name                   go to state 68
    elaborated_type_specifier   go to state 69
    enum_specifier              go to state 70
    namespace_alias_definition  go to state 76
    using_declaration           go to state 77
    using_directive             go to state 78
    asm_definition              go to state 79
    cv_qualifier                go to state 84
    class_specifier             go to state 87
    class_head                  go to state 88
    class_key                   go to state 89
    conversion_function_id      go to state 90
    operator_function_id        go to state 91
    template_id                 go to state 93
    try_block                   go to state 516
    throw_expression            go to state 313
    expression_opt              go to state 517


State 510

  141 statement: selection_statement .

    $default  reduce using rule 141 (statement)


State 511

  142 statement: iteration_statement .

    $default  reduce using rule 142 (statement)


State 512

  143 statement: jump_statement .

    $default  reduce using rule 143 (statement)


State 513

  144 statement: declaration_statement .

    $default  reduce using rule 144 (statement)


State 514

  167 declaration_statement: block_declaration .

    $default  reduce using rule 167 (declaration_statement)


State 515

  182 simple_declaration: decl_specifier_seq . init_declarator_list ';'
  183                   | decl_specifier_seq . ';'
  190 decl_specifier_seq: decl_specifier_seq . decl_specifier

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    CLASS_NAME      shift, and go to state 3
    ENUM_NAME       shift, and go to state 4
    COLONCOLON      shift, and go to state 5
    AUTO            shift, and go to state 7
    BOOL            shift, and go to state 8
    CHAR            shift, and go to state 9
    CLASS           shift, and go to state 10
    CONST           shift, and go to state 11
    DOUBLE          shift, and go to state 12
    ENUM            shift, and go to state 13
    EXPLICIT        shift, and go to state 14
    EXTERN          shift, and go to state 185
    FLOAT           shift, and go to state 17
    FRIEND          shift, and go to state 18
    INLINE          shift, and go to state 19
    INT             shift, and go to state 20
    LONG            shift, and go to state 21
    MUTABLE         shift, and go to state 22
    OPERATOR        shift, and go to state 24
    REGISTER        shift, and go to state 25
    SHORT           shift, and go to state 26
    SIGNED          shift, and go to state 27
    STATIC          shift, and go to state 28
    STRUCT          shift, and go to state 29
    TYPEDEF         shift, and go to state 31
    TYPENAME        shift, and go to state 32
    UNION           shift, and go to state 33
    UNSIGNED        shift, and go to state 34
    VIRTUAL         shift, and go to state 36
    VOID            shift, and go to state 37
    VOLATILE        shift, and go to state 38
    WCHAR_T         shift, and go to state 39
    ';'             shift, and go to state 186
    '('             shift, and go to state 40
    '&'             shift, and go to state 41
    '*'             shift, and go to state 42
    '~'             shift, and go to state 43
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 52
    id_expression              go to state 54
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 57
    decl_specifier             go to state 187
    storage_class_specifier    go to state 64
    function_specifier         go to state 65
    type_specifier             go to state 66
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    init_declarator_list       go to state 188
    init_declarator            go to state 189
    declarator                 go to state 477
    direct_declarator          go to state 82
    ptr_operator               go to state 83
    cv_qualifier               go to state 84
    declarator_id              go to state 85
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 516

  145 statement: try_block .

    $default  reduce using rule 145 (statement)


State 517

  149 expression_statement: expression_opt . ';'

    ';'  shift, and go to state 656


State 518

  150 compound_statement: '{' statement_seq_opt . '}'

    '}'  shift, and go to state 657


State 519

  265 direct_declarator: direct_declarator '(' parameter_declaration_clause ')' . cv_qualifier_seq exception_specification
  266                  | direct_declarator '(' parameter_declaration_clause ')' . cv_qualifier_seq
  267                  | direct_declarator '(' parameter_declaration_clause ')' . exception_specification
  268                  | direct_declarator '(' parameter_declaration_clause ')' .

    CONST     shift, and go to state 11
    THROW     shift, and go to state 658
    VOLATILE  shift, and go to state 38

    $default  reduce using rule 268 (direct_declarator)

    cv_qualifier_seq         go to state 659
    cv_qualifier             go to state 173
    exception_specification  go to state 660


State 520

  272 direct_declarator: direct_declarator '[' constant_expression_opt ']' .

    $default  reduce using rule 272 (direct_declarator)


State 521

  345 member_declarator: identifier ':' . constant_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 337
    conditional_expression     go to state 338
    constant_expression        go to state 661
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 522

  337 member_declaration: qualified_id ';' .

    $default  reduce using rule 337 (member_declaration)


State 523

  333 member_declaration: decl_specifier_seq ';' .

    $default  reduce using rule 333 (member_declaration)


State 524

  311 function_definition: decl_specifier_seq declarator . ctor_initializer_opt function_body
  313                    | decl_specifier_seq declarator . function_try_block
  342 member_declarator: declarator .
  343                  | declarator . pure_specifier
  344                  | declarator . constant_initializer

    TRY  shift, and go to state 191
    '='  shift, and go to state 526
    ':'  shift, and go to state 192

    '{'       reduce using rule 484 (ctor_initializer_opt)
    $default  reduce using rule 342 (member_declarator)

    pure_specifier        go to state 527
    constant_initializer  go to state 528
    ctor_initializer      go to state 193
    function_try_block    go to state 321
    ctor_initializer_opt  go to state 323


State 525

  332 member_declaration: decl_specifier_seq member_declarator_list . ';'
  340 member_declarator_list: member_declarator_list . ',' member_declarator

    ';'  shift, and go to state 662
    ','  shift, and go to state 533


State 526

  346 pure_specifier: '=' . '0'
  347 constant_initializer: '=' . constant_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45
    '0'               shift, and go to state 663

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 337
    conditional_expression     go to state 338
    constant_expression        go to state 664
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 527

  343 member_declarator: declarator pure_specifier .

    $default  reduce using rule 343 (member_declarator)


State 528

  344 member_declarator: declarator constant_initializer .

    $default  reduce using rule 344 (member_declarator)


State 529

  491 SEMICOLON_opt: ';' .

    $default  reduce using rule 491 (SEMICOLON_opt)


State 530

  336 member_declaration: function_definition SEMICOLON_opt .

    $default  reduce using rule 336 (member_declaration)


State 531

  330 member_specification: member_declaration member_specification_opt .

    $default  reduce using rule 330 (member_specification)


State 532

  334 member_declaration: member_declarator_list ';' .

    $default  reduce using rule 334 (member_declaration)


State 533

  340 member_declarator_list: member_declarator_list ',' . member_declarator

    IDENTIFIER      shift, and go to state 1
    CLASS_NAME      shift, and go to state 3
    COLONCOLON      shift, and go to state 169
    OPERATOR        shift, and go to state 24
    '('             shift, and go to state 40
    '&'             shift, and go to state 41
    '*'             shift, and go to state 42
    '~'             shift, and go to state 43
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    $default  reduce using rule 341 (member_declarator)

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 346
    id_expression            go to state 54
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 170
    declarator               go to state 665
    direct_declarator        go to state 82
    ptr_operator             go to state 83
    declarator_id            go to state 85
    member_declarator        go to state 666
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 534

  331 member_specification: access_specifier ':' . member_specification_opt

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    CLASS_NAME      shift, and go to state 3
    ENUM_NAME       shift, and go to state 4
    COLONCOLON      shift, and go to state 5
    AUTO            shift, and go to state 7
    BOOL            shift, and go to state 8
    CHAR            shift, and go to state 9
    CLASS           shift, and go to state 10
    CONST           shift, and go to state 11
    DOUBLE          shift, and go to state 12
    ENUM            shift, and go to state 13
    EXPLICIT        shift, and go to state 14
    EXTERN          shift, and go to state 185
    FLOAT           shift, and go to state 17
    FRIEND          shift, and go to state 18
    INLINE          shift, and go to state 19
    INT             shift, and go to state 20
    LONG            shift, and go to state 21
    MUTABLE         shift, and go to state 22
    OPERATOR        shift, and go to state 24
    PRIVATE         shift, and go to state 341
    PROTECTED       shift, and go to state 342
    PUBLIC          shift, and go to state 343
    REGISTER        shift, and go to state 25
    SHORT           shift, and go to state 26
    SIGNED          shift, and go to state 27
    STATIC          shift, and go to state 28
    STRUCT          shift, and go to state 29
    TYPEDEF         shift, and go to state 31
    TYPENAME        shift, and go to state 32
    UNION           shift, and go to state 33
    UNSIGNED        shift, and go to state 34
    USING           shift, and go to state 344
    VIRTUAL         shift, and go to state 36
    VOID            shift, and go to state 37
    VOLATILE        shift, and go to state 38
    WCHAR_T         shift, and go to state 39
    ';'             shift, and go to state 345
    '('             shift, and go to state 40
    '&'             shift, and go to state 41
    '*'             shift, and go to state 42
    '~'             shift, and go to state 43
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    ';'       [reduce using rule 341 (member_declarator)]
    '}'       reduce using rule 488 (member_specification_opt)
    $default  reduce using rule 341 (member_declarator)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 346
    id_expression              go to state 54
    unqualified_id             go to state 55
    qualified_id               go to state 347
    nested_name_specifier      go to state 57
    decl_specifier             go to state 62
    decl_specifier_seq         go to state 348
    storage_class_specifier    go to state 64
    function_specifier         go to state 65
    type_specifier             go to state 66
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    using_declaration          go to state 349
    declarator                 go to state 350
    direct_declarator          go to state 82
    ptr_operator               go to state 83
    cv_qualifier               go to state 84
    declarator_id              go to state 85
    function_definition        go to state 351
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    member_specification       go to state 352
    member_declaration         go to state 353
    member_declarator_list     go to state 354
    member_declarator          go to state 355
    access_specifier           go to state 356
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    member_specification_opt   go to state 667


State 535

  322 class_specifier: class_head '{' member_specification_opt '}' .

    $default  reduce using rule 322 (class_specifier)


State 536

  221 elaborated_type_specifier: class_key COLONCOLON nested_name_specifier identifier .

    $default  reduce using rule 221 (elaborated_type_specifier)


State 537

  351 base_specifier: COLONCOLON . nested_name_specifier class_name
  352               | COLONCOLON . class_name

    CLASS_NAME      shift, and go to state 100
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 668
    template_name            go to state 51
    nested_name_specifier    go to state 669
    template_id              go to state 93


State 538

  355 base_specifier: VIRTUAL . access_specifier COLONCOLON nested_name_specifier_opt class_name
  356               | VIRTUAL . access_specifier nested_name_specifier_opt class_name
  357               | VIRTUAL . COLONCOLON nested_name_specifier_opt class_name
  358               | VIRTUAL . nested_name_specifier_opt class_name

    CLASS_NAME      shift, and go to state 100
    COLONCOLON      shift, and go to state 670
    PRIVATE         shift, and go to state 341
    PROTECTED       shift, and go to state 342
    PUBLIC          shift, and go to state 343
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    CLASS_NAME     [reduce using rule 454 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 454 (nested_name_specifier_opt)]

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    nested_name_specifier      go to state 228
    access_specifier           go to state 671
    template_id                go to state 93
    nested_name_specifier_opt  go to state 672


State 539

   33 nested_name_specifier: class_name . COLONCOLON nested_name_specifier
   35                      | class_name . COLONCOLON
  354 base_specifier: class_name .

    COLONCOLON  shift, and go to state 176

    $default  reduce using rule 354 (base_specifier)


State 540

  353 base_specifier: nested_name_specifier . class_name

    CLASS_NAME     shift, and go to state 100
    TEMPLATE_NAME  shift, and go to state 45

    class_name     go to state 673
    template_name  go to state 51
    template_id    go to state 93


State 541

  348 base_clause: ':' base_specifier_list .
  350 base_specifier_list: base_specifier_list . ',' base_specifier

    ','  shift, and go to state 674

    $default  reduce using rule 348 (base_clause)


State 542

  349 base_specifier_list: base_specifier .

    $default  reduce using rule 349 (base_specifier_list)


State 543

  359 base_specifier: access_specifier . VIRTUAL COLONCOLON nested_name_specifier_opt class_name
  360               | access_specifier . VIRTUAL nested_name_specifier_opt class_name
  361               | access_specifier . COLONCOLON nested_name_specifier_opt class_name
  362               | access_specifier . nested_name_specifier_opt class_name

    CLASS_NAME      shift, and go to state 100
    COLONCOLON      shift, and go to state 675
    VIRTUAL         shift, and go to state 676
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    CLASS_NAME     [reduce using rule 454 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 454 (nested_name_specifier_opt)]

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    nested_name_specifier      go to state 228
    template_id                go to state 93
    nested_name_specifier_opt  go to state 677


State 544

  326 class_head: class_key nested_name_specifier identifier base_clause .

    $default  reduce using rule 326 (class_head)


State 545

  327 class_key: CLASS .
  426 type_parameter: CLASS . identifier
  427               | CLASS . identifier '=' type_id

    IDENTIFIER  shift, and go to state 1

    IDENTIFIER  [reduce using rule 327 (class_key)]
    $default    reduce using rule 327 (class_key)

    identifier  go to state 678


State 546

  430 type_parameter: TEMPLATE . '<' template_parameter_list '>' CLASS identifier
  431               | TEMPLATE . '<' template_parameter_list '>' CLASS identifier '=' template_name

    '<'  shift, and go to state 679


State 547

  226 elaborated_type_specifier: TYPENAME . COLONCOLON_opt nested_name_specifier identifier
  227                          | TYPENAME . COLONCOLON_opt nested_name_specifier identifier '<' template_argument_list '>'
  428 type_parameter: TYPENAME . identifier
  429               | TYPENAME . identifier '=' type_id

    IDENTIFIER  shift, and go to state 1
    COLONCOLON  shift, and go to state 163

    $default  reduce using rule 458 (COLONCOLON_opt)

    identifier      go to state 680
    COLONCOLON_opt  go to state 164


State 548

  425 template_parameter: parameter_declaration .

    $default  reduce using rule 425 (template_parameter)


State 549

  421 template_declaration: EXPORT_opt TEMPLATE '<' template_parameter_list . '>' declaration
  423 template_parameter_list: template_parameter_list . ',' template_parameter

    ','  shift, and go to state 681
    '>'  shift, and go to state 682


State 550

  422 template_parameter_list: template_parameter .

    $default  reduce using rule 422 (template_parameter_list)


State 551

  424 template_parameter: type_parameter .

    $default  reduce using rule 424 (template_parameter)


State 552

  271 direct_declarator: CLASS_NAME COLONCOLON CLASS_NAME '(' parameter_declaration_clause . ')'

    ')'  shift, and go to state 683


State 553

  270 direct_declarator: CLASS_NAME COLONCOLON declarator_id '(' parameter_declaration_clause . ')'

    ')'  shift, and go to state 684


State 554

  298 direct_abstract_declarator: '(' abstract_declarator . ')'

    ')'  shift, and go to state 685


State 555

  307 parameter_declaration: decl_specifier_seq declarator '=' . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 686
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 313


State 556

  291 abstract_declarator: ptr_operator abstract_declarator_opt .

    $default  reduce using rule 291 (abstract_declarator)


State 557

  309 parameter_declaration: decl_specifier_seq abstract_declarator_opt '=' . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 687
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 313


State 558

  293 direct_abstract_declarator: direct_abstract_declarator_opt '(' . parameter_declaration_clause ')' cv_qualifier_seq exception_specification
  294                           | direct_abstract_declarator_opt '(' . parameter_declaration_clause ')' cv_qualifier_seq
  295                           | direct_abstract_declarator_opt '(' . parameter_declaration_clause ')' exception_specification
  296                           | direct_abstract_declarator_opt '(' . parameter_declaration_clause ')'

    TYPEDEF_NAME    shift, and go to state 2
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 4
    ELLIPSIS        shift, and go to state 208
    COLONCOLON      shift, and go to state 115
    AUTO            shift, and go to state 7
    BOOL            shift, and go to state 8
    CHAR            shift, and go to state 9
    CLASS           shift, and go to state 10
    CONST           shift, and go to state 11
    DOUBLE          shift, and go to state 12
    ENUM            shift, and go to state 13
    EXPLICIT        shift, and go to state 14
    EXTERN          shift, and go to state 185
    FLOAT           shift, and go to state 17
    FRIEND          shift, and go to state 18
    INLINE          shift, and go to state 19
    INT             shift, and go to state 20
    LONG            shift, and go to state 21
    MUTABLE         shift, and go to state 22
    REGISTER        shift, and go to state 25
    SHORT           shift, and go to state 26
    SIGNED          shift, and go to state 27
    STATIC          shift, and go to state 28
    STRUCT          shift, and go to state 29
    TYPEDEF         shift, and go to state 31
    TYPENAME        shift, and go to state 32
    UNION           shift, and go to state 33
    UNSIGNED        shift, and go to state 34
    VIRTUAL         shift, and go to state 36
    VOID            shift, and go to state 37
    VOLATILE        shift, and go to state 38
    WCHAR_T         shift, and go to state 39
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    $default  reduce using rule 303 (parameter_declaration_clause)

    typedef_name                  go to state 46
    namespace_name                go to state 47
    original_namespace_name       go to state 48
    class_name                    go to state 49
    enum_name                     go to state 50
    template_name                 go to state 51
    nested_name_specifier         go to state 156
    decl_specifier                go to state 62
    decl_specifier_seq            go to state 209
    storage_class_specifier       go to state 64
    function_specifier            go to state 65
    type_specifier                go to state 66
    simple_type_specifier         go to state 67
    type_name                     go to state 68
    elaborated_type_specifier     go to state 69
    enum_specifier                go to state 70
    cv_qualifier                  go to state 84
    parameter_declaration_clause  go to state 688
    parameter_declaration_list    go to state 211
    parameter_declaration         go to state 212
    class_specifier               go to state 87
    class_head                    go to state 88
    class_key                     go to state 89
    template_id                   go to state 93


State 559

  297 direct_abstract_declarator: direct_abstract_declarator_opt '[' . constant_expression_opt ']'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    $default  reduce using rule 476 (constant_expression_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 337
    conditional_expression     go to state 338
    constant_expression        go to state 339
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    constant_expression_opt    go to state 689


State 560

  302 parameter_declaration_clause: parameter_declaration_list ',' ELLIPSIS .

    $default  reduce using rule 302 (parameter_declaration_clause)


State 561

  305 parameter_declaration_list: parameter_declaration_list ',' parameter_declaration .

    $default  reduce using rule 305 (parameter_declaration_list)


State 562

  256 asm_definition: ASM '(' string_literal ')' ';' .

    $default  reduce using rule 256 (asm_definition)


State 563

  230 enumerator_list: enumerator_list ',' . enumerator_definition

    IDENTIFIER  shift, and go to state 1

    identifier             go to state 380
    enumerator_definition  go to state 690
    enumerator             go to state 383


State 564

  232 enumerator_definition: enumerator '=' . constant_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 337
    conditional_expression     go to state 338
    constant_expression        go to state 691
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 565

  228 enum_specifier: ENUM identifier '{' enumerator_list_opt '}' .

    $default  reduce using rule 228 (enum_specifier)


State 566

  257 linkage_specification: EXTERN string_literal '{' declaration_seq_opt '}' .

    $default  reduce using rule 257 (linkage_specification)


State 567

  239 extension_namespace_definition: NAMESPACE original_namespace_name '{' namespace_body '}' .

    $default  reduce using rule 239 (extension_namespace_definition)


State 568

  238 original_namespace_definition: NAMESPACE identifier '{' namespace_body '}' .

    $default  reduce using rule 238 (original_namespace_definition)


State 569

   34 nested_name_specifier: namespace_name . COLONCOLON nested_name_specifier
  244 qualified_namespace_specifier: COLONCOLON namespace_name .

    COLONCOLON  shift, and go to state 175

    $default  reduce using rule 244 (qualified_namespace_specifier)


State 570

  243 qualified_namespace_specifier: COLONCOLON nested_name_specifier . namespace_name

    NAMESPACE_NAME  shift, and go to state 44

    namespace_name           go to state 692
    original_namespace_name  go to state 48


State 571

  245 qualified_namespace_specifier: nested_name_specifier namespace_name .

    $default  reduce using rule 245 (qualified_namespace_specifier)


State 572

  242 namespace_alias_definition: NAMESPACE identifier '=' qualified_namespace_specifier ';' .

    $default  reduce using rule 242 (namespace_alias_definition)


State 573

  227 elaborated_type_specifier: TYPENAME COLONCOLON_opt nested_name_specifier identifier '<' . template_argument_list '>'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 4
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 8
    CHAR              shift, and go to state 9
    CLASS             shift, and go to state 10
    CONST             shift, and go to state 11
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DOUBLE            shift, and go to state 12
    DYNAMIC_CAST      shift, and go to state 263
    ENUM              shift, and go to state 13
    FALSE             shift, and go to state 264
    FLOAT             shift, and go to state 17
    INT               shift, and go to state 20
    LONG              shift, and go to state 21
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SHORT             shift, and go to state 26
    SIGNED            shift, and go to state 27
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    STRUCT            shift, and go to state 29
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    TYPENAME          shift, and go to state 32
    UNION             shift, and go to state 33
    UNSIGNED          shift, and go to state 34
    VOID              shift, and go to state 37
    VOLATILE          shift, and go to state 38
    WCHAR_T           shift, and go to state 39
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 280
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 289
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 308
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 309
    type_specifier_seq         go to state 310
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    template_argument_list     go to state 693
    template_argument          go to state 312
    throw_expression           go to state 313


State 574

  249 using_declaration: USING COLONCOLON nested_name_specifier unqualified_id ';' .

    $default  reduce using rule 249 (using_declaration)


State 575

  253 using_directive: USING NAMESPACE COLONCOLON namespace_name ';' .

    $default  reduce using rule 253 (using_directive)


State 576

  252 using_directive: USING NAMESPACE COLONCOLON nested_name_specifier namespace_name . ';'

    ';'  shift, and go to state 694


State 577

  254 using_directive: USING NAMESPACE nested_name_specifier namespace_name ';' .

    $default  reduce using rule 254 (using_directive)


State 578

  247 using_declaration: USING TYPENAME COLONCOLON nested_name_specifier unqualified_id . ';'

    ';'  shift, and go to state 695


State 579

  248 using_declaration: USING TYPENAME nested_name_specifier unqualified_id ';' .

    $default  reduce using rule 248 (using_declaration)


State 580

   85 delete_expression: COLONCOLON DELETE '[' . ']' cast_expression

    ']'  shift, and go to state 696


State 581

   83 delete_expression: COLONCOLON DELETE cast_expression .

    $default  reduce using rule 83 (delete_expression)


State 582

   72 new_expression: COLONCOLON NEW new_placement_opt . new_type_id new_initializer_opt
   74               | COLONCOLON NEW new_placement_opt . '(' type_id ')' new_initializer_opt

    TYPEDEF_NAME    shift, and go to state 2
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 4
    COLONCOLON      shift, and go to state 115
    BOOL            shift, and go to state 8
    CHAR            shift, and go to state 9
    CLASS           shift, and go to state 10
    CONST           shift, and go to state 11
    DOUBLE          shift, and go to state 12
    ENUM            shift, and go to state 13
    FLOAT           shift, and go to state 17
    INT             shift, and go to state 20
    LONG            shift, and go to state 21
    SHORT           shift, and go to state 26
    SIGNED          shift, and go to state 27
    STRUCT          shift, and go to state 29
    TYPENAME        shift, and go to state 32
    UNION           shift, and go to state 33
    UNSIGNED        shift, and go to state 34
    VOID            shift, and go to state 37
    VOLATILE        shift, and go to state 38
    WCHAR_T         shift, and go to state 39
    '('             shift, and go to state 697
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    new_type_id                go to state 698
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_specifier_seq         go to state 589
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93


State 583

   52 postfix_expression: CONST_CAST '<' type_id . '>' '(' expression ')'

    '>'  shift, and go to state 699


State 584

   84 delete_expression: DELETE '[' ']' . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 281
    integer_literal          go to state 282
    character_literal        go to state 283
    floating_literal         go to state 284
    string_literal           go to state 285
    boolean_literal          go to state 286
    primary_expression       go to state 287
    id_expression            go to state 288
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    postfix_expression       go to state 290
    unary_expression         go to state 291
    unary_operator           go to state 292
    new_expression           go to state 293
    delete_expression        go to state 294
    cast_expression          go to state 700
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 585

   49 postfix_expression: DYNAMIC_CAST '<' type_id . '>' '(' expression ')'

    '>'  shift, and go to state 701


State 586

   56 expression_list: expression_list . ',' assignment_expression
   75 new_placement: '(' expression_list . ')'

    ')'  shift, and go to state 702
    ','  shift, and go to state 631


State 587

   73 new_expression: NEW new_placement_opt '(' . type_id ')' new_initializer_opt

    TYPEDEF_NAME    shift, and go to state 2
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 4
    COLONCOLON      shift, and go to state 115
    BOOL            shift, and go to state 8
    CHAR            shift, and go to state 9
    CLASS           shift, and go to state 10
    CONST           shift, and go to state 11
    DOUBLE          shift, and go to state 12
    ENUM            shift, and go to state 13
    FLOAT           shift, and go to state 17
    INT             shift, and go to state 20
    LONG            shift, and go to state 21
    SHORT           shift, and go to state 26
    SIGNED          shift, and go to state 27
    STRUCT          shift, and go to state 29
    TYPENAME        shift, and go to state 32
    UNION           shift, and go to state 33
    UNSIGNED        shift, and go to state 34
    VOID            shift, and go to state 37
    VOLATILE        shift, and go to state 38
    WCHAR_T         shift, and go to state 39
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 703
    type_specifier_seq         go to state 310
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93


State 588

   71 new_expression: NEW new_placement_opt new_type_id . new_initializer_opt

    '('  shift, and go to state 704

    $default  reduce using rule 462 (new_initializer_opt)

    new_initializer      go to state 705
    new_initializer_opt  go to state 706


State 589

   76 new_type_id: type_specifier_seq . new_declarator_opt

    CLASS_NAME      shift, and go to state 100
    COLONCOLON      shift, and go to state 235
    '['             shift, and go to state 707
    '&'             shift, and go to state 41
    '*'             shift, and go to state 42
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    '&'       [reduce using rule 464 (new_declarator_opt)]
    '*'       [reduce using rule 464 (new_declarator_opt)]
    $default  reduce using rule 464 (new_declarator_opt)

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    nested_name_specifier    go to state 236
    new_declarator           go to state 708
    direct_new_declarator    go to state 709
    ptr_operator             go to state 710
    template_id              go to state 93
    new_declarator_opt       go to state 711


State 590

   51 postfix_expression: REINTERPRET_CAST '<' type_id . '>' '(' expression ')'

    '>'  shift, and go to state 712


State 591

   64 unary_expression: SIZEOF '(' type_id . ')'

    ')'  shift, and go to state 713


State 592

   50 postfix_expression: STATIC_CAST '<' type_id . '>' '(' expression ')'

    '>'  shift, and go to state 714


State 593

   53 postfix_expression: TYPEID '(' expression . ')'
  136 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 715
    ','  shift, and go to state 596


State 594

   54 postfix_expression: TYPEID '(' type_id . ')'

    ')'  shift, and go to state 716


State 595

   23 primary_expression: '(' expression ')' .

    $default  reduce using rule 23 (primary_expression)


State 596

  136 expression: expression ',' . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 717
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 313


State 597

   87 cast_expression: '(' type_id ')' . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 281
    integer_literal          go to state 282
    character_literal        go to state 283
    floating_literal         go to state 284
    string_literal           go to state 285
    boolean_literal          go to state 286
    primary_expression       go to state 287
    id_expression            go to state 288
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    postfix_expression       go to state 290
    unary_expression         go to state 291
    unary_operator           go to state 292
    new_expression           go to state 293
    delete_expression        go to state 294
    cast_expression          go to state 718
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 598

   45 postfix_expression: postfix_expression ARROW COLONCOLON . id_expression

    IDENTIFIER      shift, and go to state 1
    CLASS_NAME      shift, and go to state 100
    OPERATOR        shift, and go to state 24
    '~'             shift, and go to state 43
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 719
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 599

   43 postfix_expression: postfix_expression ARROW TEMPLATE . COLONCOLON id_expression
   44                   | postfix_expression ARROW TEMPLATE . id_expression

    IDENTIFIER      shift, and go to state 1
    CLASS_NAME      shift, and go to state 100
    COLONCOLON      shift, and go to state 720
    OPERATOR        shift, and go to state 24
    '~'             shift, and go to state 43
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 721
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 600

   46 postfix_expression: postfix_expression ARROW id_expression .

    $default  reduce using rule 46 (postfix_expression)


State 601

   56 expression_list: expression_list . ',' assignment_expression
  457 expression_list_opt: expression_list .

    ','  shift, and go to state 631

    $default  reduce using rule 457 (expression_list_opt)


State 602

   38 postfix_expression: postfix_expression '(' expression_list_opt . ')'

    ')'  shift, and go to state 722


State 603

   37 postfix_expression: postfix_expression '[' expression . ']'
  136 expression: expression . ',' assignment_expression

    ','  shift, and go to state 596
    ']'  shift, and go to state 723


State 604

   41 postfix_expression: postfix_expression '.' COLONCOLON . id_expression

    IDENTIFIER      shift, and go to state 1
    CLASS_NAME      shift, and go to state 100
    OPERATOR        shift, and go to state 24
    '~'             shift, and go to state 43
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 724
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 605

   39 postfix_expression: postfix_expression '.' TEMPLATE . COLONCOLON id_expression
   40                   | postfix_expression '.' TEMPLATE . id_expression

    IDENTIFIER      shift, and go to state 1
    CLASS_NAME      shift, and go to state 100
    COLONCOLON      shift, and go to state 725
    OPERATOR        shift, and go to state 24
    '~'             shift, and go to state 43
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 726
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 606

   42 postfix_expression: postfix_expression '.' id_expression .

    $default  reduce using rule 42 (postfix_expression)


State 607

   89 pm_expression: pm_expression DOTSTAR cast_expression .

    $default  reduce using rule 89 (pm_expression)


State 608

   90 pm_expression: pm_expression ARROWSTAR cast_expression .

    $default  reduce using rule 90 (pm_expression)


State 609

   89 pm_expression: pm_expression . DOTSTAR cast_expression
   90              | pm_expression . ARROWSTAR cast_expression
   94 multiplicative_expression: multiplicative_expression '%' pm_expression .

    DOTSTAR    shift, and go to state 438
    ARROWSTAR  shift, and go to state 439

    $default  reduce using rule 94 (multiplicative_expression)


State 610

   89 pm_expression: pm_expression . DOTSTAR cast_expression
   90              | pm_expression . ARROWSTAR cast_expression
   92 multiplicative_expression: multiplicative_expression '*' pm_expression .

    DOTSTAR    shift, and go to state 438
    ARROWSTAR  shift, and go to state 439

    $default  reduce using rule 92 (multiplicative_expression)


State 611

   89 pm_expression: pm_expression . DOTSTAR cast_expression
   90              | pm_expression . ARROWSTAR cast_expression
   93 multiplicative_expression: multiplicative_expression '/' pm_expression .

    DOTSTAR    shift, and go to state 438
    ARROWSTAR  shift, and go to state 439

    $default  reduce using rule 93 (multiplicative_expression)


State 612

   92 multiplicative_expression: multiplicative_expression . '*' pm_expression
   93                          | multiplicative_expression . '/' pm_expression
   94                          | multiplicative_expression . '%' pm_expression
   96 additive_expression: additive_expression '+' multiplicative_expression .

    '%'  shift, and go to state 440
    '*'  shift, and go to state 441
    '/'  shift, and go to state 442

    $default  reduce using rule 96 (additive_expression)


State 613

   92 multiplicative_expression: multiplicative_expression . '*' pm_expression
   93                          | multiplicative_expression . '/' pm_expression
   94                          | multiplicative_expression . '%' pm_expression
   97 additive_expression: additive_expression '-' multiplicative_expression .

    '%'  shift, and go to state 440
    '*'  shift, and go to state 441
    '/'  shift, and go to state 442

    $default  reduce using rule 97 (additive_expression)


State 614

   96 additive_expression: additive_expression . '+' multiplicative_expression
   97                    | additive_expression . '-' multiplicative_expression
   99 shift_expression: shift_expression SL additive_expression .

    '+'  shift, and go to state 443
    '-'  shift, and go to state 444

    $default  reduce using rule 99 (shift_expression)


State 615

   96 additive_expression: additive_expression . '+' multiplicative_expression
   97                    | additive_expression . '-' multiplicative_expression
  100 shift_expression: shift_expression SR additive_expression .

    '+'  shift, and go to state 443
    '-'  shift, and go to state 444

    $default  reduce using rule 100 (shift_expression)


State 616

   99 shift_expression: shift_expression . SL additive_expression
  100                 | shift_expression . SR additive_expression
  104 relational_expression: relational_expression LTEQ shift_expression .

    SL  shift, and go to state 445
    SR  shift, and go to state 446

    $default  reduce using rule 104 (relational_expression)


State 617

   99 shift_expression: shift_expression . SL additive_expression
  100                 | shift_expression . SR additive_expression
  105 relational_expression: relational_expression GTEQ shift_expression .

    SL  shift, and go to state 445
    SR  shift, and go to state 446

    $default  reduce using rule 105 (relational_expression)


State 618

   99 shift_expression: shift_expression . SL additive_expression
  100                 | shift_expression . SR additive_expression
  102 relational_expression: relational_expression '<' shift_expression .

    SL  shift, and go to state 445
    SR  shift, and go to state 446

    $default  reduce using rule 102 (relational_expression)


State 619

   99 shift_expression: shift_expression . SL additive_expression
  100                 | shift_expression . SR additive_expression
  103 relational_expression: relational_expression '>' shift_expression .

    SL  shift, and go to state 445
    SR  shift, and go to state 446

    $default  reduce using rule 103 (relational_expression)


State 620

  102 relational_expression: relational_expression . '<' shift_expression
  103                      | relational_expression . '>' shift_expression
  104                      | relational_expression . LTEQ shift_expression
  105                      | relational_expression . GTEQ shift_expression
  107 equality_expression: equality_expression EQ relational_expression .

    LTEQ  shift, and go to state 447
    GTEQ  shift, and go to state 448
    '<'   shift, and go to state 449
    '>'   shift, and go to state 450

    '>'       [reduce using rule 107 (equality_expression)]
    $default  reduce using rule 107 (equality_expression)


State 621

  102 relational_expression: relational_expression . '<' shift_expression
  103                      | relational_expression . '>' shift_expression
  104                      | relational_expression . LTEQ shift_expression
  105                      | relational_expression . GTEQ shift_expression
  108 equality_expression: equality_expression NOTEQ relational_expression .

    LTEQ  shift, and go to state 447
    GTEQ  shift, and go to state 448
    '<'   shift, and go to state 449
    '>'   shift, and go to state 450

    '>'       [reduce using rule 108 (equality_expression)]
    $default  reduce using rule 108 (equality_expression)


State 622

  107 equality_expression: equality_expression . EQ relational_expression
  108                    | equality_expression . NOTEQ relational_expression
  110 and_expression: and_expression '&' equality_expression .

    EQ     shift, and go to state 451
    NOTEQ  shift, and go to state 452

    $default  reduce using rule 110 (and_expression)


State 623

  110 and_expression: and_expression . '&' equality_expression
  112 exclusive_or_expression: exclusive_or_expression '^' and_expression .

    '&'  shift, and go to state 453

    $default  reduce using rule 112 (exclusive_or_expression)


State 624

  112 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  114 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .

    '^'  shift, and go to state 454

    $default  reduce using rule 114 (inclusive_or_expression)


State 625

  114 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  116 logical_and_expression: logical_and_expression ANDAND inclusive_or_expression .

    '|'  shift, and go to state 455

    $default  reduce using rule 116 (logical_and_expression)


State 626

  116 logical_and_expression: logical_and_expression . ANDAND inclusive_or_expression
  118 logical_or_expression: logical_or_expression OROR logical_and_expression .

    ANDAND  shift, and go to state 456

    $default  reduce using rule 118 (logical_or_expression)


State 627

  120 conditional_expression: logical_or_expression '?' expression . ':' assignment_expression
  136 expression: expression . ',' assignment_expression

    ','  shift, and go to state 596
    ':'  shift, and go to state 727


State 628

  122 assignment_expression: logical_or_expression assignment_operator assignment_expression .

    $default  reduce using rule 122 (assignment_expression)


State 629

  434 template_argument_list: template_argument_list ',' template_argument .

    $default  reduce using rule 434 (template_argument_list)


State 630

  316 initializer: '(' expression_list ')' .

    $default  reduce using rule 316 (initializer)


State 631

   56 expression_list: expression_list ',' . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 728
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 313


State 632

  319 initializer_clause: '{' '}' .

    $default  reduce using rule 319 (initializer_clause)


State 633

  320 initializer_list: initializer_clause .

    $default  reduce using rule 320 (initializer_list)


State 634

  318 initializer_clause: '{' initializer_list . COMMA_opt '}'
  321 initializer_list: initializer_list . ',' initializer_clause

    ','  shift, and go to state 729

    $default  reduce using rule 486 (COMMA_opt)

    COMMA_opt  go to state 730


State 635

  443 handler: CATCH . '(' exception_declaration ')' compound_statement

    '('  shift, and go to state 731


State 636

  441 function_try_block: TRY ctor_initializer_opt function_body handler_seq .

    $default  reduce using rule 441 (function_try_block)


State 637

  442 handler_seq: handler . handler_seq_opt

    CATCH  shift, and go to state 635

    $default  reduce using rule 496 (handler_seq_opt)

    handler_seq      go to state 732
    handler          go to state 637
    handler_seq_opt  go to state 733


State 638

  373 mem_initializer_id: COLONCOLON nested_name_specifier class_name .

    $default  reduce using rule 373 (mem_initializer_id)


State 639

  371 mem_initializer_list: mem_initializer ',' mem_initializer_list .

    $default  reduce using rule 371 (mem_initializer_list)


State 640

  372 mem_initializer: mem_initializer_id '(' expression_list_opt . ')'

    ')'  shift, and go to state 734


State 641

  163 jump_statement: BREAK ';' .

    $default  reduce using rule 163 (jump_statement)


State 642

  147 labeled_statement: CASE constant_expression . ':' statement

    ':'  shift, and go to state 735


State 643

  164 jump_statement: CONTINUE ';' .

    $default  reduce using rule 164 (jump_statement)


State 644

  148 labeled_statement: DEFAULT ':' . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 4
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    ASM               shift, and go to state 6
    AUTO              shift, and go to state 7
    BOOL              shift, and go to state 8
    BREAK             shift, and go to state 490
    CASE              shift, and go to state 491
    CHAR              shift, and go to state 9
    CLASS             shift, and go to state 10
    CONST             shift, and go to state 11
    CONST_CAST        shift, and go to state 261
    CONTINUE          shift, and go to state 492
    DEFAULT           shift, and go to state 493
    DELETE            shift, and go to state 262
    DO                shift, and go to state 494
    DOUBLE            shift, and go to state 12
    DYNAMIC_CAST      shift, and go to state 263
    ENUM              shift, and go to state 13
    EXPLICIT          shift, and go to state 14
    EXTERN            shift, and go to state 185
    FALSE             shift, and go to state 264
    FLOAT             shift, and go to state 17
    FOR               shift, and go to state 495
    FRIEND            shift, and go to state 18
    GOTO              shift, and go to state 496
    IF                shift, and go to state 497
    INLINE            shift, and go to state 19
    INT               shift, and go to state 20
    LONG              shift, and go to state 21
    MUTABLE           shift, and go to state 22
    NAMESPACE         shift, and go to state 498
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REGISTER          shift, and go to state 25
    REINTERPRET_CAST  shift, and go to state 266
    RETURN            shift, and go to state 499
    SHORT             shift, and go to state 26
    SIGNED            shift, and go to state 27
    SIZEOF            shift, and go to state 267
    STATIC            shift, and go to state 28
    STATIC_CAST       shift, and go to state 268
    STRUCT            shift, and go to state 29
    SWITCH            shift, and go to state 500
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TRY               shift, and go to state 501
    TYPEDEF           shift, and go to state 31
    TYPEID            shift, and go to state 272
    TYPENAME          shift, and go to state 32
    UNION             shift, and go to state 33
    UNSIGNED          shift, and go to state 34
    USING             shift, and go to state 35
    VIRTUAL           shift, and go to state 36
    VOID              shift, and go to state 37
    VOLATILE          shift, and go to state 38
    WCHAR_T           shift, and go to state 39
    WHILE             shift, and go to state 502
    '('               shift, and go to state 273
    '{'               shift, and go to state 332
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    $default  reduce using rule 466 (expression_opt)

    typedef_name                go to state 46
    namespace_name              go to state 47
    original_namespace_name     go to state 48
    class_name                  go to state 49
    enum_name                   go to state 50
    template_name               go to state 51
    identifier                  go to state 503
    literal                     go to state 281
    integer_literal             go to state 282
    character_literal           go to state 283
    floating_literal            go to state 284
    string_literal              go to state 285
    boolean_literal             go to state 286
    primary_expression          go to state 287
    id_expression               go to state 288
    unqualified_id              go to state 55
    qualified_id                go to state 56
    nested_name_specifier       go to state 289
    postfix_expression          go to state 290
    unary_expression            go to state 291
    unary_operator              go to state 292
    new_expression              go to state 293
    delete_expression           go to state 294
    cast_expression             go to state 295
    pm_expression               go to state 296
    multiplicative_expression   go to state 297
    additive_expression         go to state 298
    shift_expression            go to state 299
    relational_expression       go to state 300
    equality_expression         go to state 301
    and_expression              go to state 302
    exclusive_or_expression     go to state 303
    inclusive_or_expression     go to state 304
    logical_and_expression      go to state 305
    logical_or_expression       go to state 306
    conditional_expression      go to state 307
    assignment_expression       go to state 426
    expression                  go to state 504
    statement                   go to state 736
    labeled_statement           go to state 506
    expression_statement        go to state 507
    compound_statement          go to state 508
    selection_statement         go to state 510
    iteration_statement         go to state 511
    jump_statement              go to state 512
    declaration_statement       go to state 513
    block_declaration           go to state 514
    simple_declaration          go to state 61
    decl_specifier              go to state 62
    decl_specifier_seq          go to state 515
    storage_class_specifier     go to state 64
    function_specifier          go to state 65
    type_specifier              go to state 66
    simple_type_specifier       go to state 67
    type_name                   go to state 68
    elaborated_type_specifier   go to state 69
    enum_specifier              go to state 70
    namespace_alias_definition  go to state 76
    using_declaration           go to state 77
    using_directive             go to state 78
    asm_definition              go to state 79
    cv_qualifier                go to state 84
    class_specifier             go to state 87
    class_head                  go to state 88
    class_key                   go to state 89
    conversion_function_id      go to state 90
    operator_function_id        go to state 91
    template_id                 go to state 93
    try_block                   go to state 516
    throw_expression            go to state 313
    expression_opt              go to state 517


State 645

  159 iteration_statement: DO statement . WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 737


State 646

  160 iteration_statement: FOR '(' . for_init_statement condition_opt ';' expression_opt ')' statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 4
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    AUTO              shift, and go to state 7
    BOOL              shift, and go to state 8
    CHAR              shift, and go to state 9
    CLASS             shift, and go to state 10
    CONST             shift, and go to state 11
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DOUBLE            shift, and go to state 12
    DYNAMIC_CAST      shift, and go to state 263
    ENUM              shift, and go to state 13
    EXPLICIT          shift, and go to state 14
    EXTERN            shift, and go to state 185
    FALSE             shift, and go to state 264
    FLOAT             shift, and go to state 17
    FRIEND            shift, and go to state 18
    INLINE            shift, and go to state 19
    INT               shift, and go to state 20
    LONG              shift, and go to state 21
    MUTABLE           shift, and go to state 22
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REGISTER          shift, and go to state 25
    REINTERPRET_CAST  shift, and go to state 266
    SHORT             shift, and go to state 26
    SIGNED            shift, and go to state 27
    SIZEOF            shift, and go to state 267
    STATIC            shift, and go to state 28
    STATIC_CAST       shift, and go to state 268
    STRUCT            shift, and go to state 29
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEDEF           shift, and go to state 31
    TYPEID            shift, and go to state 272
    TYPENAME          shift, and go to state 32
    UNION             shift, and go to state 33
    UNSIGNED          shift, and go to state 34
    VIRTUAL           shift, and go to state 36
    VOID              shift, and go to state 37
    VOLATILE          shift, and go to state 38
    WCHAR_T           shift, and go to state 39
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    $default  reduce using rule 466 (expression_opt)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 289
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 426
    expression                 go to state 504
    expression_statement       go to state 738
    for_init_statement         go to state 739
    simple_declaration         go to state 740
    decl_specifier             go to state 62
    decl_specifier_seq         go to state 515
    storage_class_specifier    go to state 64
    function_specifier         go to state 65
    type_specifier             go to state 66
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 313
    expression_opt             go to state 517


State 647

  166 jump_statement: GOTO identifier . ';'

    ';'  shift, and go to state 741


State 648

  153 selection_statement: IF '(' . condition ')' statement
  154                    | IF '(' . condition ')' statement ELSE statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 4
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 8
    CHAR              shift, and go to state 9
    CLASS             shift, and go to state 10
    CONST             shift, and go to state 11
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DOUBLE            shift, and go to state 12
    DYNAMIC_CAST      shift, and go to state 263
    ENUM              shift, and go to state 13
    FALSE             shift, and go to state 264
    FLOAT             shift, and go to state 17
    INT               shift, and go to state 20
    LONG              shift, and go to state 21
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SHORT             shift, and go to state 26
    SIGNED            shift, and go to state 27
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    STRUCT            shift, and go to state 29
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    TYPENAME          shift, and go to state 32
    UNION             shift, and go to state 33
    UNSIGNED          shift, and go to state 34
    VOID              shift, and go to state 37
    VOLATILE          shift, and go to state 38
    WCHAR_T           shift, and go to state 39
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 289
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 426
    expression                 go to state 742
    condition                  go to state 743
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_specifier_seq         go to state 744
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 313


State 649

  242 namespace_alias_definition: NAMESPACE identifier . '=' qualified_namespace_specifier ';'

    '='  shift, and go to state 227


State 650

  165 jump_statement: RETURN expression_opt . ';'

    ';'  shift, and go to state 745


State 651

  155 selection_statement: SWITCH '(' . condition ')' statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 4
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 8
    CHAR              shift, and go to state 9
    CLASS             shift, and go to state 10
    CONST             shift, and go to state 11
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DOUBLE            shift, and go to state 12
    DYNAMIC_CAST      shift, and go to state 263
    ENUM              shift, and go to state 13
    FALSE             shift, and go to state 264
    FLOAT             shift, and go to state 17
    INT               shift, and go to state 20
    LONG              shift, and go to state 21
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SHORT             shift, and go to state 26
    SIGNED            shift, and go to state 27
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    STRUCT            shift, and go to state 29
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    TYPENAME          shift, and go to state 32
    UNION             shift, and go to state 33
    UNSIGNED          shift, and go to state 34
    VOID              shift, and go to state 37
    VOLATILE          shift, and go to state 38
    WCHAR_T           shift, and go to state 39
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 289
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 426
    expression                 go to state 742
    condition                  go to state 746
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_specifier_seq         go to state 744
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 313


State 652

  440 try_block: TRY compound_statement . handler_seq

    CATCH  shift, and go to state 635

    handler_seq  go to state 747
    handler      go to state 637


State 653

  158 iteration_statement: WHILE '(' . condition ')' statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 4
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 8
    CHAR              shift, and go to state 9
    CLASS             shift, and go to state 10
    CONST             shift, and go to state 11
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DOUBLE            shift, and go to state 12
    DYNAMIC_CAST      shift, and go to state 263
    ENUM              shift, and go to state 13
    FALSE             shift, and go to state 264
    FLOAT             shift, and go to state 17
    INT               shift, and go to state 20
    LONG              shift, and go to state 21
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SHORT             shift, and go to state 26
    SIGNED            shift, and go to state 27
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    STRUCT            shift, and go to state 29
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    TYPENAME          shift, and go to state 32
    UNION             shift, and go to state 33
    UNSIGNED          shift, and go to state 34
    VOID              shift, and go to state 37
    VOLATILE          shift, and go to state 38
    WCHAR_T           shift, and go to state 39
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 289
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 426
    expression                 go to state 742
    condition                  go to state 748
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_specifier_seq         go to state 744
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 313


State 654

  146 labeled_statement: identifier ':' . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 4
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    ASM               shift, and go to state 6
    AUTO              shift, and go to state 7
    BOOL              shift, and go to state 8
    BREAK             shift, and go to state 490
    CASE              shift, and go to state 491
    CHAR              shift, and go to state 9
    CLASS             shift, and go to state 10
    CONST             shift, and go to state 11
    CONST_CAST        shift, and go to state 261
    CONTINUE          shift, and go to state 492
    DEFAULT           shift, and go to state 493
    DELETE            shift, and go to state 262
    DO                shift, and go to state 494
    DOUBLE            shift, and go to state 12
    DYNAMIC_CAST      shift, and go to state 263
    ENUM              shift, and go to state 13
    EXPLICIT          shift, and go to state 14
    EXTERN            shift, and go to state 185
    FALSE             shift, and go to state 264
    FLOAT             shift, and go to state 17
    FOR               shift, and go to state 495
    FRIEND            shift, and go to state 18
    GOTO              shift, and go to state 496
    IF                shift, and go to state 497
    INLINE            shift, and go to state 19
    INT               shift, and go to state 20
    LONG              shift, and go to state 21
    MUTABLE           shift, and go to state 22
    NAMESPACE         shift, and go to state 498
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REGISTER          shift, and go to state 25
    REINTERPRET_CAST  shift, and go to state 266
    RETURN            shift, and go to state 499
    SHORT             shift, and go to state 26
    SIGNED            shift, and go to state 27
    SIZEOF            shift, and go to state 267
    STATIC            shift, and go to state 28
    STATIC_CAST       shift, and go to state 268
    STRUCT            shift, and go to state 29
    SWITCH            shift, and go to state 500
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TRY               shift, and go to state 501
    TYPEDEF           shift, and go to state 31
    TYPEID            shift, and go to state 272
    TYPENAME          shift, and go to state 32
    UNION             shift, and go to state 33
    UNSIGNED          shift, and go to state 34
    USING             shift, and go to state 35
    VIRTUAL           shift, and go to state 36
    VOID              shift, and go to state 37
    VOLATILE          shift, and go to state 38
    WCHAR_T           shift, and go to state 39
    WHILE             shift, and go to state 502
    '('               shift, and go to state 273
    '{'               shift, and go to state 332
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    $default  reduce using rule 466 (expression_opt)

    typedef_name                go to state 46
    namespace_name              go to state 47
    original_namespace_name     go to state 48
    class_name                  go to state 49
    enum_name                   go to state 50
    template_name               go to state 51
    identifier                  go to state 503
    literal                     go to state 281
    integer_literal             go to state 282
    character_literal           go to state 283
    floating_literal            go to state 284
    string_literal              go to state 285
    boolean_literal             go to state 286
    primary_expression          go to state 287
    id_expression               go to state 288
    unqualified_id              go to state 55
    qualified_id                go to state 56
    nested_name_specifier       go to state 289
    postfix_expression          go to state 290
    unary_expression            go to state 291
    unary_operator              go to state 292
    new_expression              go to state 293
    delete_expression           go to state 294
    cast_expression             go to state 295
    pm_expression               go to state 296
    multiplicative_expression   go to state 297
    additive_expression         go to state 298
    shift_expression            go to state 299
    relational_expression       go to state 300
    equality_expression         go to state 301
    and_expression              go to state 302
    exclusive_or_expression     go to state 303
    inclusive_or_expression     go to state 304
    logical_and_expression      go to state 305
    logical_or_expression       go to state 306
    conditional_expression      go to state 307
    assignment_expression       go to state 426
    expression                  go to state 504
    statement                   go to state 749
    labeled_statement           go to state 506
    expression_statement        go to state 507
    compound_statement          go to state 508
    selection_statement         go to state 510
    iteration_statement         go to state 511
    jump_statement              go to state 512
    declaration_statement       go to state 513
    block_declaration           go to state 514
    simple_declaration          go to state 61
    decl_specifier              go to state 62
    decl_specifier_seq          go to state 515
    storage_class_specifier     go to state 64
    function_specifier          go to state 65
    type_specifier              go to state 66
    simple_type_specifier       go to state 67
    type_name                   go to state 68
    elaborated_type_specifier   go to state 69
    enum_specifier              go to state 70
    namespace_alias_definition  go to state 76
    using_declaration           go to state 77
    using_directive             go to state 78
    asm_definition              go to state 79
    cv_qualifier                go to state 84
    class_specifier             go to state 87
    class_head                  go to state 88
    class_key                   go to state 89
    conversion_function_id      go to state 90
    operator_function_id        go to state 91
    template_id                 go to state 93
    try_block                   go to state 516
    throw_expression            go to state 313
    expression_opt              go to state 517


State 655

  152 statement_seq: statement_seq statement .

    $default  reduce using rule 152 (statement_seq)


State 656

  149 expression_statement: expression_opt ';' .

    $default  reduce using rule 149 (expression_statement)


State 657

  150 compound_statement: '{' statement_seq_opt '}' .

    $default  reduce using rule 150 (compound_statement)


State 658

  449 exception_specification: THROW . '(' type_id_list_opt ')'

    '('  shift, and go to state 750


State 659

  265 direct_declarator: direct_declarator '(' parameter_declaration_clause ')' cv_qualifier_seq . exception_specification
  266                  | direct_declarator '(' parameter_declaration_clause ')' cv_qualifier_seq .

    THROW  shift, and go to state 658

    $default  reduce using rule 266 (direct_declarator)

    exception_specification  go to state 751


State 660

  267 direct_declarator: direct_declarator '(' parameter_declaration_clause ')' exception_specification .

    $default  reduce using rule 267 (direct_declarator)


State 661

  345 member_declarator: identifier ':' constant_expression .

    $default  reduce using rule 345 (member_declarator)


State 662

  332 member_declaration: decl_specifier_seq member_declarator_list ';' .

    $default  reduce using rule 332 (member_declaration)


State 663

  346 pure_specifier: '=' '0' .

    $default  reduce using rule 346 (pure_specifier)


State 664

  347 constant_initializer: '=' constant_expression .

    $default  reduce using rule 347 (constant_initializer)


State 665

  342 member_declarator: declarator .
  343                  | declarator . pure_specifier
  344                  | declarator . constant_initializer

    '='  shift, and go to state 526

    $default  reduce using rule 342 (member_declarator)

    pure_specifier        go to state 527
    constant_initializer  go to state 528


State 666

  340 member_declarator_list: member_declarator_list ',' member_declarator .

    $default  reduce using rule 340 (member_declarator_list)


State 667

  331 member_specification: access_specifier ':' member_specification_opt .

    $default  reduce using rule 331 (member_specification)


State 668

   33 nested_name_specifier: class_name . COLONCOLON nested_name_specifier
   35                      | class_name . COLONCOLON
  352 base_specifier: COLONCOLON class_name .

    COLONCOLON  shift, and go to state 176

    $default  reduce using rule 352 (base_specifier)


State 669

  351 base_specifier: COLONCOLON nested_name_specifier . class_name

    CLASS_NAME     shift, and go to state 100
    TEMPLATE_NAME  shift, and go to state 45

    class_name     go to state 752
    template_name  go to state 51
    template_id    go to state 93


State 670

  357 base_specifier: VIRTUAL COLONCOLON . nested_name_specifier_opt class_name

    CLASS_NAME      shift, and go to state 100
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    CLASS_NAME     [reduce using rule 454 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 454 (nested_name_specifier_opt)]

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    nested_name_specifier      go to state 228
    template_id                go to state 93
    nested_name_specifier_opt  go to state 753


State 671

  355 base_specifier: VIRTUAL access_specifier . COLONCOLON nested_name_specifier_opt class_name
  356               | VIRTUAL access_specifier . nested_name_specifier_opt class_name

    CLASS_NAME      shift, and go to state 100
    COLONCOLON      shift, and go to state 754
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    CLASS_NAME     [reduce using rule 454 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 454 (nested_name_specifier_opt)]

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    nested_name_specifier      go to state 228
    template_id                go to state 93
    nested_name_specifier_opt  go to state 755


State 672

  358 base_specifier: VIRTUAL nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 100
    TEMPLATE_NAME  shift, and go to state 45

    class_name     go to state 756
    template_name  go to state 51
    template_id    go to state 93


State 673

  353 base_specifier: nested_name_specifier class_name .

    $default  reduce using rule 353 (base_specifier)


State 674

  350 base_specifier_list: base_specifier_list ',' . base_specifier

    CLASS_NAME      shift, and go to state 100
    COLONCOLON      shift, and go to state 537
    PRIVATE         shift, and go to state 341
    PROTECTED       shift, and go to state 342
    PUBLIC          shift, and go to state 343
    VIRTUAL         shift, and go to state 538
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 539
    template_name            go to state 51
    nested_name_specifier    go to state 540
    base_specifier           go to state 757
    access_specifier         go to state 543
    template_id              go to state 93


State 675

  361 base_specifier: access_specifier COLONCOLON . nested_name_specifier_opt class_name

    CLASS_NAME      shift, and go to state 100
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    CLASS_NAME     [reduce using rule 454 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 454 (nested_name_specifier_opt)]

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    nested_name_specifier      go to state 228
    template_id                go to state 93
    nested_name_specifier_opt  go to state 758


State 676

  359 base_specifier: access_specifier VIRTUAL . COLONCOLON nested_name_specifier_opt class_name
  360               | access_specifier VIRTUAL . nested_name_specifier_opt class_name

    CLASS_NAME      shift, and go to state 100
    COLONCOLON      shift, and go to state 759
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    CLASS_NAME     [reduce using rule 454 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 454 (nested_name_specifier_opt)]

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    nested_name_specifier      go to state 228
    template_id                go to state 93
    nested_name_specifier_opt  go to state 760


State 677

  362 base_specifier: access_specifier nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 100
    TEMPLATE_NAME  shift, and go to state 45

    class_name     go to state 761
    template_name  go to state 51
    template_id    go to state 93


State 678

  426 type_parameter: CLASS identifier .
  427               | CLASS identifier . '=' type_id

    '='  shift, and go to state 762

    $default  reduce using rule 426 (type_parameter)


State 679

  430 type_parameter: TEMPLATE '<' . template_parameter_list '>' CLASS identifier
  431               | TEMPLATE '<' . template_parameter_list '>' CLASS identifier '=' template_name

    TYPEDEF_NAME    shift, and go to state 2
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 4
    COLONCOLON      shift, and go to state 115
    AUTO            shift, and go to state 7
    BOOL            shift, and go to state 8
    CHAR            shift, and go to state 9
    CLASS           shift, and go to state 545
    CONST           shift, and go to state 11
    DOUBLE          shift, and go to state 12
    ENUM            shift, and go to state 13
    EXPLICIT        shift, and go to state 14
    EXTERN          shift, and go to state 185
    FLOAT           shift, and go to state 17
    FRIEND          shift, and go to state 18
    INLINE          shift, and go to state 19
    INT             shift, and go to state 20
    LONG            shift, and go to state 21
    MUTABLE         shift, and go to state 22
    REGISTER        shift, and go to state 25
    SHORT           shift, and go to state 26
    SIGNED          shift, and go to state 27
    STATIC          shift, and go to state 28
    STRUCT          shift, and go to state 29
    TEMPLATE        shift, and go to state 546
    TYPEDEF         shift, and go to state 31
    TYPENAME        shift, and go to state 547
    UNION           shift, and go to state 33
    UNSIGNED        shift, and go to state 34
    VIRTUAL         shift, and go to state 36
    VOID            shift, and go to state 37
    VOLATILE        shift, and go to state 38
    WCHAR_T         shift, and go to state 39
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    decl_specifier             go to state 62
    decl_specifier_seq         go to state 209
    storage_class_specifier    go to state 64
    function_specifier         go to state 65
    type_specifier             go to state 66
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    parameter_declaration      go to state 548
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_parameter_list    go to state 763
    template_parameter         go to state 550
    type_parameter             go to state 551
    template_id                go to state 93


State 680

  428 type_parameter: TYPENAME identifier .
  429               | TYPENAME identifier . '=' type_id

    '='  shift, and go to state 764

    $default  reduce using rule 428 (type_parameter)


State 681

  423 template_parameter_list: template_parameter_list ',' . template_parameter

    TYPEDEF_NAME    shift, and go to state 2
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 4
    COLONCOLON      shift, and go to state 115
    AUTO            shift, and go to state 7
    BOOL            shift, and go to state 8
    CHAR            shift, and go to state 9
    CLASS           shift, and go to state 545
    CONST           shift, and go to state 11
    DOUBLE          shift, and go to state 12
    ENUM            shift, and go to state 13
    EXPLICIT        shift, and go to state 14
    EXTERN          shift, and go to state 185
    FLOAT           shift, and go to state 17
    FRIEND          shift, and go to state 18
    INLINE          shift, and go to state 19
    INT             shift, and go to state 20
    LONG            shift, and go to state 21
    MUTABLE         shift, and go to state 22
    REGISTER        shift, and go to state 25
    SHORT           shift, and go to state 26
    SIGNED          shift, and go to state 27
    STATIC          shift, and go to state 28
    STRUCT          shift, and go to state 29
    TEMPLATE        shift, and go to state 546
    TYPEDEF         shift, and go to state 31
    TYPENAME        shift, and go to state 547
    UNION           shift, and go to state 33
    UNSIGNED        shift, and go to state 34
    VIRTUAL         shift, and go to state 36
    VOID            shift, and go to state 37
    VOLATILE        shift, and go to state 38
    WCHAR_T         shift, and go to state 39
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    decl_specifier             go to state 62
    decl_specifier_seq         go to state 209
    storage_class_specifier    go to state 64
    function_specifier         go to state 65
    type_specifier             go to state 66
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    parameter_declaration      go to state 548
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_parameter         go to state 765
    type_parameter             go to state 551
    template_id                go to state 93


State 682

  421 template_declaration: EXPORT_opt TEMPLATE '<' template_parameter_list '>' . declaration

    IDENTIFIER      shift, and go to state 1
    TYPEDEF_NAME    shift, and go to state 2
    CLASS_NAME      shift, and go to state 3
    ENUM_NAME       shift, and go to state 4
    COLONCOLON      shift, and go to state 5
    ASM             shift, and go to state 6
    AUTO            shift, and go to state 7
    BOOL            shift, and go to state 8
    CHAR            shift, and go to state 9
    CLASS           shift, and go to state 10
    CONST           shift, and go to state 11
    DOUBLE          shift, and go to state 12
    ENUM            shift, and go to state 13
    EXPLICIT        shift, and go to state 14
    EXPORT          shift, and go to state 15
    EXTERN          shift, and go to state 16
    FLOAT           shift, and go to state 17
    FRIEND          shift, and go to state 18
    INLINE          shift, and go to state 19
    INT             shift, and go to state 20
    LONG            shift, and go to state 21
    MUTABLE         shift, and go to state 22
    NAMESPACE       shift, and go to state 23
    OPERATOR        shift, and go to state 24
    REGISTER        shift, and go to state 25
    SHORT           shift, and go to state 26
    SIGNED          shift, and go to state 27
    STATIC          shift, and go to state 28
    STRUCT          shift, and go to state 29
    TEMPLATE        shift, and go to state 30
    TYPEDEF         shift, and go to state 31
    TYPENAME        shift, and go to state 32
    UNION           shift, and go to state 33
    UNSIGNED        shift, and go to state 34
    USING           shift, and go to state 35
    VIRTUAL         shift, and go to state 36
    VOID            shift, and go to state 37
    VOLATILE        shift, and go to state 38
    WCHAR_T         shift, and go to state 39
    '('             shift, and go to state 40
    '&'             shift, and go to state 41
    '*'             shift, and go to state 42
    '~'             shift, and go to state 43
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    TEMPLATE  [reduce using rule 495 (EXPORT_opt)]

    typedef_name                    go to state 46
    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 49
    enum_name                       go to state 50
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 57
    declaration                     go to state 766
    block_declaration               go to state 60
    simple_declaration              go to state 61
    decl_specifier                  go to state 62
    decl_specifier_seq              go to state 63
    storage_class_specifier         go to state 64
    function_specifier              go to state 65
    type_specifier                  go to state 66
    simple_type_specifier           go to state 67
    type_name                       go to state 68
    elaborated_type_specifier       go to state 69
    enum_specifier                  go to state 70
    namespace_definition            go to state 71
    named_namespace_definition      go to state 72
    original_namespace_definition   go to state 73
    extension_namespace_definition  go to state 74
    unnamed_namespace_definition    go to state 75
    namespace_alias_definition      go to state 76
    using_declaration               go to state 77
    using_directive                 go to state 78
    asm_definition                  go to state 79
    linkage_specification           go to state 80
    declarator                      go to state 81
    direct_declarator               go to state 82
    ptr_operator                    go to state 83
    cv_qualifier                    go to state 84
    declarator_id                   go to state 85
    function_definition             go to state 86
    class_specifier                 go to state 87
    class_head                      go to state 88
    class_key                       go to state 89
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_declaration            go to state 92
    template_id                     go to state 93
    explicit_instantiation          go to state 94
    explicit_specialization         go to state 95
    EXPORT_opt                      go to state 97


State 683

  271 direct_declarator: CLASS_NAME COLONCOLON CLASS_NAME '(' parameter_declaration_clause ')' .

    $default  reduce using rule 271 (direct_declarator)


State 684

  270 direct_declarator: CLASS_NAME COLONCOLON declarator_id '(' parameter_declaration_clause ')' .

    $default  reduce using rule 270 (direct_declarator)


State 685

  298 direct_abstract_declarator: '(' abstract_declarator ')' .

    $default  reduce using rule 298 (direct_abstract_declarator)


State 686

  307 parameter_declaration: decl_specifier_seq declarator '=' assignment_expression .

    $default  reduce using rule 307 (parameter_declaration)


State 687

  309 parameter_declaration: decl_specifier_seq abstract_declarator_opt '=' assignment_expression .

    $default  reduce using rule 309 (parameter_declaration)


State 688

  293 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause . ')' cv_qualifier_seq exception_specification
  294                           | direct_abstract_declarator_opt '(' parameter_declaration_clause . ')' cv_qualifier_seq
  295                           | direct_abstract_declarator_opt '(' parameter_declaration_clause . ')' exception_specification
  296                           | direct_abstract_declarator_opt '(' parameter_declaration_clause . ')'

    ')'  shift, and go to state 767


State 689

  297 direct_abstract_declarator: direct_abstract_declarator_opt '[' constant_expression_opt . ']'

    ']'  shift, and go to state 768


State 690

  230 enumerator_list: enumerator_list ',' enumerator_definition .

    $default  reduce using rule 230 (enumerator_list)


State 691

  232 enumerator_definition: enumerator '=' constant_expression .

    $default  reduce using rule 232 (enumerator_definition)


State 692

  243 qualified_namespace_specifier: COLONCOLON nested_name_specifier namespace_name .

    $default  reduce using rule 243 (qualified_namespace_specifier)


State 693

  227 elaborated_type_specifier: TYPENAME COLONCOLON_opt nested_name_specifier identifier '<' template_argument_list . '>'
  434 template_argument_list: template_argument_list . ',' template_argument

    ','  shift, and go to state 474
    '>'  shift, and go to state 769


State 694

  252 using_directive: USING NAMESPACE COLONCOLON nested_name_specifier namespace_name ';' .

    $default  reduce using rule 252 (using_directive)


State 695

  247 using_declaration: USING TYPENAME COLONCOLON nested_name_specifier unqualified_id ';' .

    $default  reduce using rule 247 (using_declaration)


State 696

   85 delete_expression: COLONCOLON DELETE '[' ']' . cast_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    literal                  go to state 281
    integer_literal          go to state 282
    character_literal        go to state 283
    floating_literal         go to state 284
    string_literal           go to state 285
    boolean_literal          go to state 286
    primary_expression       go to state 287
    id_expression            go to state 288
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    postfix_expression       go to state 290
    unary_expression         go to state 291
    unary_operator           go to state 292
    new_expression           go to state 293
    delete_expression        go to state 294
    cast_expression          go to state 770
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 697

   74 new_expression: COLONCOLON NEW new_placement_opt '(' . type_id ')' new_initializer_opt

    TYPEDEF_NAME    shift, and go to state 2
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 4
    COLONCOLON      shift, and go to state 115
    BOOL            shift, and go to state 8
    CHAR            shift, and go to state 9
    CLASS           shift, and go to state 10
    CONST           shift, and go to state 11
    DOUBLE          shift, and go to state 12
    ENUM            shift, and go to state 13
    FLOAT           shift, and go to state 17
    INT             shift, and go to state 20
    LONG            shift, and go to state 21
    SHORT           shift, and go to state 26
    SIGNED          shift, and go to state 27
    STRUCT          shift, and go to state 29
    TYPENAME        shift, and go to state 32
    UNION           shift, and go to state 33
    UNSIGNED        shift, and go to state 34
    VOID            shift, and go to state 37
    VOLATILE        shift, and go to state 38
    WCHAR_T         shift, and go to state 39
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 771
    type_specifier_seq         go to state 310
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93


State 698

   72 new_expression: COLONCOLON NEW new_placement_opt new_type_id . new_initializer_opt

    '('  shift, and go to state 704

    $default  reduce using rule 462 (new_initializer_opt)

    new_initializer      go to state 705
    new_initializer_opt  go to state 772


State 699

   52 postfix_expression: CONST_CAST '<' type_id '>' . '(' expression ')'

    '('  shift, and go to state 773


State 700

   84 delete_expression: DELETE '[' ']' cast_expression .

    $default  reduce using rule 84 (delete_expression)


State 701

   49 postfix_expression: DYNAMIC_CAST '<' type_id '>' . '(' expression ')'

    '('  shift, and go to state 774


State 702

   75 new_placement: '(' expression_list ')' .

    $default  reduce using rule 75 (new_placement)


State 703

   73 new_expression: NEW new_placement_opt '(' type_id . ')' new_initializer_opt

    ')'  shift, and go to state 775


State 704

   81 new_initializer: '(' . expression_list_opt ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    $default  reduce using rule 456 (expression_list_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 290
    expression_list            go to state 601
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 479
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 313
    expression_list_opt        go to state 776


State 705

  463 new_initializer_opt: new_initializer .

    $default  reduce using rule 463 (new_initializer_opt)


State 706

   71 new_expression: NEW new_placement_opt new_type_id new_initializer_opt .

    $default  reduce using rule 71 (new_expression)


State 707

   79 direct_new_declarator: '[' . expression ']'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 426
    expression                 go to state 777
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 313


State 708

  465 new_declarator_opt: new_declarator .

    $default  reduce using rule 465 (new_declarator_opt)


State 709

   78 new_declarator: direct_new_declarator .
   80 direct_new_declarator: direct_new_declarator . '[' constant_expression ']'

    '['  shift, and go to state 778

    $default  reduce using rule 78 (new_declarator)


State 710

   77 new_declarator: ptr_operator . new_declarator_opt

    CLASS_NAME      shift, and go to state 100
    COLONCOLON      shift, and go to state 235
    '['             shift, and go to state 707
    '&'             shift, and go to state 41
    '*'             shift, and go to state 42
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    '&'       [reduce using rule 464 (new_declarator_opt)]
    '*'       [reduce using rule 464 (new_declarator_opt)]
    $default  reduce using rule 464 (new_declarator_opt)

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    nested_name_specifier    go to state 236
    new_declarator           go to state 708
    direct_new_declarator    go to state 709
    ptr_operator             go to state 710
    template_id              go to state 93
    new_declarator_opt       go to state 779


State 711

   76 new_type_id: type_specifier_seq new_declarator_opt .

    $default  reduce using rule 76 (new_type_id)


State 712

   51 postfix_expression: REINTERPRET_CAST '<' type_id '>' . '(' expression ')'

    '('  shift, and go to state 780


State 713

   64 unary_expression: SIZEOF '(' type_id ')' .

    $default  reduce using rule 64 (unary_expression)


State 714

   50 postfix_expression: STATIC_CAST '<' type_id '>' . '(' expression ')'

    '('  shift, and go to state 781


State 715

   53 postfix_expression: TYPEID '(' expression ')' .

    $default  reduce using rule 53 (postfix_expression)


State 716

   54 postfix_expression: TYPEID '(' type_id ')' .

    $default  reduce using rule 54 (postfix_expression)


State 717

  136 expression: expression ',' assignment_expression .

    $default  reduce using rule 136 (expression)


State 718

   87 cast_expression: '(' type_id ')' cast_expression .

    $default  reduce using rule 87 (cast_expression)


State 719

   45 postfix_expression: postfix_expression ARROW COLONCOLON id_expression .

    $default  reduce using rule 45 (postfix_expression)


State 720

   43 postfix_expression: postfix_expression ARROW TEMPLATE COLONCOLON . id_expression

    IDENTIFIER      shift, and go to state 1
    CLASS_NAME      shift, and go to state 100
    OPERATOR        shift, and go to state 24
    '~'             shift, and go to state 43
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 782
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 721

   44 postfix_expression: postfix_expression ARROW TEMPLATE id_expression .

    $default  reduce using rule 44 (postfix_expression)


State 722

   38 postfix_expression: postfix_expression '(' expression_list_opt ')' .

    $default  reduce using rule 38 (postfix_expression)


State 723

   37 postfix_expression: postfix_expression '[' expression ']' .

    $default  reduce using rule 37 (postfix_expression)


State 724

   41 postfix_expression: postfix_expression '.' COLONCOLON id_expression .

    $default  reduce using rule 41 (postfix_expression)


State 725

   39 postfix_expression: postfix_expression '.' TEMPLATE COLONCOLON . id_expression

    IDENTIFIER      shift, and go to state 1
    CLASS_NAME      shift, and go to state 100
    OPERATOR        shift, and go to state 24
    '~'             shift, and go to state 43
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 783
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 206
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 726

   40 postfix_expression: postfix_expression '.' TEMPLATE id_expression .

    $default  reduce using rule 40 (postfix_expression)


State 727

  120 conditional_expression: logical_or_expression '?' expression ':' . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 784
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 313


State 728

   56 expression_list: expression_list ',' assignment_expression .

    $default  reduce using rule 56 (expression_list)


State 729

  321 initializer_list: initializer_list ',' . initializer_clause
  487 COMMA_opt: ',' .

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '{'               shift, and go to state 480
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    $default  reduce using rule 487 (COMMA_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 481
    initializer_clause         go to state 785
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 313


State 730

  318 initializer_clause: '{' initializer_list COMMA_opt . '}'

    '}'  shift, and go to state 786


State 731

  443 handler: CATCH '(' . exception_declaration ')' compound_statement

    TYPEDEF_NAME    shift, and go to state 2
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 4
    ELLIPSIS        shift, and go to state 787
    COLONCOLON      shift, and go to state 115
    BOOL            shift, and go to state 8
    CHAR            shift, and go to state 9
    CLASS           shift, and go to state 10
    CONST           shift, and go to state 11
    DOUBLE          shift, and go to state 12
    ENUM            shift, and go to state 13
    FLOAT           shift, and go to state 17
    INT             shift, and go to state 20
    LONG            shift, and go to state 21
    SHORT           shift, and go to state 26
    SIGNED          shift, and go to state 27
    STRUCT          shift, and go to state 29
    TYPENAME        shift, and go to state 32
    UNION           shift, and go to state 33
    UNSIGNED        shift, and go to state 34
    VOID            shift, and go to state 37
    VOLATILE        shift, and go to state 38
    WCHAR_T         shift, and go to state 39
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_specifier_seq         go to state 788
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93
    exception_declaration      go to state 789


State 732

  497 handler_seq_opt: handler_seq .

    $default  reduce using rule 497 (handler_seq_opt)


State 733

  442 handler_seq: handler handler_seq_opt .

    $default  reduce using rule 442 (handler_seq)


State 734

  372 mem_initializer: mem_initializer_id '(' expression_list_opt ')' .

    $default  reduce using rule 372 (mem_initializer)


State 735

  147 labeled_statement: CASE constant_expression ':' . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 4
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    ASM               shift, and go to state 6
    AUTO              shift, and go to state 7
    BOOL              shift, and go to state 8
    BREAK             shift, and go to state 490
    CASE              shift, and go to state 491
    CHAR              shift, and go to state 9
    CLASS             shift, and go to state 10
    CONST             shift, and go to state 11
    CONST_CAST        shift, and go to state 261
    CONTINUE          shift, and go to state 492
    DEFAULT           shift, and go to state 493
    DELETE            shift, and go to state 262
    DO                shift, and go to state 494
    DOUBLE            shift, and go to state 12
    DYNAMIC_CAST      shift, and go to state 263
    ENUM              shift, and go to state 13
    EXPLICIT          shift, and go to state 14
    EXTERN            shift, and go to state 185
    FALSE             shift, and go to state 264
    FLOAT             shift, and go to state 17
    FOR               shift, and go to state 495
    FRIEND            shift, and go to state 18
    GOTO              shift, and go to state 496
    IF                shift, and go to state 497
    INLINE            shift, and go to state 19
    INT               shift, and go to state 20
    LONG              shift, and go to state 21
    MUTABLE           shift, and go to state 22
    NAMESPACE         shift, and go to state 498
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REGISTER          shift, and go to state 25
    REINTERPRET_CAST  shift, and go to state 266
    RETURN            shift, and go to state 499
    SHORT             shift, and go to state 26
    SIGNED            shift, and go to state 27
    SIZEOF            shift, and go to state 267
    STATIC            shift, and go to state 28
    STATIC_CAST       shift, and go to state 268
    STRUCT            shift, and go to state 29
    SWITCH            shift, and go to state 500
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TRY               shift, and go to state 501
    TYPEDEF           shift, and go to state 31
    TYPEID            shift, and go to state 272
    TYPENAME          shift, and go to state 32
    UNION             shift, and go to state 33
    UNSIGNED          shift, and go to state 34
    USING             shift, and go to state 35
    VIRTUAL           shift, and go to state 36
    VOID              shift, and go to state 37
    VOLATILE          shift, and go to state 38
    WCHAR_T           shift, and go to state 39
    WHILE             shift, and go to state 502
    '('               shift, and go to state 273
    '{'               shift, and go to state 332
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    $default  reduce using rule 466 (expression_opt)

    typedef_name                go to state 46
    namespace_name              go to state 47
    original_namespace_name     go to state 48
    class_name                  go to state 49
    enum_name                   go to state 50
    template_name               go to state 51
    identifier                  go to state 503
    literal                     go to state 281
    integer_literal             go to state 282
    character_literal           go to state 283
    floating_literal            go to state 284
    string_literal              go to state 285
    boolean_literal             go to state 286
    primary_expression          go to state 287
    id_expression               go to state 288
    unqualified_id              go to state 55
    qualified_id                go to state 56
    nested_name_specifier       go to state 289
    postfix_expression          go to state 290
    unary_expression            go to state 291
    unary_operator              go to state 292
    new_expression              go to state 293
    delete_expression           go to state 294
    cast_expression             go to state 295
    pm_expression               go to state 296
    multiplicative_expression   go to state 297
    additive_expression         go to state 298
    shift_expression            go to state 299
    relational_expression       go to state 300
    equality_expression         go to state 301
    and_expression              go to state 302
    exclusive_or_expression     go to state 303
    inclusive_or_expression     go to state 304
    logical_and_expression      go to state 305
    logical_or_expression       go to state 306
    conditional_expression      go to state 307
    assignment_expression       go to state 426
    expression                  go to state 504
    statement                   go to state 790
    labeled_statement           go to state 506
    expression_statement        go to state 507
    compound_statement          go to state 508
    selection_statement         go to state 510
    iteration_statement         go to state 511
    jump_statement              go to state 512
    declaration_statement       go to state 513
    block_declaration           go to state 514
    simple_declaration          go to state 61
    decl_specifier              go to state 62
    decl_specifier_seq          go to state 515
    storage_class_specifier     go to state 64
    function_specifier          go to state 65
    type_specifier              go to state 66
    simple_type_specifier       go to state 67
    type_name                   go to state 68
    elaborated_type_specifier   go to state 69
    enum_specifier              go to state 70
    namespace_alias_definition  go to state 76
    using_declaration           go to state 77
    using_directive             go to state 78
    asm_definition              go to state 79
    cv_qualifier                go to state 84
    class_specifier             go to state 87
    class_head                  go to state 88
    class_key                   go to state 89
    conversion_function_id      go to state 90
    operator_function_id        go to state 91
    template_id                 go to state 93
    try_block                   go to state 516
    throw_expression            go to state 313
    expression_opt              go to state 517


State 736

  148 labeled_statement: DEFAULT ':' statement .

    $default  reduce using rule 148 (labeled_statement)


State 737

  159 iteration_statement: DO statement WHILE . '(' expression ')' ';'

    '('  shift, and go to state 791


State 738

  161 for_init_statement: expression_statement .

    $default  reduce using rule 161 (for_init_statement)


State 739

  160 iteration_statement: FOR '(' for_init_statement . condition_opt ';' expression_opt ')' statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 4
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    BOOL              shift, and go to state 8
    CHAR              shift, and go to state 9
    CLASS             shift, and go to state 10
    CONST             shift, and go to state 11
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DOUBLE            shift, and go to state 12
    DYNAMIC_CAST      shift, and go to state 263
    ENUM              shift, and go to state 13
    FALSE             shift, and go to state 264
    FLOAT             shift, and go to state 17
    INT               shift, and go to state 20
    LONG              shift, and go to state 21
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SHORT             shift, and go to state 26
    SIGNED            shift, and go to state 27
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    STRUCT            shift, and go to state 29
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    TYPENAME          shift, and go to state 32
    UNION             shift, and go to state 33
    UNSIGNED          shift, and go to state 34
    VOID              shift, and go to state 37
    VOLATILE          shift, and go to state 38
    WCHAR_T           shift, and go to state 39
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    $default  reduce using rule 470 (condition_opt)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 289
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 426
    expression                 go to state 742
    condition                  go to state 792
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_specifier_seq         go to state 744
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 313
    condition_opt              go to state 793


State 740

  162 for_init_statement: simple_declaration .

    $default  reduce using rule 162 (for_init_statement)


State 741

  166 jump_statement: GOTO identifier ';' .

    $default  reduce using rule 166 (jump_statement)


State 742

  136 expression: expression . ',' assignment_expression
  156 condition: expression .

    ','  shift, and go to state 596

    $default  reduce using rule 156 (condition)


State 743

  153 selection_statement: IF '(' condition . ')' statement
  154                    | IF '(' condition . ')' statement ELSE statement

    ')'  shift, and go to state 794


State 744

  157 condition: type_specifier_seq . declarator '=' assignment_expression

    IDENTIFIER      shift, and go to state 1
    CLASS_NAME      shift, and go to state 3
    COLONCOLON      shift, and go to state 169
    OPERATOR        shift, and go to state 24
    '('             shift, and go to state 40
    '&'             shift, and go to state 41
    '*'             shift, and go to state 42
    '~'             shift, and go to state 43
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    namespace_name           go to state 47
    original_namespace_name  go to state 48
    class_name               go to state 107
    template_name            go to state 51
    identifier               go to state 52
    id_expression            go to state 54
    unqualified_id           go to state 55
    qualified_id             go to state 56
    nested_name_specifier    go to state 170
    declarator               go to state 795
    direct_declarator        go to state 82
    ptr_operator             go to state 83
    declarator_id            go to state 85
    conversion_function_id   go to state 90
    operator_function_id     go to state 91
    template_id              go to state 93


State 745

  165 jump_statement: RETURN expression_opt ';' .

    $default  reduce using rule 165 (jump_statement)


State 746

  155 selection_statement: SWITCH '(' condition . ')' statement

    ')'  shift, and go to state 796


State 747

  440 try_block: TRY compound_statement handler_seq .

    $default  reduce using rule 440 (try_block)


State 748

  158 iteration_statement: WHILE '(' condition . ')' statement

    ')'  shift, and go to state 797


State 749

  146 labeled_statement: identifier ':' statement .

    $default  reduce using rule 146 (labeled_statement)


State 750

  449 exception_specification: THROW '(' . type_id_list_opt ')'

    TYPEDEF_NAME    shift, and go to state 2
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 4
    COLONCOLON      shift, and go to state 115
    BOOL            shift, and go to state 8
    CHAR            shift, and go to state 9
    CLASS           shift, and go to state 10
    CONST           shift, and go to state 11
    DOUBLE          shift, and go to state 12
    ENUM            shift, and go to state 13
    FLOAT           shift, and go to state 17
    INT             shift, and go to state 20
    LONG            shift, and go to state 21
    SHORT           shift, and go to state 26
    SIGNED          shift, and go to state 27
    STRUCT          shift, and go to state 29
    TYPENAME        shift, and go to state 32
    UNION           shift, and go to state 33
    UNSIGNED        shift, and go to state 34
    VOID            shift, and go to state 37
    VOLATILE        shift, and go to state 38
    WCHAR_T         shift, and go to state 39
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    $default  reduce using rule 500 (type_id_list_opt)

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 798
    type_specifier_seq         go to state 310
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93
    type_id_list               go to state 799
    type_id_list_opt           go to state 800


State 751

  265 direct_declarator: direct_declarator '(' parameter_declaration_clause ')' cv_qualifier_seq exception_specification .

    $default  reduce using rule 265 (direct_declarator)


State 752

  351 base_specifier: COLONCOLON nested_name_specifier class_name .

    $default  reduce using rule 351 (base_specifier)


State 753

  357 base_specifier: VIRTUAL COLONCOLON nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 100
    TEMPLATE_NAME  shift, and go to state 45

    class_name     go to state 801
    template_name  go to state 51
    template_id    go to state 93


State 754

  355 base_specifier: VIRTUAL access_specifier COLONCOLON . nested_name_specifier_opt class_name

    CLASS_NAME      shift, and go to state 100
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    CLASS_NAME     [reduce using rule 454 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 454 (nested_name_specifier_opt)]

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    nested_name_specifier      go to state 228
    template_id                go to state 93
    nested_name_specifier_opt  go to state 802


State 755

  356 base_specifier: VIRTUAL access_specifier nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 100
    TEMPLATE_NAME  shift, and go to state 45

    class_name     go to state 803
    template_name  go to state 51
    template_id    go to state 93


State 756

  358 base_specifier: VIRTUAL nested_name_specifier_opt class_name .

    $default  reduce using rule 358 (base_specifier)


State 757

  350 base_specifier_list: base_specifier_list ',' base_specifier .

    $default  reduce using rule 350 (base_specifier_list)


State 758

  361 base_specifier: access_specifier COLONCOLON nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 100
    TEMPLATE_NAME  shift, and go to state 45

    class_name     go to state 804
    template_name  go to state 51
    template_id    go to state 93


State 759

  359 base_specifier: access_specifier VIRTUAL COLONCOLON . nested_name_specifier_opt class_name

    CLASS_NAME      shift, and go to state 100
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    CLASS_NAME     [reduce using rule 454 (nested_name_specifier_opt)]
    TEMPLATE_NAME  [reduce using rule 454 (nested_name_specifier_opt)]

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    nested_name_specifier      go to state 228
    template_id                go to state 93
    nested_name_specifier_opt  go to state 805


State 760

  360 base_specifier: access_specifier VIRTUAL nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 100
    TEMPLATE_NAME  shift, and go to state 45

    class_name     go to state 806
    template_name  go to state 51
    template_id    go to state 93


State 761

  362 base_specifier: access_specifier nested_name_specifier_opt class_name .

    $default  reduce using rule 362 (base_specifier)


State 762

  427 type_parameter: CLASS identifier '=' . type_id

    TYPEDEF_NAME    shift, and go to state 2
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 4
    COLONCOLON      shift, and go to state 115
    BOOL            shift, and go to state 8
    CHAR            shift, and go to state 9
    CLASS           shift, and go to state 10
    CONST           shift, and go to state 11
    DOUBLE          shift, and go to state 12
    ENUM            shift, and go to state 13
    FLOAT           shift, and go to state 17
    INT             shift, and go to state 20
    LONG            shift, and go to state 21
    SHORT           shift, and go to state 26
    SIGNED          shift, and go to state 27
    STRUCT          shift, and go to state 29
    TYPENAME        shift, and go to state 32
    UNION           shift, and go to state 33
    UNSIGNED        shift, and go to state 34
    VOID            shift, and go to state 37
    VOLATILE        shift, and go to state 38
    WCHAR_T         shift, and go to state 39
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 807
    type_specifier_seq         go to state 310
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93


State 763

  423 template_parameter_list: template_parameter_list . ',' template_parameter
  430 type_parameter: TEMPLATE '<' template_parameter_list . '>' CLASS identifier
  431               | TEMPLATE '<' template_parameter_list . '>' CLASS identifier '=' template_name

    ','  shift, and go to state 681
    '>'  shift, and go to state 808


State 764

  429 type_parameter: TYPENAME identifier '=' . type_id

    TYPEDEF_NAME    shift, and go to state 2
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 4
    COLONCOLON      shift, and go to state 115
    BOOL            shift, and go to state 8
    CHAR            shift, and go to state 9
    CLASS           shift, and go to state 10
    CONST           shift, and go to state 11
    DOUBLE          shift, and go to state 12
    ENUM            shift, and go to state 13
    FLOAT           shift, and go to state 17
    INT             shift, and go to state 20
    LONG            shift, and go to state 21
    SHORT           shift, and go to state 26
    SIGNED          shift, and go to state 27
    STRUCT          shift, and go to state 29
    TYPENAME        shift, and go to state 32
    UNION           shift, and go to state 33
    UNSIGNED        shift, and go to state 34
    VOID            shift, and go to state 37
    VOLATILE        shift, and go to state 38
    WCHAR_T         shift, and go to state 39
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 809
    type_specifier_seq         go to state 310
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93


State 765

  423 template_parameter_list: template_parameter_list ',' template_parameter .

    $default  reduce using rule 423 (template_parameter_list)


State 766

  421 template_declaration: EXPORT_opt TEMPLATE '<' template_parameter_list '>' declaration .

    $default  reduce using rule 421 (template_declaration)


State 767

  293 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause ')' . cv_qualifier_seq exception_specification
  294                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')' . cv_qualifier_seq
  295                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')' . exception_specification
  296                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')' .

    CONST     shift, and go to state 11
    THROW     shift, and go to state 658
    VOLATILE  shift, and go to state 38

    $default  reduce using rule 296 (direct_abstract_declarator)

    cv_qualifier_seq         go to state 810
    cv_qualifier             go to state 173
    exception_specification  go to state 811


State 768

  297 direct_abstract_declarator: direct_abstract_declarator_opt '[' constant_expression_opt ']' .

    $default  reduce using rule 297 (direct_abstract_declarator)


State 769

  227 elaborated_type_specifier: TYPENAME COLONCOLON_opt nested_name_specifier identifier '<' template_argument_list '>' .

    $default  reduce using rule 227 (elaborated_type_specifier)


State 770

   85 delete_expression: COLONCOLON DELETE '[' ']' cast_expression .

    $default  reduce using rule 85 (delete_expression)


State 771

   74 new_expression: COLONCOLON NEW new_placement_opt '(' type_id . ')' new_initializer_opt

    ')'  shift, and go to state 812


State 772

   72 new_expression: COLONCOLON NEW new_placement_opt new_type_id new_initializer_opt .

    $default  reduce using rule 72 (new_expression)


State 773

   52 postfix_expression: CONST_CAST '<' type_id '>' '(' . expression ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 426
    expression                 go to state 813
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 313


State 774

   49 postfix_expression: DYNAMIC_CAST '<' type_id '>' '(' . expression ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 426
    expression                 go to state 814
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 313


State 775

   73 new_expression: NEW new_placement_opt '(' type_id ')' . new_initializer_opt

    '('  shift, and go to state 704

    $default  reduce using rule 462 (new_initializer_opt)

    new_initializer      go to state 705
    new_initializer_opt  go to state 815


State 776

   81 new_initializer: '(' expression_list_opt . ')'

    ')'  shift, and go to state 816


State 777

   79 direct_new_declarator: '[' expression . ']'
  136 expression: expression . ',' assignment_expression

    ','  shift, and go to state 596
    ']'  shift, and go to state 817


State 778

   80 direct_new_declarator: direct_new_declarator '[' . constant_expression ']'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 337
    conditional_expression     go to state 338
    constant_expression        go to state 818
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93


State 779

   77 new_declarator: ptr_operator new_declarator_opt .

    $default  reduce using rule 77 (new_declarator)


State 780

   51 postfix_expression: REINTERPRET_CAST '<' type_id '>' '(' . expression ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 426
    expression                 go to state 819
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 313


State 781

   50 postfix_expression: STATIC_CAST '<' type_id '>' '(' . expression ')'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 426
    expression                 go to state 820
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 313


State 782

   43 postfix_expression: postfix_expression ARROW TEMPLATE COLONCOLON id_expression .

    $default  reduce using rule 43 (postfix_expression)


State 783

   39 postfix_expression: postfix_expression '.' TEMPLATE COLONCOLON id_expression .

    $default  reduce using rule 39 (postfix_expression)


State 784

  120 conditional_expression: logical_or_expression '?' expression ':' assignment_expression .

    $default  reduce using rule 120 (conditional_expression)


State 785

  321 initializer_list: initializer_list ',' initializer_clause .

    $default  reduce using rule 321 (initializer_list)


State 786

  318 initializer_clause: '{' initializer_list COMMA_opt '}' .

    $default  reduce using rule 318 (initializer_clause)


State 787

  447 exception_declaration: ELLIPSIS .

    $default  reduce using rule 447 (exception_declaration)


State 788

  444 exception_declaration: type_specifier_seq . declarator
  445                      | type_specifier_seq . abstract_declarator
  446                      | type_specifier_seq .

    IDENTIFIER      shift, and go to state 1
    CLASS_NAME      shift, and go to state 3
    COLONCOLON      shift, and go to state 169
    OPERATOR        shift, and go to state 24
    '('             shift, and go to state 367
    '&'             shift, and go to state 41
    '*'             shift, and go to state 42
    '~'             shift, and go to state 43
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    '('       [reduce using rule 482 (direct_abstract_declarator_opt)]
    '['       reduce using rule 482 (direct_abstract_declarator_opt)
    $default  reduce using rule 446 (exception_declaration)

    namespace_name                  go to state 47
    original_namespace_name         go to state 48
    class_name                      go to state 107
    template_name                   go to state 51
    identifier                      go to state 52
    id_expression                   go to state 54
    unqualified_id                  go to state 55
    qualified_id                    go to state 56
    nested_name_specifier           go to state 170
    declarator                      go to state 821
    direct_declarator               go to state 82
    ptr_operator                    go to state 369
    declarator_id                   go to state 85
    abstract_declarator             go to state 822
    direct_abstract_declarator      go to state 371
    conversion_function_id          go to state 90
    operator_function_id            go to state 91
    template_id                     go to state 93
    direct_abstract_declarator_opt  go to state 373


State 789

  443 handler: CATCH '(' exception_declaration . ')' compound_statement

    ')'  shift, and go to state 823


State 790

  147 labeled_statement: CASE constant_expression ':' statement .

    $default  reduce using rule 147 (labeled_statement)


State 791

  159 iteration_statement: DO statement WHILE '(' . expression ')' ';'

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 426
    expression                 go to state 824
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 313


State 792

  471 condition_opt: condition .

    $default  reduce using rule 471 (condition_opt)


State 793

  160 iteration_statement: FOR '(' for_init_statement condition_opt . ';' expression_opt ')' statement

    ';'  shift, and go to state 825


State 794

  153 selection_statement: IF '(' condition ')' . statement
  154                    | IF '(' condition ')' . statement ELSE statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 4
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    ASM               shift, and go to state 6
    AUTO              shift, and go to state 7
    BOOL              shift, and go to state 8
    BREAK             shift, and go to state 490
    CASE              shift, and go to state 491
    CHAR              shift, and go to state 9
    CLASS             shift, and go to state 10
    CONST             shift, and go to state 11
    CONST_CAST        shift, and go to state 261
    CONTINUE          shift, and go to state 492
    DEFAULT           shift, and go to state 493
    DELETE            shift, and go to state 262
    DO                shift, and go to state 494
    DOUBLE            shift, and go to state 12
    DYNAMIC_CAST      shift, and go to state 263
    ENUM              shift, and go to state 13
    EXPLICIT          shift, and go to state 14
    EXTERN            shift, and go to state 185
    FALSE             shift, and go to state 264
    FLOAT             shift, and go to state 17
    FOR               shift, and go to state 495
    FRIEND            shift, and go to state 18
    GOTO              shift, and go to state 496
    IF                shift, and go to state 497
    INLINE            shift, and go to state 19
    INT               shift, and go to state 20
    LONG              shift, and go to state 21
    MUTABLE           shift, and go to state 22
    NAMESPACE         shift, and go to state 498
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REGISTER          shift, and go to state 25
    REINTERPRET_CAST  shift, and go to state 266
    RETURN            shift, and go to state 499
    SHORT             shift, and go to state 26
    SIGNED            shift, and go to state 27
    SIZEOF            shift, and go to state 267
    STATIC            shift, and go to state 28
    STATIC_CAST       shift, and go to state 268
    STRUCT            shift, and go to state 29
    SWITCH            shift, and go to state 500
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TRY               shift, and go to state 501
    TYPEDEF           shift, and go to state 31
    TYPEID            shift, and go to state 272
    TYPENAME          shift, and go to state 32
    UNION             shift, and go to state 33
    UNSIGNED          shift, and go to state 34
    USING             shift, and go to state 35
    VIRTUAL           shift, and go to state 36
    VOID              shift, and go to state 37
    VOLATILE          shift, and go to state 38
    WCHAR_T           shift, and go to state 39
    WHILE             shift, and go to state 502
    '('               shift, and go to state 273
    '{'               shift, and go to state 332
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    $default  reduce using rule 466 (expression_opt)

    typedef_name                go to state 46
    namespace_name              go to state 47
    original_namespace_name     go to state 48
    class_name                  go to state 49
    enum_name                   go to state 50
    template_name               go to state 51
    identifier                  go to state 503
    literal                     go to state 281
    integer_literal             go to state 282
    character_literal           go to state 283
    floating_literal            go to state 284
    string_literal              go to state 285
    boolean_literal             go to state 286
    primary_expression          go to state 287
    id_expression               go to state 288
    unqualified_id              go to state 55
    qualified_id                go to state 56
    nested_name_specifier       go to state 289
    postfix_expression          go to state 290
    unary_expression            go to state 291
    unary_operator              go to state 292
    new_expression              go to state 293
    delete_expression           go to state 294
    cast_expression             go to state 295
    pm_expression               go to state 296
    multiplicative_expression   go to state 297
    additive_expression         go to state 298
    shift_expression            go to state 299
    relational_expression       go to state 300
    equality_expression         go to state 301
    and_expression              go to state 302
    exclusive_or_expression     go to state 303
    inclusive_or_expression     go to state 304
    logical_and_expression      go to state 305
    logical_or_expression       go to state 306
    conditional_expression      go to state 307
    assignment_expression       go to state 426
    expression                  go to state 504
    statement                   go to state 826
    labeled_statement           go to state 506
    expression_statement        go to state 507
    compound_statement          go to state 508
    selection_statement         go to state 510
    iteration_statement         go to state 511
    jump_statement              go to state 512
    declaration_statement       go to state 513
    block_declaration           go to state 514
    simple_declaration          go to state 61
    decl_specifier              go to state 62
    decl_specifier_seq          go to state 515
    storage_class_specifier     go to state 64
    function_specifier          go to state 65
    type_specifier              go to state 66
    simple_type_specifier       go to state 67
    type_name                   go to state 68
    elaborated_type_specifier   go to state 69
    enum_specifier              go to state 70
    namespace_alias_definition  go to state 76
    using_declaration           go to state 77
    using_directive             go to state 78
    asm_definition              go to state 79
    cv_qualifier                go to state 84
    class_specifier             go to state 87
    class_head                  go to state 88
    class_key                   go to state 89
    conversion_function_id      go to state 90
    operator_function_id        go to state 91
    template_id                 go to state 93
    try_block                   go to state 516
    throw_expression            go to state 313
    expression_opt              go to state 517


State 795

  157 condition: type_specifier_seq declarator . '=' assignment_expression

    '='  shift, and go to state 827


State 796

  155 selection_statement: SWITCH '(' condition ')' . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 4
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    ASM               shift, and go to state 6
    AUTO              shift, and go to state 7
    BOOL              shift, and go to state 8
    BREAK             shift, and go to state 490
    CASE              shift, and go to state 491
    CHAR              shift, and go to state 9
    CLASS             shift, and go to state 10
    CONST             shift, and go to state 11
    CONST_CAST        shift, and go to state 261
    CONTINUE          shift, and go to state 492
    DEFAULT           shift, and go to state 493
    DELETE            shift, and go to state 262
    DO                shift, and go to state 494
    DOUBLE            shift, and go to state 12
    DYNAMIC_CAST      shift, and go to state 263
    ENUM              shift, and go to state 13
    EXPLICIT          shift, and go to state 14
    EXTERN            shift, and go to state 185
    FALSE             shift, and go to state 264
    FLOAT             shift, and go to state 17
    FOR               shift, and go to state 495
    FRIEND            shift, and go to state 18
    GOTO              shift, and go to state 496
    IF                shift, and go to state 497
    INLINE            shift, and go to state 19
    INT               shift, and go to state 20
    LONG              shift, and go to state 21
    MUTABLE           shift, and go to state 22
    NAMESPACE         shift, and go to state 498
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REGISTER          shift, and go to state 25
    REINTERPRET_CAST  shift, and go to state 266
    RETURN            shift, and go to state 499
    SHORT             shift, and go to state 26
    SIGNED            shift, and go to state 27
    SIZEOF            shift, and go to state 267
    STATIC            shift, and go to state 28
    STATIC_CAST       shift, and go to state 268
    STRUCT            shift, and go to state 29
    SWITCH            shift, and go to state 500
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TRY               shift, and go to state 501
    TYPEDEF           shift, and go to state 31
    TYPEID            shift, and go to state 272
    TYPENAME          shift, and go to state 32
    UNION             shift, and go to state 33
    UNSIGNED          shift, and go to state 34
    USING             shift, and go to state 35
    VIRTUAL           shift, and go to state 36
    VOID              shift, and go to state 37
    VOLATILE          shift, and go to state 38
    WCHAR_T           shift, and go to state 39
    WHILE             shift, and go to state 502
    '('               shift, and go to state 273
    '{'               shift, and go to state 332
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    $default  reduce using rule 466 (expression_opt)

    typedef_name                go to state 46
    namespace_name              go to state 47
    original_namespace_name     go to state 48
    class_name                  go to state 49
    enum_name                   go to state 50
    template_name               go to state 51
    identifier                  go to state 503
    literal                     go to state 281
    integer_literal             go to state 282
    character_literal           go to state 283
    floating_literal            go to state 284
    string_literal              go to state 285
    boolean_literal             go to state 286
    primary_expression          go to state 287
    id_expression               go to state 288
    unqualified_id              go to state 55
    qualified_id                go to state 56
    nested_name_specifier       go to state 289
    postfix_expression          go to state 290
    unary_expression            go to state 291
    unary_operator              go to state 292
    new_expression              go to state 293
    delete_expression           go to state 294
    cast_expression             go to state 295
    pm_expression               go to state 296
    multiplicative_expression   go to state 297
    additive_expression         go to state 298
    shift_expression            go to state 299
    relational_expression       go to state 300
    equality_expression         go to state 301
    and_expression              go to state 302
    exclusive_or_expression     go to state 303
    inclusive_or_expression     go to state 304
    logical_and_expression      go to state 305
    logical_or_expression       go to state 306
    conditional_expression      go to state 307
    assignment_expression       go to state 426
    expression                  go to state 504
    statement                   go to state 828
    labeled_statement           go to state 506
    expression_statement        go to state 507
    compound_statement          go to state 508
    selection_statement         go to state 510
    iteration_statement         go to state 511
    jump_statement              go to state 512
    declaration_statement       go to state 513
    block_declaration           go to state 514
    simple_declaration          go to state 61
    decl_specifier              go to state 62
    decl_specifier_seq          go to state 515
    storage_class_specifier     go to state 64
    function_specifier          go to state 65
    type_specifier              go to state 66
    simple_type_specifier       go to state 67
    type_name                   go to state 68
    elaborated_type_specifier   go to state 69
    enum_specifier              go to state 70
    namespace_alias_definition  go to state 76
    using_declaration           go to state 77
    using_directive             go to state 78
    asm_definition              go to state 79
    cv_qualifier                go to state 84
    class_specifier             go to state 87
    class_head                  go to state 88
    class_key                   go to state 89
    conversion_function_id      go to state 90
    operator_function_id        go to state 91
    template_id                 go to state 93
    try_block                   go to state 516
    throw_expression            go to state 313
    expression_opt              go to state 517


State 797

  158 iteration_statement: WHILE '(' condition ')' . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 4
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    ASM               shift, and go to state 6
    AUTO              shift, and go to state 7
    BOOL              shift, and go to state 8
    BREAK             shift, and go to state 490
    CASE              shift, and go to state 491
    CHAR              shift, and go to state 9
    CLASS             shift, and go to state 10
    CONST             shift, and go to state 11
    CONST_CAST        shift, and go to state 261
    CONTINUE          shift, and go to state 492
    DEFAULT           shift, and go to state 493
    DELETE            shift, and go to state 262
    DO                shift, and go to state 494
    DOUBLE            shift, and go to state 12
    DYNAMIC_CAST      shift, and go to state 263
    ENUM              shift, and go to state 13
    EXPLICIT          shift, and go to state 14
    EXTERN            shift, and go to state 185
    FALSE             shift, and go to state 264
    FLOAT             shift, and go to state 17
    FOR               shift, and go to state 495
    FRIEND            shift, and go to state 18
    GOTO              shift, and go to state 496
    IF                shift, and go to state 497
    INLINE            shift, and go to state 19
    INT               shift, and go to state 20
    LONG              shift, and go to state 21
    MUTABLE           shift, and go to state 22
    NAMESPACE         shift, and go to state 498
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REGISTER          shift, and go to state 25
    REINTERPRET_CAST  shift, and go to state 266
    RETURN            shift, and go to state 499
    SHORT             shift, and go to state 26
    SIGNED            shift, and go to state 27
    SIZEOF            shift, and go to state 267
    STATIC            shift, and go to state 28
    STATIC_CAST       shift, and go to state 268
    STRUCT            shift, and go to state 29
    SWITCH            shift, and go to state 500
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TRY               shift, and go to state 501
    TYPEDEF           shift, and go to state 31
    TYPEID            shift, and go to state 272
    TYPENAME          shift, and go to state 32
    UNION             shift, and go to state 33
    UNSIGNED          shift, and go to state 34
    USING             shift, and go to state 35
    VIRTUAL           shift, and go to state 36
    VOID              shift, and go to state 37
    VOLATILE          shift, and go to state 38
    WCHAR_T           shift, and go to state 39
    WHILE             shift, and go to state 502
    '('               shift, and go to state 273
    '{'               shift, and go to state 332
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    $default  reduce using rule 466 (expression_opt)

    typedef_name                go to state 46
    namespace_name              go to state 47
    original_namespace_name     go to state 48
    class_name                  go to state 49
    enum_name                   go to state 50
    template_name               go to state 51
    identifier                  go to state 503
    literal                     go to state 281
    integer_literal             go to state 282
    character_literal           go to state 283
    floating_literal            go to state 284
    string_literal              go to state 285
    boolean_literal             go to state 286
    primary_expression          go to state 287
    id_expression               go to state 288
    unqualified_id              go to state 55
    qualified_id                go to state 56
    nested_name_specifier       go to state 289
    postfix_expression          go to state 290
    unary_expression            go to state 291
    unary_operator              go to state 292
    new_expression              go to state 293
    delete_expression           go to state 294
    cast_expression             go to state 295
    pm_expression               go to state 296
    multiplicative_expression   go to state 297
    additive_expression         go to state 298
    shift_expression            go to state 299
    relational_expression       go to state 300
    equality_expression         go to state 301
    and_expression              go to state 302
    exclusive_or_expression     go to state 303
    inclusive_or_expression     go to state 304
    logical_and_expression      go to state 305
    logical_or_expression       go to state 306
    conditional_expression      go to state 307
    assignment_expression       go to state 426
    expression                  go to state 504
    statement                   go to state 829
    labeled_statement           go to state 506
    expression_statement        go to state 507
    compound_statement          go to state 508
    selection_statement         go to state 510
    iteration_statement         go to state 511
    jump_statement              go to state 512
    declaration_statement       go to state 513
    block_declaration           go to state 514
    simple_declaration          go to state 61
    decl_specifier              go to state 62
    decl_specifier_seq          go to state 515
    storage_class_specifier     go to state 64
    function_specifier          go to state 65
    type_specifier              go to state 66
    simple_type_specifier       go to state 67
    type_name                   go to state 68
    elaborated_type_specifier   go to state 69
    enum_specifier              go to state 70
    namespace_alias_definition  go to state 76
    using_declaration           go to state 77
    using_directive             go to state 78
    asm_definition              go to state 79
    cv_qualifier                go to state 84
    class_specifier             go to state 87
    class_head                  go to state 88
    class_key                   go to state 89
    conversion_function_id      go to state 90
    operator_function_id        go to state 91
    template_id                 go to state 93
    try_block                   go to state 516
    throw_expression            go to state 313
    expression_opt              go to state 517


State 798

  450 type_id_list: type_id .

    $default  reduce using rule 450 (type_id_list)


State 799

  451 type_id_list: type_id_list . ',' type_id
  501 type_id_list_opt: type_id_list .

    ','  shift, and go to state 830

    $default  reduce using rule 501 (type_id_list_opt)


State 800

  449 exception_specification: THROW '(' type_id_list_opt . ')'

    ')'  shift, and go to state 831


State 801

  357 base_specifier: VIRTUAL COLONCOLON nested_name_specifier_opt class_name .

    $default  reduce using rule 357 (base_specifier)


State 802

  355 base_specifier: VIRTUAL access_specifier COLONCOLON nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 100
    TEMPLATE_NAME  shift, and go to state 45

    class_name     go to state 832
    template_name  go to state 51
    template_id    go to state 93


State 803

  356 base_specifier: VIRTUAL access_specifier nested_name_specifier_opt class_name .

    $default  reduce using rule 356 (base_specifier)


State 804

  361 base_specifier: access_specifier COLONCOLON nested_name_specifier_opt class_name .

    $default  reduce using rule 361 (base_specifier)


State 805

  359 base_specifier: access_specifier VIRTUAL COLONCOLON nested_name_specifier_opt . class_name

    CLASS_NAME     shift, and go to state 100
    TEMPLATE_NAME  shift, and go to state 45

    class_name     go to state 833
    template_name  go to state 51
    template_id    go to state 93


State 806

  360 base_specifier: access_specifier VIRTUAL nested_name_specifier_opt class_name .

    $default  reduce using rule 360 (base_specifier)


State 807

  427 type_parameter: CLASS identifier '=' type_id .

    $default  reduce using rule 427 (type_parameter)


State 808

  430 type_parameter: TEMPLATE '<' template_parameter_list '>' . CLASS identifier
  431               | TEMPLATE '<' template_parameter_list '>' . CLASS identifier '=' template_name

    CLASS  shift, and go to state 834


State 809

  429 type_parameter: TYPENAME identifier '=' type_id .

    $default  reduce using rule 429 (type_parameter)


State 810

  293 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause ')' cv_qualifier_seq . exception_specification
  294                           | direct_abstract_declarator_opt '(' parameter_declaration_clause ')' cv_qualifier_seq .

    THROW  shift, and go to state 658

    $default  reduce using rule 294 (direct_abstract_declarator)

    exception_specification  go to state 835


State 811

  295 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause ')' exception_specification .

    $default  reduce using rule 295 (direct_abstract_declarator)


State 812

   74 new_expression: COLONCOLON NEW new_placement_opt '(' type_id ')' . new_initializer_opt

    '('  shift, and go to state 704

    $default  reduce using rule 462 (new_initializer_opt)

    new_initializer      go to state 705
    new_initializer_opt  go to state 836


State 813

   52 postfix_expression: CONST_CAST '<' type_id '>' '(' expression . ')'
  136 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 837
    ','  shift, and go to state 596


State 814

   49 postfix_expression: DYNAMIC_CAST '<' type_id '>' '(' expression . ')'
  136 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 838
    ','  shift, and go to state 596


State 815

   73 new_expression: NEW new_placement_opt '(' type_id ')' new_initializer_opt .

    $default  reduce using rule 73 (new_expression)


State 816

   81 new_initializer: '(' expression_list_opt ')' .

    $default  reduce using rule 81 (new_initializer)


State 817

   79 direct_new_declarator: '[' expression ']' .

    $default  reduce using rule 79 (direct_new_declarator)


State 818

   80 direct_new_declarator: direct_new_declarator '[' constant_expression . ']'

    ']'  shift, and go to state 839


State 819

   51 postfix_expression: REINTERPRET_CAST '<' type_id '>' '(' expression . ')'
  136 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 840
    ','  shift, and go to state 596


State 820

   50 postfix_expression: STATIC_CAST '<' type_id '>' '(' expression . ')'
  136 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 841
    ','  shift, and go to state 596


State 821

  444 exception_declaration: type_specifier_seq declarator .

    $default  reduce using rule 444 (exception_declaration)


State 822

  445 exception_declaration: type_specifier_seq abstract_declarator .

    $default  reduce using rule 445 (exception_declaration)


State 823

  443 handler: CATCH '(' exception_declaration ')' . compound_statement

    '{'  shift, and go to state 332

    compound_statement  go to state 842


State 824

  136 expression: expression . ',' assignment_expression
  159 iteration_statement: DO statement WHILE '(' expression . ')' ';'

    ')'  shift, and go to state 843
    ','  shift, and go to state 596


State 825

  160 iteration_statement: FOR '(' for_init_statement condition_opt ';' . expression_opt ')' statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    $default  reduce using rule 466 (expression_opt)

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 426
    expression                 go to state 504
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 313
    expression_opt             go to state 844


State 826

  153 selection_statement: IF '(' condition ')' statement .
  154                    | IF '(' condition ')' statement . ELSE statement

    ELSE  shift, and go to state 845

    ELSE      [reduce using rule 153 (selection_statement)]
    $default  reduce using rule 153 (selection_statement)


State 827

  157 condition: type_specifier_seq declarator '=' . assignment_expression

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    CLASS_NAME        shift, and go to state 100
    COLONCOLON        shift, and go to state 336
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    CONST_CAST        shift, and go to state 261
    DELETE            shift, and go to state 262
    DYNAMIC_CAST      shift, and go to state 263
    FALSE             shift, and go to state 264
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REINTERPRET_CAST  shift, and go to state 266
    SIZEOF            shift, and go to state 267
    STATIC_CAST       shift, and go to state 268
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TYPEID            shift, and go to state 272
    '('               shift, and go to state 273
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 107
    template_name              go to state 51
    identifier                 go to state 52
    literal                    go to state 281
    integer_literal            go to state 282
    character_literal          go to state 283
    floating_literal           go to state 284
    string_literal             go to state 285
    boolean_literal            go to state 286
    primary_expression         go to state 287
    id_expression              go to state 288
    unqualified_id             go to state 55
    qualified_id               go to state 56
    nested_name_specifier      go to state 206
    postfix_expression         go to state 290
    unary_expression           go to state 291
    unary_operator             go to state 292
    new_expression             go to state 293
    delete_expression          go to state 294
    cast_expression            go to state 295
    pm_expression              go to state 296
    multiplicative_expression  go to state 297
    additive_expression        go to state 298
    shift_expression           go to state 299
    relational_expression      go to state 300
    equality_expression        go to state 301
    and_expression             go to state 302
    exclusive_or_expression    go to state 303
    inclusive_or_expression    go to state 304
    logical_and_expression     go to state 305
    logical_or_expression      go to state 306
    conditional_expression     go to state 307
    assignment_expression      go to state 846
    conversion_function_id     go to state 90
    operator_function_id       go to state 91
    template_id                go to state 93
    throw_expression           go to state 313


State 828

  155 selection_statement: SWITCH '(' condition ')' statement .

    $default  reduce using rule 155 (selection_statement)


State 829

  158 iteration_statement: WHILE '(' condition ')' statement .

    $default  reduce using rule 158 (iteration_statement)


State 830

  451 type_id_list: type_id_list ',' . type_id

    TYPEDEF_NAME    shift, and go to state 2
    CLASS_NAME      shift, and go to state 100
    ENUM_NAME       shift, and go to state 4
    COLONCOLON      shift, and go to state 115
    BOOL            shift, and go to state 8
    CHAR            shift, and go to state 9
    CLASS           shift, and go to state 10
    CONST           shift, and go to state 11
    DOUBLE          shift, and go to state 12
    ENUM            shift, and go to state 13
    FLOAT           shift, and go to state 17
    INT             shift, and go to state 20
    LONG            shift, and go to state 21
    SHORT           shift, and go to state 26
    SIGNED          shift, and go to state 27
    STRUCT          shift, and go to state 29
    TYPENAME        shift, and go to state 32
    UNION           shift, and go to state 33
    UNSIGNED        shift, and go to state 34
    VOID            shift, and go to state 37
    VOLATILE        shift, and go to state 38
    WCHAR_T         shift, and go to state 39
    NAMESPACE_NAME  shift, and go to state 44
    TEMPLATE_NAME   shift, and go to state 45

    typedef_name               go to state 46
    namespace_name             go to state 47
    original_namespace_name    go to state 48
    class_name                 go to state 49
    enum_name                  go to state 50
    template_name              go to state 51
    nested_name_specifier      go to state 156
    type_specifier             go to state 157
    simple_type_specifier      go to state 67
    type_name                  go to state 68
    elaborated_type_specifier  go to state 69
    enum_specifier             go to state 70
    cv_qualifier               go to state 84
    type_id                    go to state 847
    type_specifier_seq         go to state 310
    class_specifier            go to state 87
    class_head                 go to state 88
    class_key                  go to state 89
    template_id                go to state 93


State 831

  449 exception_specification: THROW '(' type_id_list_opt ')' .

    $default  reduce using rule 449 (exception_specification)


State 832

  355 base_specifier: VIRTUAL access_specifier COLONCOLON nested_name_specifier_opt class_name .

    $default  reduce using rule 355 (base_specifier)


State 833

  359 base_specifier: access_specifier VIRTUAL COLONCOLON nested_name_specifier_opt class_name .

    $default  reduce using rule 359 (base_specifier)


State 834

  430 type_parameter: TEMPLATE '<' template_parameter_list '>' CLASS . identifier
  431               | TEMPLATE '<' template_parameter_list '>' CLASS . identifier '=' template_name

    IDENTIFIER  shift, and go to state 1

    identifier  go to state 848


State 835

  293 direct_abstract_declarator: direct_abstract_declarator_opt '(' parameter_declaration_clause ')' cv_qualifier_seq exception_specification .

    $default  reduce using rule 293 (direct_abstract_declarator)


State 836

   74 new_expression: COLONCOLON NEW new_placement_opt '(' type_id ')' new_initializer_opt .

    $default  reduce using rule 74 (new_expression)


State 837

   52 postfix_expression: CONST_CAST '<' type_id '>' '(' expression ')' .

    $default  reduce using rule 52 (postfix_expression)


State 838

   49 postfix_expression: DYNAMIC_CAST '<' type_id '>' '(' expression ')' .

    $default  reduce using rule 49 (postfix_expression)


State 839

   80 direct_new_declarator: direct_new_declarator '[' constant_expression ']' .

    $default  reduce using rule 80 (direct_new_declarator)


State 840

   51 postfix_expression: REINTERPRET_CAST '<' type_id '>' '(' expression ')' .

    $default  reduce using rule 51 (postfix_expression)


State 841

   50 postfix_expression: STATIC_CAST '<' type_id '>' '(' expression ')' .

    $default  reduce using rule 50 (postfix_expression)


State 842

  443 handler: CATCH '(' exception_declaration ')' compound_statement .

    $default  reduce using rule 443 (handler)


State 843

  159 iteration_statement: DO statement WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 849


State 844

  160 iteration_statement: FOR '(' for_init_statement condition_opt ';' expression_opt . ')' statement

    ')'  shift, and go to state 850


State 845

  154 selection_statement: IF '(' condition ')' statement ELSE . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 4
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    ASM               shift, and go to state 6
    AUTO              shift, and go to state 7
    BOOL              shift, and go to state 8
    BREAK             shift, and go to state 490
    CASE              shift, and go to state 491
    CHAR              shift, and go to state 9
    CLASS             shift, and go to state 10
    CONST             shift, and go to state 11
    CONST_CAST        shift, and go to state 261
    CONTINUE          shift, and go to state 492
    DEFAULT           shift, and go to state 493
    DELETE            shift, and go to state 262
    DO                shift, and go to state 494
    DOUBLE            shift, and go to state 12
    DYNAMIC_CAST      shift, and go to state 263
    ENUM              shift, and go to state 13
    EXPLICIT          shift, and go to state 14
    EXTERN            shift, and go to state 185
    FALSE             shift, and go to state 264
    FLOAT             shift, and go to state 17
    FOR               shift, and go to state 495
    FRIEND            shift, and go to state 18
    GOTO              shift, and go to state 496
    IF                shift, and go to state 497
    INLINE            shift, and go to state 19
    INT               shift, and go to state 20
    LONG              shift, and go to state 21
    MUTABLE           shift, and go to state 22
    NAMESPACE         shift, and go to state 498
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REGISTER          shift, and go to state 25
    REINTERPRET_CAST  shift, and go to state 266
    RETURN            shift, and go to state 499
    SHORT             shift, and go to state 26
    SIGNED            shift, and go to state 27
    SIZEOF            shift, and go to state 267
    STATIC            shift, and go to state 28
    STATIC_CAST       shift, and go to state 268
    STRUCT            shift, and go to state 29
    SWITCH            shift, and go to state 500
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TRY               shift, and go to state 501
    TYPEDEF           shift, and go to state 31
    TYPEID            shift, and go to state 272
    TYPENAME          shift, and go to state 32
    UNION             shift, and go to state 33
    UNSIGNED          shift, and go to state 34
    USING             shift, and go to state 35
    VIRTUAL           shift, and go to state 36
    VOID              shift, and go to state 37
    VOLATILE          shift, and go to state 38
    WCHAR_T           shift, and go to state 39
    WHILE             shift, and go to state 502
    '('               shift, and go to state 273
    '{'               shift, and go to state 332
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    $default  reduce using rule 466 (expression_opt)

    typedef_name                go to state 46
    namespace_name              go to state 47
    original_namespace_name     go to state 48
    class_name                  go to state 49
    enum_name                   go to state 50
    template_name               go to state 51
    identifier                  go to state 503
    literal                     go to state 281
    integer_literal             go to state 282
    character_literal           go to state 283
    floating_literal            go to state 284
    string_literal              go to state 285
    boolean_literal             go to state 286
    primary_expression          go to state 287
    id_expression               go to state 288
    unqualified_id              go to state 55
    qualified_id                go to state 56
    nested_name_specifier       go to state 289
    postfix_expression          go to state 290
    unary_expression            go to state 291
    unary_operator              go to state 292
    new_expression              go to state 293
    delete_expression           go to state 294
    cast_expression             go to state 295
    pm_expression               go to state 296
    multiplicative_expression   go to state 297
    additive_expression         go to state 298
    shift_expression            go to state 299
    relational_expression       go to state 300
    equality_expression         go to state 301
    and_expression              go to state 302
    exclusive_or_expression     go to state 303
    inclusive_or_expression     go to state 304
    logical_and_expression      go to state 305
    logical_or_expression       go to state 306
    conditional_expression      go to state 307
    assignment_expression       go to state 426
    expression                  go to state 504
    statement                   go to state 851
    labeled_statement           go to state 506
    expression_statement        go to state 507
    compound_statement          go to state 508
    selection_statement         go to state 510
    iteration_statement         go to state 511
    jump_statement              go to state 512
    declaration_statement       go to state 513
    block_declaration           go to state 514
    simple_declaration          go to state 61
    decl_specifier              go to state 62
    decl_specifier_seq          go to state 515
    storage_class_specifier     go to state 64
    function_specifier          go to state 65
    type_specifier              go to state 66
    simple_type_specifier       go to state 67
    type_name                   go to state 68
    elaborated_type_specifier   go to state 69
    enum_specifier              go to state 70
    namespace_alias_definition  go to state 76
    using_declaration           go to state 77
    using_directive             go to state 78
    asm_definition              go to state 79
    cv_qualifier                go to state 84
    class_specifier             go to state 87
    class_head                  go to state 88
    class_key                   go to state 89
    conversion_function_id      go to state 90
    operator_function_id        go to state 91
    template_id                 go to state 93
    try_block                   go to state 516
    throw_expression            go to state 313
    expression_opt              go to state 517


State 846

  157 condition: type_specifier_seq declarator '=' assignment_expression .

    $default  reduce using rule 157 (condition)


State 847

  451 type_id_list: type_id_list ',' type_id .

    $default  reduce using rule 451 (type_id_list)


State 848

  430 type_parameter: TEMPLATE '<' template_parameter_list '>' CLASS identifier .
  431               | TEMPLATE '<' template_parameter_list '>' CLASS identifier . '=' template_name

    '='  shift, and go to state 852

    $default  reduce using rule 430 (type_parameter)


State 849

  159 iteration_statement: DO statement WHILE '(' expression ')' ';' .

    $default  reduce using rule 159 (iteration_statement)


State 850

  160 iteration_statement: FOR '(' for_init_statement condition_opt ';' expression_opt ')' . statement

    IDENTIFIER        shift, and go to state 1
    INTEGER           shift, and go to state 255
    FLOATING          shift, and go to state 256
    CHARACTER         shift, and go to state 257
    STRING            shift, and go to state 110
    TYPEDEF_NAME      shift, and go to state 2
    CLASS_NAME        shift, and go to state 100
    ENUM_NAME         shift, and go to state 4
    COLONCOLON        shift, and go to state 258
    PLUSPLUS          shift, and go to state 259
    MINUSMINUS        shift, and go to state 260
    ASM               shift, and go to state 6
    AUTO              shift, and go to state 7
    BOOL              shift, and go to state 8
    BREAK             shift, and go to state 490
    CASE              shift, and go to state 491
    CHAR              shift, and go to state 9
    CLASS             shift, and go to state 10
    CONST             shift, and go to state 11
    CONST_CAST        shift, and go to state 261
    CONTINUE          shift, and go to state 492
    DEFAULT           shift, and go to state 493
    DELETE            shift, and go to state 262
    DO                shift, and go to state 494
    DOUBLE            shift, and go to state 12
    DYNAMIC_CAST      shift, and go to state 263
    ENUM              shift, and go to state 13
    EXPLICIT          shift, and go to state 14
    EXTERN            shift, and go to state 185
    FALSE             shift, and go to state 264
    FLOAT             shift, and go to state 17
    FOR               shift, and go to state 495
    FRIEND            shift, and go to state 18
    GOTO              shift, and go to state 496
    IF                shift, and go to state 497
    INLINE            shift, and go to state 19
    INT               shift, and go to state 20
    LONG              shift, and go to state 21
    MUTABLE           shift, and go to state 22
    NAMESPACE         shift, and go to state 498
    NEW               shift, and go to state 265
    OPERATOR          shift, and go to state 24
    REGISTER          shift, and go to state 25
    REINTERPRET_CAST  shift, and go to state 266
    RETURN            shift, and go to state 499
    SHORT             shift, and go to state 26
    SIGNED            shift, and go to state 27
    SIZEOF            shift, and go to state 267
    STATIC            shift, and go to state 28
    STATIC_CAST       shift, and go to state 268
    STRUCT            shift, and go to state 29
    SWITCH            shift, and go to state 500
    THIS              shift, and go to state 269
    THROW             shift, and go to state 270
    TRUE              shift, and go to state 271
    TRY               shift, and go to state 501
    TYPEDEF           shift, and go to state 31
    TYPEID            shift, and go to state 272
    TYPENAME          shift, and go to state 32
    UNION             shift, and go to state 33
    UNSIGNED          shift, and go to state 34
    USING             shift, and go to state 35
    VIRTUAL           shift, and go to state 36
    VOID              shift, and go to state 37
    VOLATILE          shift, and go to state 38
    WCHAR_T           shift, and go to state 39
    WHILE             shift, and go to state 502
    '('               shift, and go to state 273
    '{'               shift, and go to state 332
    '&'               shift, and go to state 274
    '+'               shift, and go to state 275
    '-'               shift, and go to state 276
    '*'               shift, and go to state 277
    '!'               shift, and go to state 278
    '~'               shift, and go to state 279
    NAMESPACE_NAME    shift, and go to state 44
    TEMPLATE_NAME     shift, and go to state 45

    $default  reduce using rule 466 (expression_opt)

    typedef_name                go to state 46
    namespace_name              go to state 47
    original_namespace_name     go to state 48
    class_name                  go to state 49
    enum_name                   go to state 50
    template_name               go to state 51
    identifier                  go to state 503
    literal                     go to state 281
    integer_literal             go to state 282
    character_literal           go to state 283
    floating_literal            go to state 284
    string_literal              go to state 285
    boolean_literal             go to state 286
    primary_expression          go to state 287
    id_expression               go to state 288
    unqualified_id              go to state 55
    qualified_id                go to state 56
    nested_name_specifier       go to state 289
    postfix_expression          go to state 290
    unary_expression            go to state 291
    unary_operator              go to state 292
    new_expression              go to state 293
    delete_expression           go to state 294
    cast_expression             go to state 295
    pm_expression               go to state 296
    multiplicative_expression   go to state 297
    additive_expression         go to state 298
    shift_expression            go to state 299
    relational_expression       go to state 300
    equality_expression         go to state 301
    and_expression              go to state 302
    exclusive_or_expression     go to state 303
    inclusive_or_expression     go to state 304
    logical_and_expression      go to state 305
    logical_or_expression       go to state 306
    conditional_expression      go to state 307
    assignment_expression       go to state 426
    expression                  go to state 504
    statement                   go to state 853
    labeled_statement           go to state 506
    expression_statement        go to state 507
    compound_statement          go to state 508
    selection_statement         go to state 510
    iteration_statement         go to state 511
    jump_statement              go to state 512
    declaration_statement       go to state 513
    block_declaration           go to state 514
    simple_declaration          go to state 61
    decl_specifier              go to state 62
    decl_specifier_seq          go to state 515
    storage_class_specifier     go to state 64
    function_specifier          go to state 65
    type_specifier              go to state 66
    simple_type_specifier       go to state 67
    type_name                   go to state 68
    elaborated_type_specifier   go to state 69
    enum_specifier              go to state 70
    namespace_alias_definition  go to state 76
    using_declaration           go to state 77
    using_directive             go to state 78
    asm_definition              go to state 79
    cv_qualifier                go to state 84
    class_specifier             go to state 87
    class_head                  go to state 88
    class_key                   go to state 89
    conversion_function_id      go to state 90
    operator_function_id        go to state 91
    template_id                 go to state 93
    try_block                   go to state 516
    throw_expression            go to state 313
    expression_opt              go to state 517


State 851

  154 selection_statement: IF '(' condition ')' statement ELSE statement .

    $default  reduce using rule 154 (selection_statement)


State 852

  431 type_parameter: TEMPLATE '<' template_parameter_list '>' CLASS identifier '=' . template_name

    TEMPLATE_NAME  shift, and go to state 45

    template_name  go to state 854


State 853

  160 iteration_statement: FOR '(' for_init_statement condition_opt ';' expression_opt ')' statement .

    $default  reduce using rule 160 (iteration_statement)


State 854

  431 type_parameter: TEMPLATE '<' template_parameter_list '>' CLASS identifier '=' template_name .

    $default  reduce using rule 431 (type_parameter)
